<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.prosolo</groupId>
		<artifactId>prosolo-multimodule</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>prosolo-analytics</artifactId>
	<name>ProSolo Analytics</name>
	<packaging>war</packaging>
	<properties>
		<jersey.version>2.8</jersey.version>
		<resteasy.version>3.0.9.Final</resteasy.version>
		<jetty.version>9.3.7.v20160115</jetty.version>
		<jersey.version>1.19.1</jersey.version>
		<jersey2.version>2.23</jersey2.version>
		<jaxrs.version>2.0.1</jaxrs.version>
		<!--jetty.version>8.1.16.v20140903</jetty.version-->
		<spark.version>1.6.1</spark.version>
		<scala.version>2.11.6</scala.version>
		<quartz.version>2.2.1</quartz.version>
		<twitter4j.version>4.0.4</twitter4j.version>
		<mahout.version>0.9</mahout.version>
	    <spark-cassandra-connector.version>1.5.0</spark-cassandra-connector.version>
	</properties>
	<repositories>
		<!-- boilerpipe repo -->
		<!--repository>
			<id>boilerpipe-m2-repo</id>
			<url>https://boilerpipe.googlecode.com/svn/repo/</url>
		</repository-->
		<repository>
			<id>clojars.org</id>
			<url>http://clojars.org/repo</url>
		</repository>
		<repository>
			<id>conjars.org</id>
			<url>http://conjars.org/repo</url>
		</repository>
		<repository>
			<id>scala-tools.org</id>
			<name>Scala-tools Maven2 Repository</name>
			<url>http://scala-tools.org/repo-releases</url>
		</repository>
		<repository>
			<id>Jahmm</id>
			<name>Jahmm HMM library repository</name>
			<url>http://jahmm.googlecode.com/svn/repo</url>
		</repository>
		<repository>
			<id>prosolo-local-repository</id>
			<url>https://bitbucket.org/zjeremic/repo.prosolo.ca/raw/master/repository/</url>
		</repository>

	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>scala-tools.org</id>
			<name>Scala-tools Maven2 Repository</name>
			<url>http://scala-tools.org/repo-releases</url>
		</pluginRepository>
	</pluginRepositories>
	<dependencies>
		<!-- <dependency> -->
		<!-- <groupId>javax.annotation</groupId> -->
		<!-- <artifactId>jsr250-api</artifactId> -->
		<!-- <version>1.0</version> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>jstl</groupId> -->
		<!-- <artifactId>jstl</artifactId> -->
		<!-- <version>1.2</version> -->
		<!-- </dependency> -->
		<!--local prosolo repository dependencies-->
		<dependency>
			<groupId>ca.prosolo.local</groupId>
			<artifactId>boilerpipe-1.2.0</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>ca.prosolo.local</groupId>
			<artifactId>jahmm-0.6.2</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.5</version>
		</dependency>
		<dependency>
			<groupId>org.prosolo</groupId>
			<artifactId>bigdata.common</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>


		<!-- RabbitMQ dependencies -->
		<dependency>
			<groupId>com.rabbitmq</groupId>
			<artifactId>amqp-client</artifactId>
			<version>3.5.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j.adapters</groupId>
			<artifactId>log4j-to-slf4j</artifactId>
			<version>2.0-beta4</version>
		</dependency>

		<!-- Cassandra dependencies -->
		<dependency>
			<groupId>com.datastax.cassandra</groupId>
			<artifactId>cassandra-driver-core</artifactId>
			<version>3.0.0</version>
			<exclusions>
				<exclusion>
					<artifactId>guava</artifactId>
					<groupId>com.google.guava</groupId>
				</exclusion>
			</exclusions>
			<!--version>2.1.4</version-->
		</dependency>
		<!-- MySQL dependencies -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.35</version>
			<scope>runtime</scope>
		</dependency>
		<!-- JSON -->
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>

		<!-- Gson dependencies -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.2</version>
		</dependency>
		<!-- Simpleframework dependencies -->
		<dependency>
			<groupId>org.simpleframework</groupId>
			<artifactId>simple-xml</artifactId>
			<version>2.7.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>

		<!--dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
		</dependency-->
		<!-- RESTful API dependencies -->
		<!--dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-json-p-provider</artifactId>
			<version>${resteasy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>${resteasy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson-provider</artifactId>
			<version>${resteasy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-servlet-initializer</artifactId>
			<version>${resteasy.version}</version>
		</dependency-->

		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>${jaxrs.version}</version>
		</dependency>
		<!-- Jersey 2.19 -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${jersey2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-bean-validation</artifactId>
			<version>${jersey2.version}</version>
		</dependency>


		<!-- Spark dependencies -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_2.11</artifactId>
			<version>${spark.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>jersey-server</artifactId>
					<groupId>com.sun.jersey</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jersey-core</artifactId>
					<groupId>com.sun.jersey</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming_2.11</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_2.11</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib_2.11</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.spark/spark-sql_2.11 -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_2.11</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<!-- dependency> <groupId>org.apache.spark</groupId> <artifactId>spark-streaming-twitter_2.11</artifactId> 
			<version>${spark.version}</version> </dependency -->

		<!-- Twitter4j dependencies -->
		<dependency>
			<groupId>org.twitter4j</groupId>
			<artifactId>twitter4j-core</artifactId>
			<version>${twitter4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.twitter4j</groupId>
			<artifactId>twitter4j-stream</artifactId>
			<version>${twitter4j.version}</version>
		</dependency>


		<!-- <dependency> -->
		<!-- <groupId>org.apache.spark</groupId> -->
		<!-- <artifactId>spark-streaming_2.11</artifactId> -->
		<!-- <version>${spark.version}</version> -->
		<!-- scope>compile</scope -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.xerial.snappy</groupId>
			<artifactId>snappy-java</artifactId>
			<version>1.1.1.6</version>
		</dependency>

		<!--Scala dependencies -->
		<!-- <dependency> -->
		<!-- <groupId>org.scala-lang</groupId> -->
		<!-- <artifactId>scala-library</artifactId> -->
		<!-- <version>${scala.version}</version> -->
		<!-- </dependency> -->
		<!-- Scala dependencies - used by Spark -->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-compiler</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_2.11</artifactId>
			<version>3.0.0-M7</version>
		</dependency>

		<!-- Quartz dependencies -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${quartz.version}</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz-jobs</artifactId>
			<version>${quartz.version}</version>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>org.scalatest</groupId> -->
		<!-- <artifactId>scalatest_2.11</artifactId> -->
		<!-- <version>3.0.0-M7</version> -->
		<!-- <scope>test</scope> -->
		<!-- </dependency> -->
		<!-- jsoup - URL Scrapper -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.7.2</version>
		</dependency>
		<!-- ROME for RSS feeds -->
		<dependency>
			<groupId>rome</groupId>
			<artifactId>rome</artifactId>
			<version>1.0</version>
		</dependency>
		<!-- boilerpipe -->
		<!--dependency>
			<groupId>de.l3s.boilerpipe</groupId>
			<artifactId>boilerpipe</artifactId>
			<version>1.1.0</version>
		</dependency-->
		<dependency>
			<groupId>net.sourceforge.nekohtml</groupId>
			<artifactId>nekohtml</artifactId>
			<version>1.9.18</version>
		</dependency>
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.11.0</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<!-- Hadoop dependencies -->
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-core</artifactId>
			<version>1.2.1</version>
			<exclusions>
			<exclusion>
				<artifactId>jetty</artifactId>
				<groupId>org.mortbay.jetty</groupId>
			</exclusion>
				<exclusion>
					<artifactId>servlet-api-2.5</artifactId>
					<groupId>org.mortbay.jetty</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Mahout dependencies -->
		<dependency>
			<groupId>org.apache.mahout</groupId>
			<artifactId>mahout-core</artifactId>
			<version>${mahout.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>lucene-core</artifactId>
					<groupId>org.apache.lucene</groupId>
				</exclusion>
				<exclusion>
					<artifactId>lucene-analyzers-common</artifactId>
					<groupId>org.apache.lucene</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.mahout</groupId>
			<artifactId>mahout-integration</artifactId>
			<version>${mahout.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.mahout</groupId>
			<artifactId>mahout-math</artifactId>
			<version>${mahout.version}</version>
		</dependency>

		<!--Jahmm dependencies-->
		<!--dependency>
			<groupId>be.ac.ulg.montefiore.run.jahmm</groupId>
			<artifactId>jahmm</artifactId>
			<version>0.6.2</version>
		</dependency-->
		<!--Jung dependencies-->
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-graph-impl</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-algorithms</artifactId>
			<version>2.0.1</version>
		</dependency>

		<!--JSON dependencies-->
		<dependency>
			<groupId>org.json4s</groupId>
			<artifactId>json4s-native_2.11</artifactId>
			<version>3.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.json4s</groupId>
			<artifactId>json4s-jackson_2.11</artifactId>
			<version>3.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.play</groupId>
			<artifactId>play-json_2.11</artifactId>
			<version>2.5.0-M1</version>
		</dependency>
		
		<dependency>
  			<groupId>com.github.mifmif</groupId>
  			<artifactId>generex</artifactId>
  			<version>0.0.4</version>
  			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.jblas/jblas -->
		<dependency>
			<groupId>org.jblas</groupId>
			<artifactId>jblas</artifactId>
			<version>1.2.4</version>
		</dependency>

		<!-- dependency> <groupId>com.novemberain</groupId> <artifactId>quartz-mongodb</artifactId> 
			<version>1.5.0</version> </dependency -->
	    
	    <!-- added spark cassandra connector -->
	    <dependency>
			<groupId>com.datastax.spark</groupId>
			<artifactId>spark-cassandra-connector_2.11</artifactId>
			<version>${spark-cassandra-connector.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.datastax.spark</groupId>
		    <artifactId>spark-cassandra-connector-java_2.11</artifactId>
		    <version>${spark-cassandra-connector.version}</version>
		</dependency>
		<dependency>
			<groupId>com.datastax.cassandra</groupId>
			<artifactId>cassandra-driver-core</artifactId>
			<version>3.0.2</version>
			<exclusions>
				<exclusion>
					<artifactId>guava</artifactId>
					<groupId>com.google.guava</groupId>
				</exclusion>
			</exclusions>
			<!--version>2.1.4</version-->
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_2.11</artifactId>
			<version>${spark.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch-spark_2.11 -->
		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>elasticsearch-spark_2.11</artifactId>
			<version>2.3.3</version>
		</dependency>
		<!-- Used for hashing database ids in urls -->
		<dependency>
			<groupId>org.hashids</groupId>
			<artifactId>hashids</artifactId>
			<version>1.0.1</version>
		</dependency>

		<!--dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-juli</artifactId>
			<version>9.0.0.M4</version>
		</dependency-->


	</dependencies>
	<build>
		<finalName>prosolo-analytics</finalName>
		<directory>target</directory>
		<outputDirectory>target/classes</outputDirectory>
		<testOutputDirectory>target/test-classes</testOutputDirectory>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<resources>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
			</resource>

		</resources>
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>

				<filtering>true</filtering>

				<includes>
					<include>**/**</include>
				</includes>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.17</version>
				</plugin>
				<plugin>
					<groupId>org.scala-tools</groupId>
					<artifactId>maven-scala-plugin</artifactId>
					<version>2.15.2</version>
				</plugin>
				<!-- plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-compiler-plugin</artifactId> 
					<version>3.3</version> </plugin -->
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<!-- plugin> <groupId>org.eclipse.m2e</groupId> <artifactId>lifecycle-mapping</artifactId> 
					<version>1.0.0</version> <configuration> <lifecycleMappingMetadata> <pluginExecutions> 
					<pluginExecution> <pluginExecutionFilter> <groupId>org.codehaus.mojo</groupId> 
					<artifactId>keytool-maven-plugin</artifactId> <version>1.5</version> <goals> 
					<goal>compile</goal> </goals> </pluginExecutionFilter> <action> <execute 
					/> </action> </pluginExecution> </pluginExecutions> </lifecycleMappingMetadata> 
					</configuration> </plugin -->
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.scala-tools</groupId>
										<artifactId>maven-scala-plugin</artifactId>
										<versionRange>[2.15.2,)</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>testCompile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>

		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.version}</version>
				<configuration>
					<stopKey>stop</stopKey>
					<stopPort>8081</stopPort>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webAppConfig>
						<parentLoaderPriority>true</parentLoaderPriority>
					</webAppConfig>
					<webApp>
						<contextPath>/</contextPath>

					</webApp>
					<httpConnector>
						<port>8082</port>
					</httpConnector>
			  </configuration>
				</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/java</directory>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<!-- TestNG plugin -->
			<!-- TestNG plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18</version>
				<configuration>
					<argLine>-Xmx4096m -XX:+HeapDumpOnOutOfMemoryError
						-XX:HeapDumpPath=/home/zoran/Desktop/dumps</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<executions>
					<execution>
						<id>scala-compile-first</id>
						<phase>process-resources</phase>
						<goals>
							<goal>add-source</goal>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>scala-test-compile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-compiler-plugin</artifactId> 
				<executions> <execution> <phase>compile</phase> <goals> <goal>compile</goal> 
				</goals> </execution> </executions> </plugin -->

		</plugins>
	</build>
</project>