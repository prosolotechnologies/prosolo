<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="templates/masterLayout2.xhtml"
                xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
                xmlns:util="http://www.prosolo.com/util"
                xmlns:mngComp="http://java.sun.com/jsf/composite/components/manage"
                xmlns:assessment="http://java.sun.com/jsf/composite/components/assessments"
                xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
>

    <ui:define name="windowTitle">
        #{credentialCompetenceAssessmentsBeanManager.credentialTitle} - Assessments
    </ui:define>

    <ui:define name="metadata">
        <f:metadata>
            <f:viewParam name="credentialId" value="#{credentialCompetenceAssessmentsBeanManager.credId}" default="null" />
            <f:viewParam name="competenceId" value="#{credentialCompetenceAssessmentsBeanManager.compId}" default="null"/>
            <f:viewParam name="p" value="#{credentialCompetenceAssessmentsBeanManager.page}" default="1"/>
            <f:viewAction action="#{credentialCompetenceAssessmentsBeanManager.init()}" />
        </f:metadata>
    </ui:define>

    <ui:define name="resourceTitle">
        <h1><span>#{msg['label.delivery']}:</span> #{credentialCompetenceAssessmentsBeanManager.credentialTitle}</h1>
    </ui:define>

    <ui:define name="navLinks">
        <mngComp:credentialsHeaderNavLinks
                id="headerNavLinks"
                credId="#{credentialCompetenceAssessmentsBeanManager.decodedCredId}"
                credType="Delivery"
                canEdit="#{credentialCompetenceAssessmentsBeanManager.canUserEditDelivery()}"
        />
    </ui:define>

    <ui:define name="content">
        <script>
            function markDiscussionAsSeen(assessmentId, el, resource) {
                switch (resource) {
                    case 'ACTIVITY':
                        markActivityDiscussionRead
                        ([{
                            name: 'assessmentEncId',
                            value: assessmentId
                        }]);
                        break;
                    case 'COMPETENCE':
                        markCompetenceAssessmentDiscussionRead
                        ([{
                            name: 'assessmentEncId',
                            value: assessmentId
                        }]);
                        break;
                }
                $(el).removeClass("hasNewComments");
            }

            //comment form hide/show
            function displaySubmitButton(inputElem) {
                if ($(inputElem).val().length == 0) {
                    $(inputElem).parent().find('a.btn-green').addClass('hidden');
                } else {
                    $(inputElem).parent().find('a.btn-green').removeClass('hidden');
                }
            }

            function displaySubmitButtonPrivateConvModal(inputElem) {
                if ($(inputElem).val().length == 0) {
                    $(inputElem).parent().find('a.btn-green').addClass('hidden');
                } else {
                    $(inputElem).parent().find('a.btn-green').removeClass('hidden');
                }
            }
        </script>
        <h:form prependId="false" id="remoteCommandForm">
            <p:remoteCommand process="@this" action="#{credentialCompetenceAssessmentsBeanManager.markActivityAssessmentDiscussionRead()}"
                             name="markActivityDiscussionRead"></p:remoteCommand>
            <p:remoteCommand process="@this" action="#{credentialCompetenceAssessmentsBeanManager.markCompetenceAssessmentDiscussionRead()}"
                             name="markCompetenceAssessmentDiscussionRead"/>
        </h:form>

        <ui:param name="learningContext" value="name:credential|id:#{credentialCompetenceAssessmentsBeanManager.decodedCredId}" />

        <p:growl id="growlMain" showDetail="true" globalOnly="true"></p:growl>

        <div class="whiteBar">

        </div>

        <div class="container">
            <ol class="breadcrumb">
                <li>
                    <h:link value="#{msg['label.credential.plural']}" outcome="/manage/credentialLibrary"/>
                </li>
                <li>
                    <h:link
                            value="#{credentialCompetenceAssessmentsBeanManager.credentialTitle}"
                            outcome="/manage/credential"
                            onclick="sendLogPageNavigation('/manage/credential.xhtml',
							'#{facesContext.viewRoot.viewId}',
							'#{util:addSubContext(learningContext, &#34;name:breadcrumbs&#34;)}',
							'');">
                        <f:param name="id" value="#{param.credentialId}"></f:param>
                    </h:link>
                </li>
                <li>
                    <h:link
                            value="Assessments"
                            outcome="/manage/credential-delivery-assessments"
                            onclick="sendLogPageNavigation('/manage/credential-delivery-assessments.xhtml',
							'#{facesContext.viewRoot.viewId}',
							'#{util:addSubContext(learningContext, &#34;name:breadcrumbs&#34;)}',
							'');">
                        <f:param name="id" value="#{param.credentialId}"></f:param>
                    </h:link>
                </li>
                <li class="active">
                    #{credentialCompetenceAssessmentsBeanManager.assessmentsSummary.title}
                </li>
            </ol>
        </div>

        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <h:panelGroup id = "competenceAssessmentPanel">
                        <ui:fragment rendered="#{empty credentialCompetenceAssessmentsBeanManager.assessmentsSummary.assessments.foundNodes}">
                            <div class="noContentMessage">
                                <p>
                                    No assessments.
                                </p>
                            </div>
                        </ui:fragment>
                        <h:form>
                            <ui:repeat varStatus="compAssIndex" var="competenceAssessment" value="#{credentialCompetenceAssessmentsBeanManager.assessmentsSummary.assessments.foundNodes}">
                                <ui:fragment rendered="#{not competenceAssessment.readOnly}">
                                    <article class="whiteBox summaryCard summaryCompetence summaryAssessments">
                                        <h:panelGroup id="panelAssessorNotificationComp" styleClass="panelAssessorNotificationSelector">
                                            <h:panelGroup layout="block" styleClass="innerWrapper" rendered="#{competenceAssessment.assessorNotified}">
                                                <div class="alert alert-warning alert-dismissible fade in bottom0" role="alert">
                                                    <h:commandButton id="btn"
                                                                     type="button"
                                                                     styleClass="close"
                                                                     pt:data-dismiss="alert"
                                                                     pt:aria-label="Close"
                                                                     value="&#215;"
                                                                     action="#{credentialCompetenceAssessmentsBeanManager.removeAssessorNotification(competenceAssessment)}">
                                                        <f:ajax execute="@this" render="panelAssessorNotificationComp :growlMain" />
                                                    </h:commandButton>
                                                    Student asked for assessment on this #{msg['label.competence'].toLowerCase()}.
                                                </div>
                                            </h:panelGroup>
                                        </h:panelGroup>
                                        <div class="innerWrapper">
                                            <h2 class="bottom0">#{competenceAssessment.title}</h2>
                                            <div class="clear1px"></div>
                                        </div>
                                        <div class="summaryAssessmentsHead #{(!competenceAssessment.participantInDiscussion or competenceAssessment.allRead or competenceAssessment.numberOfMessages eq 0) ? '' : 'hasNewComments'}">
                                            <div class="user32">
                                                <utilcomp:userAvatar
                                                        avatar="#{competenceAssessment.studentAvatarUrl}"
                                                        fullName="#{competenceAssessment.studentFullName}"
                                                />
                                                <h3><a href="javascript:void(0);">#{competenceAssessment.studentFullName}</a></h3>
                                            </div>
                                            <h:panelGroup layout="block" id="panelCompAssessmentOptions" styleClass="activityOptions panelCompAssessment_#{competenceAssessment.competenceId}">
                                                <h:panelGroup rendered="#{competenceAssessment.approved}"
                                                              styleClass="tagApproved" layout="block">
                                                    Approved
                                                </h:panelGroup>

                                                <p:commandLink styleClass="linkApprove"
                                                               process="@this"
                                                               actionListener="#{credentialCompetenceAssessmentsBeanManager.approveCompetence(competenceAssessment)}"
                                                               update="panelCompAssessmentOptions :growlMain @(.panelAssessorNotificationSelector)"
                                                               rendered="#{not competenceAssessment.approved and credentialCompetenceAssessmentsBeanManager.isCurrentUserAssessor(competenceAssessment)}">
                                                    Approve<span></span>
                                                    <f:param name="page" value="#{facesContext.viewRoot.viewId}" />
                                                </p:commandLink>
                                                <p:commandLink styleClass="commentsIcon" pt:data-toggle="modal"
                                                               onclick="markDiscussionAsSeen('#{util:encodeId(competenceAssessment.competenceAssessmentId)}', this.parentElement.parentElement, 'COMPETENCE')"
                                                               action="#{credentialCompetenceAssessmentsBeanManager.prepareLearningResourceAssessmentForCommenting(competenceAssessment)}"
                                                               update=":commentModal:formPrivateConversation:panelModalPrivateConversation"
                                                               oncomplete="$('#assessmentCommentsModal1').modal('show');">
                                                    #{competenceAssessment.numberOfMessages}
                                                </p:commandLink>

                                                <ui:param name="compAssessmentLearningContext" value="#{util:addSubContext(learningContext, 'name:CREDENTIAL_ASSESSMENT|id:'.concat(competenceAssessment.credentialAssessmentId).concat('|context:/name:COMPETENCE|id:').concat(competenceAssessment.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(competenceAssessment.competenceAssessmentId).concat('//'))}" />

                                                <assessment:gradeLabel
                                                        assessment="#{competenceAssessment}"
                                                        assessmentBean="#{credentialCompetenceAssessmentsBeanManager}"
                                                        currentUserAssessedStudent="#{credentialCompetenceAssessmentsBeanManager.isCurrentUserAssessedStudent(competenceAssessment)}"
                                                        currentUserAssessor="#{credentialCompetenceAssessmentsBeanManager.isCurrentUserAssessor(competenceAssessment)}"
                                                        gradeData="#{competenceAssessment.gradeData}"
                                                        userAllowedToSeeRubric="#{false}"
                                                        gradeLinkSelectorId="competence_#{competenceAssessment.competenceId}"
                                                        toUpdateGradePanel=":gradePanelContainer"
                                                        gradePanelSidebarId="gradeSidebar"
                                                        toUpdateRubricPanelForStudent=""
                                                        growlToUpdate=":growlMain"
                                                        role="MANAGER"
                                                        learningContext="#{compAssessmentLearningContext}"
                                                />
                                            </h:panelGroup>
                                        </div>

                                        <ui:fragment rendered="#{not empty competenceAssessment.activityAssessmentData}">
                                            <h:panelGroup layout="block" styleClass="assessmentActivityList comp_#{competenceAssessment.competenceId}"
                                                          id="activityAssessmentWrapper#{compAssIndex.index}">
                                                <ul>
                                                    <ui:repeat varStatus="actAssIndex" var="activityAssessment" value="#{competenceAssessment.activityAssessmentData}">
                                                        <li class="#{styleUtilBean.getStyleClassBasedOnActivityType(activityAssessment.activityType)} #{(!activityAssessment.participantInDiscussion or activityAssessment.allRead or activityAssessment.numberOfMessages eq 0) ? '' : 'hasNewComments'}">
                                                            <span class="#{activityAssessment.completed ? 'check' : 'iconType'}"></span>
                                                            <h:link outcome="activity">
                                                                #{activityAssessment.title}
                                                                <f:param name="actId" value="#{util:encodeId(activityAssessment.activityId)}" />
                                                                <f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
                                                                <f:param name="credId" value="#{util:encodeId(credentialCompetenceAssessmentsBeanManager.decodedCredId)}" />
                                                            </h:link>
                                                            <div class="activityOptions">
                                                                <ui:fragment rendered="#{(activityAssessment.resultType eq 'TEXT' or activityAssessment.resultType eq 'FILE_UPLOAD') and not empty activityAssessment.result}">
                                                                    <h:link outcome="/manage/credential-delivery-assessments-activity"
                                                                            styleClass="viewResult"
                                                                            pt:data-toggle="tooltip" pt:title="View Response">
                                                                        View Response
                                                                        <f:param name="activityId" value="#{util:encodeId(activityAssessment.activityId)}" />
                                                                        <f:param name="id" value="#{param.credentialId}"/>
                                                                        <f:param name="user" value="#{util:encodeId(competenceAssessment.studentId)}" />
                                                                    </h:link>
                                                                </ui:fragment>
                                                                <p:commandLink styleClass="commentsIcon" pt:data-toggle="modal"
                                                                               onclick="markDiscussionAsSeen('#{activityAssessment.encodedActivityAssessmentId}',this.parentElement.parentElement, 'ACTIVITY')"
                                                                               action="#{credentialCompetenceAssessmentsBeanManager.prepareLearningResourceAssessmentForCommenting(activityAssessment)}"
                                                                               update=":commentModal:formPrivateConversation:panelModalPrivateConversation"
                                                                               oncomplete="$('#assessmentCommentsModal1').modal('show');">
                                                                    #{activityAssessment.numberOfMessages}
                                                                </p:commandLink>

                                                                <assessment:gradeLabel
                                                                        assessment="#{activityAssessment}"
                                                                        assessmentBean="#{credentialCompetenceAssessmentsBeanManager}"
                                                                        currentUserAssessedStudent="#{credentialCompetenceAssessmentsBeanManager.isCurrentUserAssessedStudent(competenceAssessment)}"
                                                                        currentUserAssessor="#{credentialCompetenceAssessmentsBeanManager.isCurrentUserAssessor(competenceAssessment)}"
                                                                        gradeData="#{activityAssessment.grade}"
                                                                        userAllowedToSeeRubric="#{false}"
                                                                        gradeLinkSelectorId="activity_#{activityAssessment.activityId}"
                                                                        toUpdateGradePanel=":gradePanelContainer"
                                                                        gradePanelSidebarId="gradeSidebar"
                                                                        toUpdateRubricPanelForStudent=""
                                                                        growlToUpdate=":growlMain"
                                                                        role="MANAGER"
                                                                        learningContext="#{util:addSubContext(compAssessmentLearningContext, 'name:ACTIVITY|id:'.concat(activityAssessment.activityId).concat('|context:/name:ACTIVITY_ASSESSMENT|id:').concat(activityAssessment.activityAssessmentId).concat('/'))}"
                                                                />
                                                            </div>
                                                        </li>
                                                    </ui:repeat>

                                                    <ui:remove>
                                                        <li class="competenceScore">
                                                            <div>#{msg['label.competence']} score:</div>
                                                            <h:panelGroup layout="block" class="compPoints_#{competenceAssessment.competenceId}">
                                                                #{competenceAssessment.points} / #{competenceAssessment.maxPoints}
                                                            </h:panelGroup>
                                                        </li>
                                                    </ui:remove>
                                                </ul>
                                            </h:panelGroup>
                                        </ui:fragment>
                                        <ui:fragment rendered="#{not empty competenceAssessment.evidences}">
                                            <assessment:evidenceItems
                                                    evidences="#{competenceAssessment.evidences}"
                                                    canViewEvidence="#{credentialCompetenceAssessmentsBeanManager.isCurrentUserAssessor(competenceAssessment)}"
                                            />
                                        </ui:fragment>
                                    </article>
                                </ui:fragment>
                            </ui:repeat>
                        </h:form>
                    </h:panelGroup>

                    <utilcomp:pagination
                            id="pagination"
                            bean="#{credentialCompetenceAssessmentsBeanManager}"
                            updateUrl="true"
                            toUpdate="competenceAssessmentPanel"
                    />
                </div>
                <div class="col-md-3">
                    <div class="whiteBox">
                        <h2>Show</h2>
                        <h:panelGroup id="panelFilters">
                            <h:form>
                                <c:forEach items="#{credentialCompetenceAssessmentsBeanManager.filters}" var="filter" varStatus="status">
                                    <div class="checkbox checkLine">
                                        <h:selectBooleanCheckbox id="checkboxFilter#{filter.filter.name()}" value="#{filter.selected}">
                                            <p:ajax event="click" process="@this"
                                                    listener="#{credentialCompetenceAssessmentsBeanManager.filterChanged()}" update="competenceAssessmentPanel :pagination" />
                                        </h:selectBooleanCheckbox>
                                        <h:outputLabel for="checkboxFilter#{filter.filter.name()}">#{filter.filter.label}</h:outputLabel>
                                    </div>
                                </c:forEach>
                            </h:form>
                        </h:panelGroup>
                        <div class="checkLinks">
                            <p:commandLink
                                    value="Check all"
                                    action="#{credentialCompetenceAssessmentsBeanManager.checkAllFilters()}"
                                    update="competenceAssessmentPanel :pagination panelFilters">
                            </p:commandLink>
                            <span>|</span>
                            <p:commandLink
                                    value="Clear all"
                                    action="#{credentialCompetenceAssessmentsBeanManager.uncheckAllFilters()}"
                                    update="competenceAssessmentPanel :pagination panelFilters">
                            </p:commandLink>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <assessment:assessmentCommentModal
                id="commentModal"
                toUpdate=":growlMain @(.assessmentActivityList.comp_#{credentialCompetenceAssessmentsBeanManager.currentAssessmentCompetenceId}) @(.panelCompAssessment_#{credentialCompetenceAssessmentsBeanManager.currentAssessmentCompetenceId})"
                messages="#{credentialCompetenceAssessmentsBeanManager.currentAssessmentMessages}"
                bean="#{credentialCompetenceAssessmentsBeanManager.currentAssessmentBean}"
                learningContext="#{credentialCompetenceAssessmentsBeanManager.currentResType eq 'ACTIVITY'
					? util:addSubContext(learningContext, 'name:CREDENTIAL_ASSESSMENT|id:'.concat(activityAssessmentBean.activityAssessmentData.credAssessmentId).concat('|context:/name:competence|id:').concat(activityAssessmentBean.activityAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.compAssessment.competenceAssessmentId).concat('|context:/name:activity|id:').concat(activityAssessmentBean.activityAssessmentData.activityId).concat('|context:/name:ACTIVITY_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.activityAssessmentId).concat('/').concat('/').concat('/').concat('/'))
					: util:addSubContext(learningContext, 'name:CREDENTIAL_ASSESSMENT|id:'.concat(competenceAssessmentBean.competenceAssessmentData.credentialAssessmentId).concat('|context:/name:competence|id:').concat(competenceAssessmentBean.competenceAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(competenceAssessmentBean.competenceAssessmentData.competenceAssessmentId).concat('//'))}"
        />

        <h:panelGroup id="gradePanelContainer">
            <ui:param name="compAssessmentLearningContext" value="#{util:addSubContext(learningContext, 'name:CREDENTIAL_ASSESSMENT|id:'.concat(competenceAssessmentBean.competenceAssessmentData.credentialAssessmentId).concat('|context:/name:competence|id:').concat(competenceAssessmentBean.competenceAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(competenceAssessmentBean.competenceAssessmentData.competenceAssessmentId).concat('//'))}" />
            <ui:param name="activityAssessmentLearningContext" value="#{util:addSubContext(learningContext, 'name:CREDENTIAL_ASSESSMENT|id:'.concat(activityAssessmentBean.activityAssessmentData.credAssessmentId).concat('|context:/name:competence|id:').concat(activityAssessmentBean.activityAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.compAssessment.competenceAssessmentId).concat('|context:/name:ACTIVITY|id:').concat(activityAssessmentBean.activityAssessmentData.activityId).concat('|context:/name:ACTIVITY_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.activityAssessmentId).concat('////'))}" />

            <assessment:gradePanel
                    id="resourceGradePanel"
                    gradeActionMethodName="updateGrade"
                    gradeAction="#{credentialCompetenceAssessmentsBeanManager.currentAssessmentBean.updateGrade}"
                    assessmentId="#{credentialCompetenceAssessmentsBeanManager.currentAssessmentId}"
                    completed="#{credentialCompetenceAssessmentsBeanManager.hasStudentCompletedCurrentResource()}"
                    gradeData="#{credentialCompetenceAssessmentsBeanManager.currentGradeData}"
                    resource="#{credentialCompetenceAssessmentsBeanManager.currentResType}"
                    resourceTitle="#{credentialCompetenceAssessmentsBeanManager.currentResTitle}"
                    toUpdate=":growlMain @(.assessmentActivityList.comp_#{credentialCompetenceAssessmentsBeanManager.currentAssessmentCompetenceId}) @(.panelCompAssessment_#{credentialCompetenceAssessmentsBeanManager.currentAssessmentCompetenceId}) @(.panelAssessorNotificationSelector)"
                    learningContext="#{credentialCompetenceAssessmentsBeanManager.currentResType == null ? '' : credentialCompetenceAssessmentsBeanManager.currentResType == 'COMPETENCE' ? compAssessmentLearningContext : activityAssessmentLearningContext}"
                    gradePanelSidebarId="gradeSidebar"
            />
        </h:panelGroup>

    </ui:define>
</ui:composition>
