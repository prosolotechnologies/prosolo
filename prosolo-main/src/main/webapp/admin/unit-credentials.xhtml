<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="templates/masterLayout2.xhtml"
                xmlns:dlg="http://java.sun.com/jsf/composite/components/dialogs"
                xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
                xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
                xmlns:util="http://www.prosolo.com/util"
                xmlns:courses="http://java.sun.com/jsf/composite/components/courses"
                xmlns:org="http://java.sun.com/jsf/composite/components/admin/organization">

    <utilcomp:messagesBundle var="msg" />

    <ui:define name="windowTitle">
        #{msg['label.unit']} #{msg['label.credential.plural']}
    </ui:define>

    <ui:define name="metadata">
        <f:metadata>
            <f:viewParam name="id" value="#{unitCredentialsBean.orgId}" />
            <f:viewParam name="unitId" value="#{unitCredentialsBean.unitId}" />
            <f:viewParam name="p" value="#{unitCredentialsBean.page}" default="1" />
            <f:viewAction action="#{unitCredentialsBean.init()}" />
        </f:metadata>
    </ui:define>

    <ui:define name="resourceTitle">
        <h1>#{unitCredentialsBean.unitTitle}</h1>
    </ui:define>

    <ui:define name="navLinks">
        <org:unitHeaderLinks orgId="#{util:decodeId(param.id)}" unitId="#{util:decodeId(param.unitId)}" />
    </ui:define>

    <ui:define name="content">
        <h:outputStylesheet name="bootstrap-datetimepicker.css" library="css2"/>
        <script src="#{request.contextPath}/resources/javascript2/moment.min.js"></script>
        <script src="#{request.contextPath}/resources/javascript2/bootstrap-datetimepicker.min.js"></script>
        <script src="#{request.contextPath}/resources/javascript2/startDelivery.js"></script>
        <script src="#{request.contextPath}/resources/javascript2/search.js"></script>

        <ui:param name="learningContext" value="name:ORGANIZATION|id:#{util:decodeId(param.id)}|context:/name:UNIT|id:#{util:decodeId(param.unitId)}|context:/name:library//"/>
        <p:growl id="growlMain" showDetail="true"></p:growl>
        <div class="whiteBar">
            <div class="container">
                <div class="whiteBarContent">
                    <div class="whiteBarLeft">
                        <h:form id="formSearch">
                            <div class="searchBox">
                                <p:remoteCommand
                                        name="execSearchCredentials"
                                        process=":formSearch:inputCredName"
                                        update=":panelCredentials :pagination"
                                        action="#{unitCredentialsBean.resetAndSearch()}">
                                </p:remoteCommand>

                                <h:inputText id="inputCredName"
                                             autocomplete="off"
                                             type="search"
                                             placeholder="Search #{msg['label.credential.plural'].toLowerCase()}"
                                             value="#{unitCredentialsBean.searchTerm}"
                                             onclick="$(this).select();"
                                             onkeyup="searchListener(execSearchCredentials);">
                                </h:inputText>
                            </div>
                        </h:form>
                    </div>
                    <div class="whiteBarRight">
                        <div class="dropdown sortDrop item">
                            <span>Sort:</span>
                            <h:link
                                    id="linkSortOption"
                                    pt:data-toggle="dropdown"
                                    pt:aria-haspopup="true"
                                    pt:aria-expanded="true">
                                #{unitCredentialsBean.sortOption.label}
                                <span class="arrowDown">arrowDown</span>
                            </h:link>
                            <ul class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenu1">
                                <ui:repeat var="sortOption" value="#{unitCredentialsBean.sortOptions}">
                                    <li>
                                        <p:commandLink
                                                process="@this"
                                                value="#{sortOption.label}"
                                                action="#{unitCredentialsBean.applySortOption(sortOption)}"
                                                update=":panelCredentials :linkSortOption">
                                        </p:commandLink>
                                    </li>
                                </ui:repeat>
                            </ul>
                        </div>
                        <div class="dropdown showDrop item">
                            <span>Show:</span>
                            <h:link
                                    id="linkSearchFilter"
                                    pt:data-toggle="dropdown"
                                    pt:aria-haspopup="true"
                                    pt:aria-expanded="true">
                                #{unitCredentialsBean.searchFilter.label}
                                <span class="arrowDown">arrowDown</span>
                            </h:link>
                            <ul class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenu1">
                                <ui:repeat var="searchFilter" value="#{unitCredentialsBean.searchFilters}">
                                    <li>
                                        <p:commandLink
                                                process="@this"
                                                value="#{searchFilter.label}"
                                                action="#{unitCredentialsBean.applySearchFilter(searchFilter)}"
                                                update=":panelCredentials :pagination :linkSearchFilter">
                                        </p:commandLink>
                                    </li>
                                </ui:repeat>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="container">
            <ol class="breadcrumb">
                <ui:fragment rendered="#{loggeduser.hasCapability('admin.advanced')}">
                    <li><h:link outcome="/admin/organizations">Organizations</h:link></li>
                </ui:fragment>
                <li>
                    <h:link outcome="/admin/units">
                        #{unitCredentialsBean.organizationTitle}
                        <f:param name="id" value="#{param.id}" />
                    </h:link>
                </li>
                <li>
                    <h:link outcome="/admin/units">
                        #{msg['label.unit.plural']}
                        <f:param name="id" value="#{param.id}" />
                    </h:link>
                </li>
                <li>
                    <h:link outcome="/admin/unit-credentials">
                        #{unitCredentialsBean.unitTitle}
                        <f:param name="id" value="#{param.id}" />
                        <f:param name="unitId" value="#{param.unitId}" />
                    </h:link>
                </li>
                <li class="active">#{msg['label.credential.plural']}
                </li>
            </ol>
        </div>

        <div class="container">
            <div class="row">
                <h:panelGroup layout="block" id="panelCredentials" styleClass="col-md-12">
                    <ui:fragment rendered="#{empty unitCredentialsBean.credentials}">
                        <div class="noContentMessage">
                            <p>
                                No #{msg['label.credential.plural'].toLowerCase()}.
                            </p>
                        </div>
                    </ui:fragment>
                    <ui:repeat var="cred" value="#{unitCredentialsBean.credentials}">
                        <article class="whiteBox credentialCard">
                            <div class="credentialCardTop innerWrapper">
                                <div class="">
                                    <h2>
                                        <h:link outcome="/admin/credential">
                                            #{cred.title}
                                            <f:param name="orgId" value="#{param.id}"></f:param>
                                            <f:param name="unitId" value="#{param.unitId}"></f:param>
                                            <f:param name="id" value="#{util:encodeId(cred.id)}"></f:param>
                                        </h:link>
                                    </h2>
                                    <ui:fragment rendered="#{cred.learningStageEnabled}">
                                        <strong class="inStages">Learning in stages</strong>
                                    </ui:fragment>
                                </div>
                                <div class="credentialCardTopOptions">
                                    <h:link outcome="/admin/credential">
                                        View
                                        <f:param name="orgId" value="#{param.id}"></f:param>
                                        <f:param name="unitId" value="#{param.unitId}"></f:param>
                                        <f:param name="id" value="#{util:encodeId(cred.id)}"></f:param>
                                    </h:link>
                                    <p:commandLink rendered="#{not cred.archived}"
                                                   value="Archive"
                                                   styleClass="linkRed"
                                                   process="@this"
                                                   action="#{unitCredentialsBean.select(cred)}"
                                                   update=":archiveDialog"
                                                   oncomplete="$('#archiveModal').modal('show');">
                                    </p:commandLink>
                                    <p:commandLink rendered="#{cred.archived}"
                                                   value="Restore"
                                                   process="@this"
                                                   action="#{unitCredentialsBean.select(cred)}"
                                                   update=":restoreDialog"
                                                   oncomplete="$('#restoreModal').modal('show');">
                                    </p:commandLink>
                                </div>
                            </div>
                            <div class="deliveriesList">
                                <ui:fragment rendered="#{empty cred.deliveries}">
                                    <p class="noDeliveres">No ongoing #{msg['label.delivery.plural'].toLowerCase()}.</p>
                                </ui:fragment>
                                <ui:fragment rendered="#{not empty cred.deliveries}">
                                    <courses:deliveryItems
                                            deliveries="#{cred.deliveries}"
                                            showNumberOfStudentsAndInstructors="false"
                                            canEdit="true"
                                            isAdmin="true"
                                            bean="#{unitCredentialsBean}"
                                            onDeliveryEditComplete="$('#deliveryModal').modal('show');"
                                            onDeliveryEditUpdate=":deliveryEditForm:deliveryEditModalPanel"
                                            encodedOrgId="#{param.id}"
                                            encodedUnitId="#{param.unitId}"
                                    />
                                </ui:fragment>
                            </div>
                        </article>
                    </ui:repeat>
                </h:panelGroup>
            </div>

            <utilcomp:pagination
                    id="pagination"
                    bean="#{unitCredentialsBean}"
                    updateUrl="true"
                    toUpdate=":panelCredentials"
            />
        </div>

        <dlg:archiveResource
                id="archiveDialog"
                archiveActionMethodName="archive"
                archiveAction="#{unitCredentialsBean.archive}"
                toUpdate=":pagination :panelCredentials :formSearch :growlMain"
                resourceType="#{msg['label.credential']}"
                resourceTypePlural="#{msg['label.credential.plural']}"
                pageWithArchivedResources="#{msg['label.credential.plural']} Library"
                learningContext="#{util:addSubContext(learningContext, 'name:credential|id:'.concat(unitCredentialsBean.selectedCred.id))}"/>

        <dlg:archiveResource
                id="archiveDialogDeliveries"
                modalId="archiveModalDeliveries"
                archiveActionMethodName="archive"
                archiveAction="#{unitCredentialsBean.archive}"
                toUpdate=":pagination :panelCredentials :formSearch :growlMain"
                resourceType="#{msg['label.delivery']}"
                resourceTypePlural="#{msg['label.delivery.plural'].toLowerCase()}"
                pageWithArchivedResources="#{msg['label.credential']} #{msg['label.delivery.plural']}"
                learningContext="#{util:addSubContext(learningContext, 'name:credential|id:'.concat(unitCredentialsBean.selectedCred.id))}"/>

        <dlg:restoreResource
                id="restoreDialog"
                restoreActionMethodName="restore"
                restoreAction="#{unitCredentialsBean.restore}"
                toUpdate=":pagination :panelCredentials :formSearch :growlMain"
                title="#{msg['label.credential']}"
                resourceType="credential"
                resourceTypePlural="credentials"
                learningContext="#{util:addSubContext(learningContext, 'name:credential|id:'.concat(unitCredentialsBean.selectedCred.id))}"/>


        <h:form id="deliveryEditForm">
            <div class="modal fade newDeliveryModal" id="deliveryModal" tabindex="-1" role="dialog" aria-labelledby="newDeliveryModal">
                <div class="modal-dialog">
                    <h:panelGroup id="deliveryEditModalPanel" layout="block" styleClass="modal-content">
                        <ui:fragment rendered="#{not empty unitCredentialsBean.selectedCred}">
                            <div class="modal-header alignLeft">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&#215;</span></button>
                                <h2 class="modal-title">#{msg['label.delivery']} Start/End</h2>
                            </div>
                            <div class="containerInner30">
                                <div class="row">
                                    <div class="col-md-6 startDate">
                                        <label>Start:</label>
                                        <div class="datePickerRow">
                                            <utilcomp:convertTimeInput
                                                    millis="#{unitCredentialsBean.selectedCred.deliveryStartTime}"
                                                    format="MM/DD/YYYY hh:mm a"
                                                    disabled="#{unitCredentialsBean.hasDeliveryStarted()}"
                                                    timeInputClass="datePickerSelector#{unitCredentialsBean.hasDeliveryStarted() ? '1' : ''} deliveryStartSelector"
                                            />
                                        </div>
                                    </div>
                                    <div class="col-md-6 endDate">
                                        <label>End:</label>
                                        <div class="datePickerRow">
                                            <utilcomp:convertTimeInput
                                                    millis="#{unitCredentialsBean.selectedCred.deliveryEndTime}"
                                                    format="MM/DD/YYYY hh:mm a"
                                                    disabled="#{unitCredentialsBean.hasDeliveryEnded()}"
                                                    timeInputClass="datePickerSelector#{unitCredentialsBean.hasDeliveryEnded() ? '1' : ''} deliveryEndSelector"
                                            />
                                        </div>
                                        <small>If not set, #{msg['label.delivery'].toLowerCase()} is unlimited.</small>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer alignLeft">
                                <p:commandLink styleClass="btn btn-green"
                                    action="#{unitCredentialsBean.updateDelivery()}"
                                    update=":panelCredentials :growlMain"
                                    oncomplete="$('#deliveryModal').modal('hide');">
                                    Save
                                    <f:param name="page" value="#{facesContext.viewRoot.viewId}" />
                                    <f:param name="learningContext" value="#{util:addSubContext(learningContext, 'name:credential|id:'.concat(unitCredentialsBean.selectedCred.id))}" />
                                </p:commandLink>
                            </div>
                            <script>
                                $(function() {
                                    initializeDatePickers();
                                    disableInputAfterSpecifiedTime('deliveryStartSelector',
                                        #{unitCredentialsBean.getNumberOfMillisecondsBetweenNowAndDeliveryStart()});
                                    disableInputAfterSpecifiedTime('deliveryEndSelector',
                                        #{unitCredentialsBean.getNumberOfMillisecondsBetweenNowAndDeliveryEnd()});
                                });

                            </script>
                        </ui:fragment>
                    </h:panelGroup>
                </div>
            </div>
        </h:form>
    </ui:define>
</ui:composition>