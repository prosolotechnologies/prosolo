<ui:component
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions"
	xmlns:composite="http://java.sun.com/jsf/composite"
	xmlns:post="http://java.sun.com/jsf/composite/components/post"
	xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util">

	<composite:interface>
		<composite:attribute name="comments" required="true" type="org.prosolo.web.useractions.data.CommentsData"/>
		<composite:attribute name="comment" required="true"/>
		<composite:attribute name="newestCommentId" required="true" />
		<composite:attribute name="isTopLevel" required="true" type="java.lang.Boolean" />
		<composite:attribute name="learningContext" />
		<composite:attribute name="service" default=""/>
		<composite:attribute name="toUpdate" default="" />
	</composite:interface>
	
	<composite:implementation>
		<ui:param name="comment" value="#{cc.attrs.comment}" />
		<ui:param name="topLevelCommentId" value="#{cc.attrs.isTopLevel ? comment.commentId : comment.parent.commentId}"/>

		<div id="comment_#{comment.commentId}">
			<div class="media-left">
				<utilcomp:userAvatar
					avatar="#{comment.creator.avatarUrl}"
					fullName="#{comment.creator.fullName}" />
			</div>
			
			<div class="media-body">
				<h:panelGroup layout="block" id="panelMainContent" styleClass="commentMain commentMainRegion_#{comment.commentId}">
					<span class="commentTime">
						<utilcomp:convertTimeOutput
								millis="#{comment.postDateTime}"
								format="rel"
						/>
					</span>
                 	
					<h3 class="media-heading">#{comment.creator.fullName}
						<ui:remove>
							<ui:fragment rendered="#{comment.instructor}"><span>#{msg['label.instructor'].toUpperCase()}</span></ui:fragment>
						</ui:remove>
					</h3>
					<p class="commentText">
						<h:outputText escape="false" value="#{fn:replace(comment.comment,'\\n','&lt;br/&gt;')}" />
					</p>

					<h:panelGroup layout="block" rendered="#{commentBean.isCurrentUserCommentCreator(comment)}" styleClass="editComment hidden">
						<h:inputTextarea id="commentEdit"
										 label="Comment"
										 class="contentEditableComment"
										 placeholder="Add Comment..."
										 value="#{comment.comment}"
										 onkeyup="displaySubmitButton(this);">
							<f:validateLength maximum="2000"/>
						</h:inputTextarea>

						<small class="redText"><h:message id="validationMessageCommentEdit" for="commentEdit"/><br/></small>

						<script>
							var validationMsg = $(escapeColons('##{cc.clientId}:validationMessageCommentEdit'));
							if (validationMsg.first().html() != "") {
								showEditComment($(escapeColons('##{cc.clientId}:panelMainContent'))[0]);
							}

							autosize($(escapeColons('##{cc.clientId}:commentEdit')));
						</script>

						<utilcomp:singleClickLink value="Submit"
												  styleClass="btn btn-sm btn-green submitBtn"
												  action="#{commentBean.editComment(comment, cc.attrs.comments)}"
												  update="@(.commentMainRegion_#{comment.commentId})">
							<f:param name="page" value="#{facesContext.viewRoot.viewId}"/>
							<f:param name="learningContext" value="#{util:addSubContext(cc.attrs.learningContext, 'name:comment|id:'.concat(comment.commentId))}"/>
						</utilcomp:singleClickLink>

						<a href="javascript:void(0)" class="btn btn-sm btn-green-stroke" onclick="hideEditComment(this)">Cancel</a>
					</h:panelGroup>
	                
					<div class="commentOptions">
						<p:commandLink
							styleClass="like #{comment.likedByCurrentUser ? 'liked' : ''}"
							action="#{commentBean.likeAction(comment)}"
							update="@this">
							<svg class="icon" width="12px" height="12px" viewBox="0 0 12 12" version="1.1">
								<g id="triangle" stroke="none" stroke-width="1" fill="#D5D8DA" fill-rule="evenodd">
									<polygon id="Triangle-5" points="6 1 12 11 0 11 "></polygon>
								</g>
							</svg>
							#{comment.likeCount == 0 ? 'Like' : comment.likeCount}
							<f:param name="page" value="#{facesContext.viewRoot.viewId}"/>
							<f:param name="learningContext" value="#{util:addSubContext(cc.attrs.learningContext, 'name:comment|id:'.concat(comment.commentId))}"/>
						</p:commandLink>
						
						<a href="javascript:void(0)" class="reply" onclick="toggleReplyInput(this)">
							<span class="icon"></span>Reply
						</a> 
						
						<p:commandLink
							rendered="#{commentBean.isCurrentUserCommentCreator(comment)}"
							styleClass="edit"
							onclick="showEditComment($(this).parent().parent()[0]); autosize.update($(escapeColons('##{cc.clientId}:commentEdit')));">
							<span class="icon"></span>
							Edit
						</p:commandLink>                            
					</div>
				</h:panelGroup>
                
				<h:panelGroup layout="block" id="panelReply" styleClass="media replyInput hidden">
					<div class="media-left">
						<utilcomp:userAvatar
							avatar="#{loggeduser.avatar}"
							fullName="#{loggeduser.fullName}" />
					</div>
					
					<div class="media-body replyComment">
						<div class="commentForm">
							<h:inputTextarea id="commentReply"
											 label="Comment"
											 class="contentEditableComment"
											 placeholder="Add Comment..."
											 value="#{comment.replyToComment}"
											 onkeyup="displaySubmitButton(this);">
								<f:validateLength maximum="2000"/>
							</h:inputTextarea>

							<script>
								autosize($(escapeColons('##{cc.clientId}:commentReply')));
							</script>

							<small class="redText"><h:message id="validationMessageCommentReply" for="commentReply"/><br/></small>

							<utilcomp:singleClickLink value="Submit"
													  styleClass="btn btn-sm btn-green hidden submitBtn"
													  action="#{commentBean.saveNewComment(comment, cc.attrs.comments)}"
													  update="@(.topLevelCommentChildren_#{topLevelCommentId}) :#{cc.clientId}:panelReply #{cc.attrs.toUpdate}"
													  oncomplete="scrollToNewestComment('#{cc.attrs.newestCommentId}');">
								<f:param name="page" value="#{facesContext.viewRoot.viewId}"/>
								<f:param name="learningContext" value="#{util:addSubContext(cc.attrs.learningContext, 'name:comment')}"/>
							</utilcomp:singleClickLink>
						</div>
					</div>
                </h:panelGroup>

				<c:if test="#{cc.attrs.isTopLevel}">
				    <h:panelGroup layout="block" id="panelChildComments" styleClass="#{cc.attrs.isTopLevel ? 'topLevelCommentChildren_'.concat(comment.commentId) : ''} repliesWrapper">
					    <ui:fragment rendered="#{cc.attrs.isTopLevel}">
						    <ui:fragment rendered="#{comment.numberOfReplies > 0 and empty comment.childComments}">
						    	<p:commandLink 
						    		styleClass="loadReplies" 
						    		action="#{commentBean.loadRepliesIfNotLoaded(cc.attrs.comments, comment)}"
						    		update="panelChildComments">
						    		View #{comment.numberOfReplies} #{comment.numberOfReplies > 1 ? 'replies' : 'reply'}
						    	</p:commandLink>
							</ui:fragment>
					    	<ui:repeat var="child" value="#{comment.childComments}">
								<div class="media" data-newest-comment="#{cc.attrs.comments.newestCommentId == child.commentId ? 'true': 'false'}">
									<post:comment1
										id="childComment"
										comments="#{cc.attrs.comments}"
										comment="#{child}"
										newestCommentId="#{cc.attrs.newestCommentId}"
										isTopLevel="false"
										toUpdate="#{cc.attrs.toUpdate}"
										learningContext="#{cc.attrs.learningContext}"/>
								</div>
							</ui:repeat>
						</ui:fragment>
				    </h:panelGroup>
				</c:if>
            </div>
		</div>
	</composite:implementation>
</ui:component>