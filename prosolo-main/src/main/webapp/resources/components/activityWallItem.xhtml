<ui:component
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:composite="http://java.sun.com/jsf/composite"
	xmlns:util="http://www.prosolo.com/util"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:comp="http://java.sun.com/jsf/composite/components"
	xmlns:dlg="http://java.sun.com/jsf/composite/components/dialogs"
	xmlns:computil="http://java.sun.com/jsf/composite/components/util"
	xmlns:link="http://java.sun.com/jsf/composite/components/resourceLinks"
	xmlns:action="http://java.sun.com/jsf/composite/components/actions"
	xmlns:socialWall="http://java.sun.com/jsf/composite/components/socialWall"
	xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
	xmlns:post="http://java.sun.com/jsf/composite/components/post"
	xmlns:pt="http://java.sun.com/jsf/passthrough">

	<composite:interface>
		<composite:attribute name="value" />
		<composite:attribute name="actData" required="true" />
		<composite:attribute name="iterator" required="true" />
		<composite:attribute name="context" required="true" />
		<composite:attribute name="noOptions" />
		<composite:attribute name="disabledPooling" />
		<composite:attribute name="onActionComplete" />
		<composite:attribute name="postStyleClass" />
	</composite:interface>

	<composite:implementation>
		<h:outputScript library="javascript" name="prosolo.newcomment.js" target="head" />
		<h:outputScript library="javascript" name="prosolo.hashtagHighlight.js" target="head" />
		<h:outputScript library="javascript" name="autolink.min.js" target="head" />

		<div class="post post#{cc.attrs.actData.socialActivity.id} #{cc.attrs.postStyleClass}">

			<link:user value="actWall"
   				userData="#{cc.attrs.actData.actor}"
   				mode="image"
   				imageSize="48"
   				overlayClass="#{cc.attrs.actData.actor.externalUser ? cc.attrs.actData.actor.publishingService.name.toLowerCase() : ''}"
   				idPrefix="actWallActor#{cc.attrs.actData.socialActivity.id}image#{cc.attrs.iterator.index}"
   				context="#{cc.attrs.context}.actor.image.post.#{cc.attrs.actData.socialActivity.id}" />

			<div class="postBlock">
				<div class="title">
					<span class="titleContent">

						<link:user value="userDetailsFollowers"
		    				userData="#{cc.attrs.actData.actor}"
		    				mode="name"
		    				idPrefix="actWallActor#{cc.attrs.actData.socialActivity.id}name#{cc.attrs.iterator.index}"
		    				context="#{cc.attrs.context}.actor.name.post.#{cc.attrs.actData.socialActivity.id}" />

						<h:panelGroup>
							#{cc.attrs.actData.actionName}
						</h:panelGroup>

						<h:panelGroup rendered="#{cc.attrs.actData.object.shortType != null}" >
							#{cc.attrs.actData.object.shortType}
						</h:panelGroup>

						<link:resourceLink
							resourceId="#{cc.attrs.actData.object.id}"
							type="#{cc.attrs.actData.object.clazz.simpleName}"
							title="#{cc.attrs.actData.object.title}"
							context="#{cc.attrs.context}.object.post.#{cc.attrs.actData.socialActivity.id}" />

						<h:panelGroup rendered="#{cc.attrs.actData.relationToTarget != null}">
							#{cc.attrs.actData.relationToTarget}
						</h:panelGroup>
						<h:panelGroup rendered="#{cc.attrs.actData.target.shortType != null}" >
							#{cc.attrs.actData.target.shortType}
						</h:panelGroup>

						<link:resourceLink
							toRender="#{cc.attrs.actData.target != null}"
							resourceId="#{cc.attrs.actData.target.id}"
							type="#{cc.attrs.actData.target.clazz.simpleName}"
							title="#{cc.attrs.actData.target.title}"
							context="#{cc.attrs.context}.target.post.#{cc.attrs.actData.socialActivity.id}" />

						<link:user value="userDetailsTarget"
		    				userData="#{cc.attrs.actData.targetActor}"
		    				idPrefix="actWallTarget#{cc.attrs.actData.socialActivity.id}name#{cc.attrs.iterator.index}"
		    				mode="name"
		    				context="#{cc.attrs.context}.target.name.post.#{cc.attrs.actData.socialActivity.id}"
		    				toRender="#{cc.attrs.actData.targetActor != null}" />

						<h:panelGroup rendered="#{cc.attrs.actData.actor.publishingService != null}">
							via
							<h:outputLink value="#{cc.attrs.actData.actor.publishingService.accountLink}">
								<h:outputText value="#{cc.attrs.actData.actor.publishingService.name}" />
							</h:outputLink>
						</h:panelGroup>

						<ui:remove>
							<h:panelGroup class="hashtags" rendered="#{not empty cc.attrs.actData.hashtags}">
								<span class="nobreak">
									(<h:outputText value="#{cc.attrs.actData.hashtags.size() == 1 ? 'hashtag' : 'hashtags'}" />:
								</span>
								<ui:repeat value="#{cc.attrs.actData.hashtags}" var="hashtag" varStatus="hashTagIterator">
									<span class="nobreak">
										<h:outputText rendered="#{hashTagIterator.index > 0}" value="," />
										<a class="bold" href="http://twitter.com/##{hashtag}" target="_blank">##{hashtag}</a>
										<h:outputText rendered="#{hashTagIterator.index == cc.attrs.actData.hashtags.size()-1}" value=")" />
									</span>
								</ui:repeat>
							</h:panelGroup>
						</ui:remove>

						<h:panelGroup class="hashtags" rendered="#{not empty cc.attrs.actData.hashtags}">
							<span class="nobreak">
								(<h:outputText value="#{cc.attrs.actData.hashtags.size() == 1 ? 'hashtag' : 'hashtags'}" />:
							</span>
							<ui:repeat value="#{cc.attrs.actData.hashtags}" var="hashtag" varStatus="hashTagIterator">
								<span class="nobreak">
									<h:outputText rendered="#{hashTagIterator.index > 0}" value="," />
									<h:link value="##{hashtag}" outcome="/search"
										onclick="sendLogPageNavigation('search/hashtags','#{cc.attrs.context}.post.#{cc.attrs.actData.socialActivity.id}');">
										<f:param  name="tab" value="hashtags" />
										<f:param  name="query" value="#{hashtag}" />
									</h:link>

									<h:outputText rendered="#{hashTagIterator.index == cc.attrs.actData.hashtags.size()-1}" value=")" />
								</span>
							</ui:repeat>
						</h:panelGroup>
					</span>

					<span class="visibility">
						<span class="hasTooltip drop #{cc.attrs.actData.visibility == 'PUBLIC' ? 'public' : ''}
								#{cc.attrs.actData.visibility == 'LIMITED' ? 'limited' : ''}
								#{cc.attrs.actData.visibility == 'PRIVATE' ? 'private' : ''} readOnly"
							title="#{cc.attrs.actData.visibility == 'PUBLIC' ? 'Public' :
										cc.attrs.actData.visibility == 'PRIVATE' ? 'Private' : ''}"></span>
					</span>

					<div class="clear"></div>
					<h:panelGroup id="time" class="time">
							#{cc.attrs.actData.when}
							<h:outputText rendered="#{cc.attrs.actData.updated}" value="(edited)" />
					</h:panelGroup>
				</div>

				<h:panelGroup rendered="#{!cc.attrs.noOptions}">
					<ul class="postOpt">
						<li>
							<a href="javascript:void(0);"
								onclick="sendServiceUse('MOUSE_CLICK', {context: '#{cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id)}', link: 'optionsOpen'})"
								class="postOptArrow">postopt</a>
							<div class="dropdown hidden">
								<ul>
									<li>
										<p:commandLink
											onclick="prosolo.overlay.activate();"
											action="#{wallactions.hideActivity(cc.attrs.actData, cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id))}"
											update=":#{p:component('activityWallGrowl')}"
											oncomplete="#{cc.attrs.onActionComplete}">
											Hide this activity
										</p:commandLink>
									</li>
									<h:panelGroup rendered="#{cc.attrs.actData.actor.id > 0}">
										<li>
											<p:commandLink
												rendered="#{cc.attrs.actData.maker}"
												onclick="prosolo.overlay.activate();"
												action="#{wallactions.deleteActivity(cc.attrs.actData, cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id))}"
												update=":#{p:component('activityWallGrowl')}"
												oncomplete="#{cc.attrs.onActionComplete}">
												Delete this activity
											</p:commandLink>
										</li>
										<li>
											<h:panelGroup layout="block" id="enableCommentActions">
												<p:commandLink
													id="enableCommentAction"
													rendered="#{cc.attrs.actData.maker and cc.attrs.actData.commentsDisabled}"
													onclick="prosolo.overlay.activate();"
													action="#{wallactions.enableComments(cc.attrs.actData, cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id))}"
													process="@this"
													update=":#{p:component('activityWallGrowl')} commentsBox enableCommentActions">
													Enable comments
												</p:commandLink>
												<p:commandLink
													id="disableCommentAction"
													rendered="#{cc.attrs.actData.maker and !cc.attrs.actData.commentsDisabled}"
													onclick="prosolo.overlay.activate();"
													action="#{wallactions.disableComments(cc.attrs.actData, cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id))}"
													process="@this"
													update=":#{p:component('activityWallGrowl')} commentsBox enableCommentActions">
													Disable comments
												</p:commandLink>
											</h:panelGroup>
										</li>
										<h:panelGroup rendered="#{cc.attrs.actData.object.shortType == 'status'}">
											<li><a href="#" onclick="toggleEditMode('.post.post#{cc.attrs.actData.socialActivity.id} .text .postContentRead', '.post.post#{cc.attrs.actData.socialActivity.id} .text .postContentEdit');return false;">Edit this post</a></li>
										</h:panelGroup>
									</h:panelGroup>
								</ul>

								<ui:remove>
									<ul>
										<li>
											<action:addToGoal
												resetStyle="true"
												title="Connect to a goal"
												socialActivityId="#{cc.attrs.actData.object.id}" />
										</li>
									</ul>
								</ui:remove>
								<h:panelGroup rendered="#{cc.attrs.actData.userCanBeUnfollowed}">
									<ul class="bordered">
										<li>
											<p:commandLink rendered="#{cc.attrs.actData.userCanBeUnfollowed or (not empty cc.attrs.actData.hashtags and not cc.attrs.actData.unfollowedHashtags)}"
												onclick="prosolo.overlay.activate();"
												action="#{wallactions.unfollowUser(cc.attrs.actData, cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id))}"
												update=":#{p:component('activityWallGrowl')} #{cc.attrs.updateAfterUnfollow}"
												oncomplete="refreshActivityWall()">
												#{msg['composite.activityWall.options.unfollowUser']}
											</p:commandLink>
										</li>
										<li>
											<p:commandLink rendered="#{not empty cc.attrs.actData.hashtags and not cc.attrs.actData.unfollowedHashtags}"
												onclick="prosolo.overlay.activate();"
												action="#{wallactions.unfollowHashtags(cc.attrs.actData, cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id))}"
												update=":#{p:component('activityWallGrowl')}"
												oncomplete="refreshActivityWall()">
												#{msg['composite.activityWall.options.unfollowHashtags']}
											</p:commandLink>
											<h:outputText rendered="#{cc.attrs.actData.unfollowedHashtags}"
												class="textGray"
												value="These hashtags are unfollowed" />
										</li>
										<ui:remove>
											<li><a href="#">Unsubscribe from this type of events</a></li>
											<li><a href="#">Unsubscribe from this type of resources</a></li>
										</ui:remove>
									</ul>
								</h:panelGroup>
							</div>
						</li>
					</ul>
				</h:panelGroup>

				<h:panelGroup layout="block" id="postContent" class="text">
					<h:outputText class="expandable postContentRead"
						pt:context="#{cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id)}"
						value="#{cc.attrs.actData.text}"
						escape="false" />

					<script>
						$('.post.post#{cc.attrs.actData.socialActivity.id} .text').highlightHashtag(/(#[a-z0-9][a-z0-9\-_]*)/ig, {
							className: 'hashtag',
							tagType: 'a',
							onClickCallback: function(elem, hashtag) {
								$(elem).attr('href', 'search/hashtags&amp;query='+hashtag);
							}
						});

						if ($('.post.post#{cc.attrs.actData.socialActivity.id} .text .expandable').html()) {
							$('.post.post#{cc.attrs.actData.socialActivity.id} .text .expandable').html($('.post.post#{cc.attrs.actData.socialActivity.id} .text .expandable').html().autoLink({class: 'bold', target: '_blank'}));
						}
						$('.post.post#{cc.attrs.actData.socialActivity.id} .text .expandable').readmore({
							maxHeight: 60,
							afterToggle: function(trigger, elem, expanded) {
								sendServiceUse('MOUSE_CLICK', {context: $(elem).attr('context'), link: expanded ? 'more' : 'less'});
							}
						});
					</script>

					<div class="postContentEdit hidden">
						<h:inputTextarea id="postEditTextarea"
							class="postEditTextarea"
							value="#{cc.attrs.actData.text}" />

						<div class="actions">
							<p:commandLink styleClass="button green size25"
								value="Save"
								onclick="toggleEditMode('.post.post#{cc.attrs.actData.socialActivity.id} .text .postContentRead', '.post.post#{cc.attrs.actData.socialActivity.id} .text .postContentEdit');"
								action="#{activitywall.updatePost(cc.attrs.actData, cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id))}"
								process="postEditTextarea"
								update="newCommentGrowl postContent time">
							</p:commandLink>

							<a class="cancelButton button gray size25"
								onclick="toggleEditMode('.post.post#{cc.attrs.actData.socialActivity.id} .text .postContentRead', '.post.post#{cc.attrs.actData.socialActivity.id} .text .postContentEdit');sendServiceUse('MOUSE_CLICK', {context: '#{cc.attrs.context}.post.#{cc.attrs.actData.socialActivity.id}.newComment', link: 'cancel'})">Cancel</a>
						</div>
					</div>

					<script>
						$('.post.post#{cc.attrs.actData.socialActivity.id} .text .postContentEdit textarea').autosize();
					</script>
				</h:panelGroup>

				<socialWall:attachmentPreview
					attachmentPreview="#{cc.attrs.actData.attachmentPreview}"
					uniqueParentSelector=".post#{cc.attrs.actData.socialActivity.id}"
					width="360"
					context="#{cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id).concat('.attachment.').concat(cc.attrs.actData.socialActivity.id)}" />

				<c:if test="#{loggeduser != null and loggeduser.loggedIn}">
					<h:panelGroup layout="block" id="actions" class="links">
						<p:commandLink
							action="#{likeaction.likeSocialActivity(cc.attrs.actData, cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id))}"
							process="@this"
							rendered="#{!cc.attrs.actData.liked}"
							update="actions actionCount">
							Like
						</p:commandLink>
						<p:commandLink
							action="#{likeaction.removeLikeFromSocialActivity(cc.attrs.actData, cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id))}"
							process="@this"
							rendered="#{cc.attrs.actData.liked}"
							update="actions actionCount">
							Unlike
						</p:commandLink>
						<p:commandLink
							action="#{dislikeAction.dislikeSocialActivity(cc.attrs.actData, cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id))}"
							process="@this"
							rendered="#{!cc.attrs.actData.disliked}"
							update="actions actionCount">
							<span class="bullet"></span>
							Dislike
						</p:commandLink>
						<p:commandLink
							action="#{dislikeAction.removeDislikeFromSocialActivity(cc.attrs.actData, cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id))}"
							process="@this"
							rendered="#{cc.attrs.actData.disliked}"
							update="actions actionCount">
							<span class="bullet"></span>
							Remove dislike
						</p:commandLink>

						<action:post
							toRender="#{cc.attrs.actData.shareable and !cc.attrs.actData.shared}"
							socialActivityId="#{cc.attrs.actData.socialActivity.id}"
							resetStyle="true"
							showBullet="true"
							oncompleteAfterPost="#{cc.attrs.onActionComplete}"
							context="#{cc.attrs.context}.post.#{cc.attrs.actData.socialActivity.id}" />

						<h:panelGroup rendered="#{cc.attrs.actData.shared}" class="textGray defaultCursor">
							<span class="bullet"></span>
							Reposted
						</h:panelGroup>

						<h:panelGroup rendered="#{!cc.attrs.actData.anonUser and cc.attrs.actData.actor.publishingService != null}">
							<span class="bullet"></span>
							via
							<h:outputLink value="#{cc.attrs.actData.actor.publishingService.accountLink}"
								rendered="#{cc.attrs.actData.actor.publishingService.name == 'Twitter'}"
								class="publishingServiceAccount">
								<h:panelGroup
									class="twitterIcon10">
								</h:panelGroup>

								@<h:outputText value="#{cc.attrs.actData.actor.publishingService.accountName}" />
							</h:outputLink>
						</h:panelGroup>
					</h:panelGroup>

					<h:panelGroup layout="block" id="commentsBox" class="commentsBox">
						<h:panelGroup layout="block" id="commentBoxArrow"
							rendered="#{!cc.attrs.actData.commentsDisabled or (not empty cc.attrs.actData.comments)}"
							class="arrow" />

						<div class="comments">
							<h:panelGroup layout="block" id="actionCount" class="likes">
								<h:panelGroup layout="block" rendered="#{cc.attrs.actData.likeCount > 0}">
									Liked by
									<p:commandLink
										value="#{cc.attrs.actData.likeCount} people"
										action="#{peopleListDialog.initializePeopleWhoLikedSocialActivityById(cc.attrs.actData.socialActivity.id, cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id))}"
										onclick="$('#peopleListDialog').dialog('open');"
										update=":peopleListForm"
									/>
								</h:panelGroup>

								<h:panelGroup layout="block" rendered="#{cc.attrs.actData.likeCount > 0 and cc.attrs.actData.dislikeCount > 0}">
									<span class="bullet"></span>
								</h:panelGroup>

								<h:panelGroup layout="block" rendered="#{cc.attrs.actData.dislikeCount > 0}">
									Disliked by
									<p:commandLink
										value="#{cc.attrs.actData.dislikeCount} people"
										action="#{peopleListDialog.initializePeopleWhoDislikedSocialActivityById(cc.attrs.actData.socialActivity.id, cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id))}"
										onclick="$('#peopleListDialog').dialog('open');"
										update=":peopleListForm"
									/>
								</h:panelGroup>

								<h:panelGroup layout="block" rendered="#{cc.attrs.actData.dislikeCount > 0 and cc.attrs.actData.shareCount > 0}">
									<span class="bullet"></span>
								</h:panelGroup>

								<h:panelGroup layout="block" rendered="#{cc.attrs.actData.shareCount > 0}">
									Shared
									<p:commandLink
										value="#{cc.attrs.actData.shareCount} times"
										action="#{peopleListDialog.initializePeopleWhoSharedSocialActivityById(cc.attrs.actData.socialActivity.id, cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id))}"
										onclick="$('#peopleListDialog').dialog('open');"
										update=":peopleListForm"
									/>
								</h:panelGroup>
								<ui:remove>
									<h:panelGroup layout="block" rendered="#{cc.attrs.actData.bookmarkCount > 0 and cc.attrs.actData.shareCount > 0}">
										<span class="bullet"></span>
									</h:panelGroup>
									<h:panelGroup layout="block" rendered="#{cc.attrs.actData.bookmarkCount > 0}">
										Bookmarked by <h:commandLink value="#{cc.attrs.actData.bookmarkCount}"> people</h:commandLink><span class="bullet"></span>
									</h:panelGroup>
								</ui:remove>
							</h:panelGroup>

							<h:panelGroup id="commentList">
								<h:panelGroup layout="block" id="commentHideControl" rendered="#{cc.attrs.actData.comments.size() > 2}" class="likes expandComment">

									<p:commandLink value="Show #{cc.attrs.actData.comments.size() - 2} #{cc.attrs.actData.comments.size() == 3 ? 'comment' : 'comments'}"
										rendered="#{!cc.attrs.actData.showHiddenComments}"
										action="#{cc.attrs.actData.setShowHiddenComments(true)}"
										update="commentHideControl"
										process="@this"
									/>
									<p:commandLink value="Hide #{cc.attrs.actData.comments.size() - 2} #{cc.attrs.actData.comments.size() == 3 ? 'comment' : 'comments'}"
										rendered="#{cc.attrs.actData.showHiddenComments}"
										action="#{cc.attrs.actData.setShowHiddenComments(false)}"
										update="commentHideControl"
										process="@this"
									/>

									<script>
									var expandComments = $('.post#{cc.attrs.actData.socialActivity.id} .expandComment');
									if (expandComments) {
										expandComments.click(function(){
											$('.post#{cc.attrs.actData.socialActivity.id} .comment.collapsible').toggle();
										});
									}
									</script>
								</h:panelGroup>

								<ui:repeat id="commentLoop" value="#{cc.attrs.actData.comments}" var="commentIterator" varStatus="commentIteratorStatus">
									<post:comment
										commentData="#{commentIterator}"
										idPrefix="#{cc.attrs.iterator.index}I#{commentIteratorStatus.index}"
										context="#{cc.attrs.context}.post.#{cc.attrs.actData.socialActivity.id}"
										styleClass="#{cc.attrs.actData.comments.size() - commentIteratorStatus.index > 2 ? 'collapsible' : ''}
											#{param['comment'] == commentIterator.id ? 'scrollTarget' : ''}" />
								</ui:repeat>
								<script>
									roundImages();
									$('.post#{cc.attrs.actData.socialActivity.id} .comment .commentText').readmore({
										maxHeight: 40,
										afterToggle: function(trigger, elem, expanded) {
											sendServiceUse('MOUSE_CLICK', {context: $(elem).attr('context'), link: expanded ? 'more' : 'less'});
										}
									});

									if (#{!cc.attrs.actData.showHiddenComments}) {
										$('.post#{cc.attrs.actData.socialActivity.id} .comment.collapsible').hide();
									}
								</script>
							</h:panelGroup>

							<h:panelGroup layout="block" class="addComment" rendered="#{!cc.attrs.actData.commentsDisabled}">
								<div class="addCommentBox">
									<div class="inactiveBox">
										<div class="watermark"></div>
									</div>

									<div class="expandableInputBox collapsed">
										<div class="watermark"></div>
										<div class='inputTextField' contenteditable="true"></div>

										<h:inputTextarea id="commentContent" class="inputTextFieldHidden hidden" value="#{cc.attrs.actData.newComment}" />
										<h:inputText class="selectedUsers hidden" value="#{cc.attrs.actData.mentionedUsersInComment}" />

										<div class="userSuggestions">
											<h:inputText id="userSuggestCommentInput" size="20"
												styleClass="userSuggestSearchInput hidden"
												value="#{searchPeopleBean.query}" />

											<p:remoteCommand
												name="searchColleaguesForCommentAjaxical#{cc.attrs.actData.socialActivity.id}"
												update="userSuggestResults"
												process="userSuggestCommentInput"
												action="#{searchPeopleBean.executeSearch}"/>

											<h:panelGroup id="userSuggestResults" class="userSearchInput">
												<h:panelGroup layout="block" styleClass="results" rendered="#{!searchPeopleBean.query.isEmpty() and not empty searchPeopleBean.users}" >

													<ui:repeat value="#{searchPeopleBean.users}" var="user" id="userList">

														<div class="resultContainer" data-id="#{user.id}" onclick="newComment#{cc.attrs.actData.socialActivity.id}.selectSuggestedUser(this)">

															<div class="result">
																<h:graphicImage styleClass="imageRound image30 avatar"
																	value="#{user.avatarUrl}"
																	width="22" height="22" alt="" />

																<div class="infoContainer" style="float: left">
																	<div class="name">#{user.name}</div>
																	<div class="position">#{user.position}</div>
																</div>
															</div>
														</div>
														<div class="clear"></div>
													</ui:repeat>
												</h:panelGroup>
											</h:panelGroup>

											<div class="noteSeparator clear"></div>
										</div>

										<div class="postButtonBox">
											<p:commandLink styleClass="postButton button green size25"
												value="post"
												action="#{commentaction.newCommentOnSocialActivity(cc.attrs.actData, cc.attrs.context.concat('.post.').concat(cc.attrs.actData.socialActivity.id))}"
												process="commentContent"
												update="newCommentGrowl commentList">
											</p:commandLink>

											<a class="cancelButton button gray size25"
												onclick="sendServiceUse('MOUSE_CLICK', {context: '#{cc.attrs.context}.post.#{cc.attrs.actData.socialActivity.id}.newComment', link: 'cancel'})">Cancel</a>
										</div>
										<div class="clear"></div>
									</div>
									<p:growl id="newCommentGrowl" showDetail="true" />
								</div>
							</h:panelGroup>
						</div>

						<script>
							prosolo.overlay.reset();

							if (typeof searchColleaguesForCommentAjaxical#{cc.attrs.actData.socialActivity.id} == 'function') {
								$('.post.post#{cc.attrs.actData.socialActivity.id} div.addCommentBox').newcomment({
									watermark:'Add a comment',
									userSearchAction: searchColleaguesForCommentAjaxical#{cc.attrs.actData.socialActivity.id},
									userSearchInput: '.userSuggestSearchInput',
									startEditing: function(){
										if (#{!cc.attrs.disabledPooling}) {
											activityPollStop = false;
											pause('comment');
										}
									},
									stopEditing: function(){
										if (#{!cc.attrs.disabledPooling}) {
											activityPollStop = true;
											resume('comment');
										}
									}
								});
							}

							var newComment#{cc.attrs.actData.socialActivity.id} = $('.post.post#{cc.attrs.actData.socialActivity.id} div.addCommentBox').data('newcomment');
						</script>
					</h:panelGroup>
				</c:if>
			</div>
			<div class="clear"></div>
		</div>
	</composite:implementation>
</ui:component>
