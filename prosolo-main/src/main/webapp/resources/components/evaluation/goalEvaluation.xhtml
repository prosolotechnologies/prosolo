<ui:component
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:func="http://org.prosolo/functions"
	xmlns:composite="http://java.sun.com/jsf/composite"
	xmlns:util="http://www.prosolo.com/util"
	xmlns:dlg="http://java.sun.com/jsf/composite/components/dialogs"
	xmlns:comp="http://java.sun.com/jsf/composite/components"
	xmlns:link="http://java.sun.com/jsf/composite/components/resourceLinks"
	xmlns:icon="http://java.sun.com/jsf/composite/components/resourceLinks/icons"
	xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util">
 
	<composite:interface>
		<composite:attribute name="toRender" default="true" />
	</composite:interface>
	
	<composite:implementation>
		<utilcomp:messagesBundle var="msg" />
		
		<h:outputStylesheet library="css" name="jquery.switchButton.css"  />

		<h:outputScript library="javascript" name="jquery.switchButton.js" target="head" />
		<h:outputScript library="javascript" name="prosolo.switchButton.js" target="head" />
		<h:outputScript library="javascript" name="jquery.autosize.min.js" target="head" />

		<div id="submitEvaluation" class="container submitEvaluation">
		
			<div class="content wide">
			
			    <h:form rendered="#{cc.attrs.toRender}" id="submitEvaluationForm">
		    		<div class="info">
						<div class="title">
							<h2>
								#{msg['evaluation.goal.info.label.evaluation']} 
								<h:panelGroup rendered="#{newevaluation.formData.draft}"> - #{msg['evaluation.goal.info.label.draft']}</h:panelGroup>
							</h2>
						</div>
						
						<table class="resourceInfo">
							<tr>
								<td>#{msg['evaluation.goal.info.label.title']}: </td>
								<td>
									<link:goal
										targetGoalId="#{newevaluation.formData.primeEvaluatedResource.id}"
										title="#{newevaluation.formData.primeEvaluatedResource.title}"
										styleClass="bold"
										context="goalEvaluation" />
								</td>
							</tr>
							<tr>
								<td>
									<span>#{msg['evaluation.goal.info.label.started']}:</span> 
								</td>
								<td>
									#{newevaluation.formData.primeEvaluatedResource.dateStared}
								</td>
							</tr>
							<tr>
								<td>
									<span class="bold">#{msg['evaluation.goal.info.label.completed']}:</span>
								</td>
								<td>
									#{newevaluation.formData.primeEvaluatedResource.dateCompleted != null ? newevaluation.formData.primeEvaluatedResource.dateCompleted : 'not completed'}
								</td>
							</tr>
						</table>
						
						<p>
			    			#{msg['evaluation.goal.info.evaluationRequest.part1.user']}
							 <span class="title"><link:user value="userDetails" user="#{newevaluation.formData.requester}" mode="name" context="goalEvaluation.name"/></span>
				    		
			    			#{msg['evaluation.goal.info.evaluationRequest.part2.requestingEvaluation']}
			    			<link:goal 
								targetGoalId="#{newevaluation.formData.primeEvaluatedResource.id}"
								title="#{newevaluation.formData.primeEvaluatedResource.title}" 
								styleClass="title"
								context="goalEvaluation"/>.
								
							#{msg['evaluation.goal.info.detailedExplanation']}<br/> 
							
							<h:panelGroup rendered="#{newevaluation.goalAcceptanceBasedOnCompetence}" class="noContentMessage">
								<br/>
								#{msg['evaluation.goal.info.goalAcceptanceDependendOnCompetence']}
							</h:panelGroup>
						</p>
		    		</div>
		    		
		    		
		    		<!-- Right sidebar -->
		    		<div class="rightSidebar">
						<h3>Assessment Details</h3>
		    		
						<span>
							<span class="bold">#{msg['evaluation.goal.info.label.requested']}:</span>
							
							&#160;
							#{newevaluation.formData.dateRequested}
						</span>
						<div class="clear"></div>
						
						<h:panelGroup rendered="#{!newevaluation.formData.draft}">
							<span class="bold">#{msg['evaluation.goal.info.label.submitted']}:</span>
							
							&#160;
							#{newevaluation.formData.dateSubmitted}
						</h:panelGroup>
						<div class="clear marginBottom20"></div>
						
						
						<span class="bold">Resubmission history:</span>
						<div class="clear"></div>
						
						
						<ui:repeat value="#{newevaluation.formData.submissionHistory}" var="prevEvaluation">
							<h:link rendered="#{prevEvaluation.actionable}"
								outcome="evaluation" value="#{util:prettyTimeDate(prevEvaluation.dateCreated)}">
								<f:param  name="id" value="#{prevEvaluation.id}" />
							</h:link>
							
							<h:outputText rendered="#{!prevEvaluation.actionable}" class="textGray" value="#{util:prettyTimeDate(prevEvaluation.dateCreated)}" />
							
							<div class="clear"></div>
						</ui:repeat>

						<h:panelGroup rendered="#{empty newevaluation.formData.submissionHistory}" class="noContentMessage">No resubmission history</h:panelGroup>
						
						<div class="clear marginBottom20"></div>
						
						<h:panelGroup id="actions">
							<h:outputText rendered="#{newevaluation.formData.waitingForSubmission}"
								value="Waiting for response"
							/>
							
							<p:commandLink rendered="#{newevaluation.formData.canBeResubmitted}"
								styleClass="button green size30 marginRight10"
								value="Resubmit Request"
								onclick="$('#resubmitEvaluationRequestModalDialog').dialog('open');"
								action="#{newevaluation.setResubmitContext('evaluation.goal.'.concat(newevaluation.formData.primeEvaluatedResource.id))}"
								update=":#{p:component('resubmitEvaluationRequestForm')}"
							/>
						</h:panelGroup>
		    		</div>
		    		<!-- END Right sidebar -->
	
		    		<div class="separator clear"></div>
		    		
					<div class="message">
				    	<h3>
				    		<icon:goal size="30" styleClass="icon" />
				    		#{msg['evaluation.goal.message.sectionTitle']}
				    		#{newevaluation.formData.primeEvaluatedResource.accepted}
				    		<span class="switchButton">
					    		<h:selectBooleanCheckbox value="#{newevaluation.formData.primeEvaluatedResource.accepted}"
					    			class="approveBtn" />
					    			
								<script>
									$('#submitEvaluation .message .approveBtn').switchButton({
					    				width: 40,
					    				height: 15,
					    				button_width: 20,
			    						on_label: 'Approved', 
			    						off_label: 'Rejected',
			    						disabled: #{newevaluation.goalAcceptanceBasedOnCompetence},
			    					});
									$('#submitEvaluation .message textarea.evaluationMessage').autosize(); 
								</script>
				    		</span>
				    	</h3>
				    	
						<h:panelGroup layout="block" rendered="#{newevaluation.formData.draft}">
							<h:inputTextarea class="evaluationMessage left" 
								value="#{newevaluation.formData.primeEvaluatedResource.comment}"
								placeholder="#{msg['textarea.message']}" />
								
							<script>
								$(function() {
									$('#submitEvaluation .message textarea.evaluationMessage').autosize(); 
								});
							</script>
						</h:panelGroup>
						
						<h:panelGroup layout="block"
							rendered="#{!newevaluation.formData.draft}"
							class="text left evaluationMessage">
							#{newevaluation.formData.primeEvaluatedResource.comment}
						</h:panelGroup>
						
						<div class="rightBox">
							<h:panelGroup layout="block" id="badgesContainer" class="badgesDialog right">
								Badges:
								
								<c:if test="#{newevaluation.formData.draft and not empty newevaluation.formData.primeEvaluatedResource.badges}">
									<h:panelGrid columns="3">
										<ui:repeat value="#{newevaluation.formData.primeEvaluatedResource.badges}" var="badge">
											<div class="badgeWrapper">
												<p:commandLink rendered="#{newevaluation.formData.draft}"
													styleClass="badge badge#{badge.capitalizedName}50 #{badge.selected ? 'selected' : ''}" 
						    						action="#{newevaluation.toggleBadge(newevaluation.formData.primeEvaluatedResource, badge)}"
						    						update=":#{cc.clientId}:submitEvaluationForm:badgesContainer" />
											
					   							<div class="clear"></div>
											</div>
							    		</ui:repeat>
									</h:panelGrid>
								</c:if>
								
								<c:if test="#{!newevaluation.formData.draft}">
									<c:if test="#{not empty newevaluation.formData.primeEvaluatedResource.selectedBadges}">
										<h:panelGrid columns="3">
											<ui:repeat value="#{newevaluation.formData.primeEvaluatedResource.selectedBadges}" var="badge">
												<div class="badgeWrapper">
													<h:panelGroup rendered="#{!newevaluation.formData.draft and badge.selected}"
														class="badge badge#{badge.capitalizedName}50 selected">
													</h:panelGroup>
						   							
						   							<div class="clear"></div>
												</div>
								    		</ui:repeat>
										</h:panelGrid>
									</c:if>
								
									<c:if test="#{empty newevaluation.formData.primeEvaluatedResource.selectedBadges}">
										<br/>
										<span class="noContentMessage">
											No selected badges.
										</span>
									</c:if>
								</c:if>
							</h:panelGroup>
			    		</div>
					</div>
				    
				    <div class="clear separator"></div>
				    
			    	<div class="competences">
				   		<h3>Goal's competences</h3>
				   		
				   		<h:panelGroup rendered="#{empty newevaluation.formData.getEvaluatedCompetences()}" class="noContentMessage">
							There are no competences connected to this learning goal.
						</h:panelGroup>
						
						<div class="evaluatedCompetences">
						
						    <ui:repeat value="#{newevaluation.formData.getEvaluatedCompetences()}" var="evCompData" varStatus="iterator">
					    		<div class="competenceContainer #{iterator.index % 2 != 1 ? 'first' : 'second'} #{(newevaluation.formData.getEvaluatedCompetences().size() - iterator.index) le 2 ? 'lastRow' : ''}">
							    	<icon:competence size="16" styleClass="icon topAlign marginRight10" />
							    
									<link:competence
										resourceId="#{evCompData.id}"
										type="TargetCompetence"
										title="#{evCompData.title}" 
										context="goalEvaluation"
										styleClass="competenceTitle" />
					    		
						    		<span class="switchButton">
							    		<h:selectBooleanCheckbox value="#{evCompData.accepted}" class="approveBtn" />
									</span>
						    		
									<div class="clear marginBottom10"></div>
							    
						    		<h:inputTextarea
				    					rendered="#{newevaluation.formData.draft and !evCompData.readOnly}"
						    			class="comment left"
				    					value="#{evCompData.comment}"
				    					placeholder="#{msg['evaluation.comment']}"
				    				/>
				    				
				    				<h:panelGroup layout="block"
										rendered="#{!newevaluation.formData.draft or evCompData.readOnly}"
										class="text comment left">
										#{!evCompData.comment.isEmpty() ? evCompData.comment : 'No message'}
									</h:panelGroup>
				    				
				    				<h:panelGroup layout="block" id="badgesContainer" class="badgesDialog">
					    				Badges:
										<h:panelGrid columns="3" rendered="#{newevaluation.formData.draft and !evCompData.readOnly}">
											<ui:repeat value="#{evCompData.badges}" var="badge">
												<div class="badgeWrapper">
													<p:commandLink 
														styleClass="badge badge#{badge.capitalizedName}30 badge30 #{badge.selected ? 'selected' : ''}" 
							    						action="#{newevaluation.toggleBadge(evCompData, badge)}"
							    						update="@this" />
							    						
						   							<div class="clear"></div>
												</div>
								    		</ui:repeat>
										</h:panelGrid>

										<h:panelGroup rendered="#{!newevaluation.formData.draft or evCompData.readOnly}">
											<h:panelGrid columns="3" rendered="#{not empty evCompData.selectedBadges}">
												<ui:repeat value="#{evCompData.selectedBadges}" var="badge">
													<div class="badgeWrapper">
														<h:panelGroup rendered="#{badge.selected}"
															class="badge badge#{badge.capitalizedName}30 badge30 selected">
														</h:panelGroup>
							   							
							   							<div class="clear"></div>
													</div>
									    		</ui:repeat>
											</h:panelGrid>
										
											<h:panelGroup rendered="#{empty evCompData.selectedBadges}"
												class="noContentMessage">
												No selected badges.
											</h:panelGroup>
										</h:panelGroup>
									</h:panelGroup>

						    		<script>
						    			$('#submitEvaluation .evaluatedCompetences .approveBtn').switchButton({
						    				width: 40,
						    				height: 15,
						    				button_width: 20,
				    						on_label: 'Approved', 
				    						off_label: 'Rejected',
				    						disabled: #{!newevaluation.formData.draft or evCompData.readOnly},
				    						on_callback: function(elem) {
				    							if (#{newevaluation.goalAcceptanceBasedOnCompetence}) {
					    							var approveBtns = $('#submitEvaluation .evaluatedCompetences .approveBtn');
					    							
					    							if (checkIfAllAreOn(approveBtns)) {
					    								$('#submitEvaluation .message .approveBtn').switchButton('setOption', 'checked', true);
					    							}
				    							}
				    						},
				    						off_callback: function(elem) {
				    							if (#{newevaluation.goalAcceptanceBasedOnCompetence}) {
					    							$('#submitEvaluation .message .approveBtn').switchButton('setOption', 'checked', false);
				    							}
				    							//elem.parent().parent().find('.badge.selected').trigger('click');
				    						}
				    					});
						    			$('#submitEvaluation .evaluatedCompetences textarea.comment').autosize();
						    		</script>
					    		</div>
					    		<h:panelGroup layout="block" rendered="#{iterator.index % 2 == 1}" class="clear" />
						    </ui:repeat>
						</div>
					</div>
					
				    <div class="clear separator"></div>
				    
				    <div class="addedCompetencesContainer">
						<h3>Added competences</h3>
						
						<comp:searchCompetences value="addedCompetences"
							container=".addedCompetencesContainer"
							regionToRenderOnAction=":#{cc.clientId}:submitEvaluationForm:submitEvaluationFormGrowl :#{cc.clientId}:submitEvaluationForm:addedCompetences"
							actionBean="#{newevaluation}"
							toRender="#{newevaluation.formData.draft}" 
							actionLinkName="Add" 
							toExcludeIds="#{newevaluation.allCompetenceIds}" />
						
						<h:panelGroup layout="block" id="addedCompetences" class="addedCompetences">
							<h:panelGroup layout="block" class="noContentMessage marginTop10" rendered="#{empty newevaluation.formData.getAddedCompetences()}">
								There are no addded competences
							</h:panelGroup>
						
						    <ui:repeat value="#{newevaluation.formData.getAddedCompetences()}" var="evCompData">
								<div class="competenceContainer #{iterator.index % 2 != 1 ? 'first' : 'second'}">
							    	<icon:competence size="20" styleClass="icon topAlign marginRight10" />
							    
									<link:competence
										resourceId="#{evCompData.resource.competence.id}"
										type="Competence"
										title="#{evCompData.resource.competence.title}" 
										context="goalEvaluation"
										styleClass="competenceTitle" />
					    		
						    		<span class="right">
							    		<p:commandLink styleClass="iconRemove"
							    			rendered="#{newevaluation.formData.draft and !evCompData.readOnly}"
							    			action="#{newevaluation.removeEvaluatedResource(evCompData)}"
							    			update=":#{cc.clientId}:submitEvaluationForm:addedCompetences" />
						    		</span>
										
									<div class="clear marginBottom10"></div>
	
						    		<h:inputTextarea
				    					rendered="#{newevaluation.formData.draft and !evCompData.readOnly}"
						    			class="comment left"
				    					value="#{evCompData.comment}"
				    					placeholder="#{msg['evaluation.comment']}"
				    				/>
				    				
				    				<h:panelGroup layout="block"
										rendered="#{!newevaluation.formData.draft or evCompData.readOnly}"
										class="text comment left">
										#{!evCompData.comment.isEmpty() ? evCompData.comment : 'No message'}
									</h:panelGroup>
									
									<h:panelGroup layout="block" id="badgesContainer" class="badgesDialog">
					    				Badges:
										<h:panelGrid columns="3" rendered="#{newevaluation.formData.draft and !evCompData.readOnly}">
											<ui:repeat value="#{evCompData.badges}" var="badge">
												<div class="badgeWrapper">
													<p:commandLink 
														styleClass="badge badge#{badge.capitalizedName}30 badge30 #{badge.selected ? 'selected' : ''}" 
							    						action="#{newevaluation.toggleBadge(evCompData, badge)}"
							    						update="@this" />
							    						
						   							<div class="clear"></div>
												</div>
								    		</ui:repeat>
										</h:panelGrid>
										
										<h:panelGroup rendered="#{!newevaluation.formData.draft or evCompData.readOnly}">
											<h:panelGrid columns="3" rendered="#{not empty evCompData.selectedBadges}">
												<ui:repeat value="#{evCompData.selectedBadges}" var="badge">
													<div class="badgeWrapper">
														<h:panelGroup rendered="#{badge.selected}"
															class="badge badge#{badge.capitalizedName}30 badge30 selected">
														</h:panelGroup>
							   							
							   							<div class="clear"></div>
													</div>
									    		</ui:repeat>
											</h:panelGrid>
										
											<h:panelGroup rendered="#{empty evCompData.selectedBadges}"
												class="noContentMessage">
												No selected badges.
											</h:panelGroup>
										</h:panelGroup>
									</h:panelGroup>
	
						    		<script>
						    			$('#submitEvaluation .addedCompetences textarea.comment').autosize();
						    		</script>
					    		</div>
						    </ui:repeat>
						    
						    <utilcomp:tooltip target=".hasTooltip[title]" />
						</h:panelGroup>
					</div>
					
					<div class="clear separator"></div>
							
					<h:panelGroup layout="block" styleClass="actions">
						<p:commandLink
							value="Save draft"
					    	rendered="#{newevaluation.formData.draft}"
							styleClass="button blue right size30"
							action="#{newevaluation.saveDraft}"
							update="submitEvaluationFormGrowl"
						/>
													
						<p:commandLink
							value="Submit"
					    	rendered="#{newevaluation.formData.draft}"
							styleClass="button green size30 marginRight10"
							onclick="$('#submitEvaluationDialog').dialog('open');"
						/>
						
						<h:outputLink styleClass="button gray size30" value="#{param['origin']}">
							#{newevaluation.formData.draft ? 'Cancel' : 'Back'}
						</h:outputLink>
												
				    </h:panelGroup>
						
					<script>
						$(function() {
							roundImages();
							
							//hide all comment icons
							var compRows = $('#submitEvaluation .evaluatedCompetences tr');
							
							$.each(compRows, function(index, row) {
								if (! $(this).find('input[type=checkbox]').first().is(':checked') ) {
									$(this).find('.iconComment:not(.active)').hide();										
								}
							});
							
							// add click handlers to checkboxex in order to show/hide comments
							$('#submitEvaluation .evaluatedCompetences tr input[type=checkbox]').on('click', function(){
								var thisCheck = $(this);
								
								// find chat icon
								var chatIcon = thisCheck.parent().parent().find('.iconComment');
								
								if (thisCheck.is(':checked')) {
									chatIcon.show();
								} else {
									chatIcon.hide();
								}
							});
						});
					</script>
					
					<p:growl id="submitEvaluationFormGrowl" showDetail="true" />
				</h:form>
				<div class="clear"></div>
			</div><!-- .content -->
		
			<div class="clear"></div>
		</div><!-- .container end -->
		
		<ui:include src="/resources/components/evaluation/dialogs/resubmitEvaluationRequest.xhtml" />
	</composite:implementation>
</ui:component>