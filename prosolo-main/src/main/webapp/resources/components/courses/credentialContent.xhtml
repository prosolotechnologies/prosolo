<ui:component xmlns:h="http://java.sun.com/jsf/html"
			  xmlns:f="http://java.sun.com/jsf/core"
			  xmlns:ui="http://java.sun.com/jsf/facelets"
			  xmlns:composite="http://java.sun.com/jsf/composite"
			  xmlns:p="http://primefaces.org/ui"
			  xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
			  xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
			  xmlns:courses="http://java.sun.com/jsf/composite/components/courses"
			  xmlns:c="http://java.sun.com/jsp/jstl/core"
			  xmlns:assessments="http://java.sun.com/jsf/composite/components/assessments">

	<composite:interface>
		<composite:attribute name="bean" required="true" />
		<composite:attribute name="role" type="java.lang.String" default="USER" />
		<composite:attribute name="learningContext" default="" />
		<composite:attribute name="growlToUpdate" default="" />
		<composite:attribute name="startedLearning" required="true" />
		<composite:attribute name="readOnly" required="true" />
	</composite:interface>

	<composite:implementation>
		<script>
			function markAnnouncementReadWithId(announcementId) {
				markAnnouncementRead([ {
					name : 'announcementId',
					value : announcementId
				} ])
			}
		</script>

		<div class="container">
			<div class="row">
				<div class="col-md-8 #{cc.attrs.bean.credentialData.mandatoryFlow ? 'mandatoryFlow' : ''}">
					<h:panelGroup
						rendered="#{cc.attrs.startedLearning and announcementBeanStudent.userDidNotReadLastAnnouncement(cc.attrs.bean.id)}"
						layout="block" styleClass="alert alert-info alert-dismissible"
						pt:role="alert">
						<p:remoteCommand name="markAnnouncementRead" update="@none"
										 process="@this"
										 actionListener="#{announcementBeanStudent.markAnnouncementReadFromAjax()}"></p:remoteCommand>
						<button onclick="markAnnouncementReadWithId('#{announcementBeanStudent.announcementId}')"
								type="button" class="close" data-dismiss="alert"
								aria-label="Close">
							<span aria-hidden="true">Ã—</span>
						</button>
						There's a new announcements for this #{msg['label.credential'].toLowerCase()}.
						<h:link outcome="announcement">
							Read here
							<f:param name="id" value="#{param['id']}" />
							<f:param name="announcementId" value="#{announcementBeanStudent.announcementId}" />
						</h:link>.
					</h:panelGroup>
					<h2>About #{msg['label.credential']}</h2>
					<p>
						<h:outputText escape="false"
							value="#{cc.attrs.bean.credentialData.description}" />
					</p>
					<courses:compList bean="#{cc.attrs.bean}"
						competences="#{cc.attrs.bean.credentialData.competences}"
						credentialId="#{param['id']}" isEdit="false"
						startedLearning="#{cc.attrs.startedLearning}"
						readOnly="#{cc.attrs.readOnly}"
						learningContext="#{cc.attrs.learningContext}"
						growlToUpdate="#{cc.attrs.growlToUpdate}"
						role="#{cc.attrs.role}"/>
				</div>

				<div class="col-md-4">
					<h:panelGroup layout="block" styleClass="sidebarBlock" rendered="#{cc.attrs.bean.credentialData.learningStageEnabled}">
						<div class="whiteBox sidebarStage">
							<h2>Stage #{cc.attrs.bean.credentialData.learningStage.order}: #{cc.attrs.bean.credentialData.learningStage.title}</h2>
						</div>
					</h:panelGroup>
					<h:panelGroup layout="block" styleClass="sidebarBlock"
						rendered="#{cc.attrs.role eq 'USER' and cc.attrs.startedLearning}">
						There
						#{cc.attrs.bean.numberOfUsersLearningCred == 1 ? 'is' : 'are'}
						<h:link outcome="/credential-students">
							<f:param name="id" value="#{param['id']}" />
							#{cc.attrs.bean.numberOfUsersLearningCred} student#{cc.attrs.bean.numberOfUsersLearningCred == 1 ? '' : 's'}
						</h:link>
						who #{cc.attrs.bean.numberOfUsersLearningCred == 1 ? 'is' : 'are'} learning this #{msg['label.credential'].toLowerCase()}.
					</h:panelGroup>
					<ui:fragment rendered="#{not empty cc.attrs.bean.credentialData.tags}">
						<div class="sidebarBlock #{cc.attrs.role eq 'USER' ? 'sidebarBlockKeywords' : ''}">
								<h2>Keywords</h2>
								<ul class="tags">
									<ui:repeat var="tag"
										value="#{cc.attrs.bean.credentialData.tags}">
										<li>#{tag.title}</li>
									</ui:repeat>
								</ul>
							<ui:fragment
								rendered="#{cc.attrs.role eq 'USER' and cc.attrs.startedLearning and cc.attrs.bean.numberOfTags gt 0}">
								<p class="keywordsExplore">
									There #{cc.attrs.bean.numberOfTags gt 1 ? 'are' : 'is'} #{cc.attrs.bean.numberOfTags} keyword#{cc.attrs.bean.numberOfTags gt 1 ? 's' : ''} more that
									describe #{msg['label.competence.plural'].toLowerCase()} and activities of this #{msg['label.credential'].toLowerCase()}.
									<h:link value="Click here to filter them."
										outcome="credential-keywords">
										<f:param name="id" value="#{cc.attrs.bean.id}" />
									</h:link>
								</p>
							</ui:fragment>
						</div>
					</ui:fragment>

					<ui:fragment
						rendered="#{not empty cc.attrs.bean.credentialData.hashtags}">
						<div class="sidebarBlock">
							<h2>Twitter hashtags</h2>
							<ul class="tags">
								<ui:repeat var="hashtag"
									value="#{cc.attrs.bean.credentialData.hashtags}">
									<li>#{hashtag.title}</li>
								</ui:repeat>
							</ul>
						</div>
					</ui:fragment>

					<div class="sidebarBlock">
						<h2>Created by</h2>
						<div class="user32">
							<utilcomp:userAvatar
									avatar="#{cc.attrs.bean.credentialData.creator.avatar}"
									fullName="#{cc.attrs.bean.credentialData.creator.name}" />
							<h3>
								#{cc.attrs.bean.credentialData.creator.name}
							</h3>
						</div>
					</div>
					<ui:fragment rendered="#{cc.attrs.role eq 'USER' and cc.attrs.startedLearning and cc.attrs.bean.numberOfAnnouncements != 0}">
						<div class="sidebarBlock">
							<p class="sidebarStrokeText">
								There #{cc.attrs.bean.numberOfAnnouncements == 1 ? 'is' : 'are'} #{cc.attrs.bean.numberOfAnnouncements} announcement#{cc.attrs.bean.numberOfAnnouncements == 1 ? '' : 's'} for this #{msg['label.credential'].toLowerCase()}.
								<h:link outcome="/announcements" value="#{cc.attrs.bean.numberOfAnnouncements == 1 ? 'View' : 'View All'}">
									<f:param name="id" value="#{param['id']}" />
								</h:link>
							</p>
						</div>
					</ui:fragment>

					<c:if test="#{cc.attrs.role eq 'USER'}">
						<h:panelGroup layout="block" id="instructorInfo" styleClass="sidebarBlock">
							<ui:fragment rendered="#{cc.attrs.startedLearning}">
								<h2>Your #{msg['label.instructor']}</h2>

								<ui:fragment rendered="#{not empty cc.attrs.bean.credentialData.instructorFullName}">
									<div class="user32">
										<utilcomp:userAvatar
												avatar="#{cc.attrs.bean.credentialData.instructorAvatarUrl}"
												fullName="#{cc.attrs.bean.credentialData.instructorFullName}" />
										<h3>
											#{cc.attrs.bean.credentialData.instructorFullName}
										</h3>
									</div>
									<p:commandLink rendered="#{cc.attrs.bean.credentialData.assessorAssignment == 'BY_STUDENTS'}"
												   process="@this"
												   action="#{assignStudentToInstructorDialogBean.loadCredentialInstructors(cc.attrs.bean.decodedId, loggeduser.getUserId())}"
												   oncomplete="$('#assignInstructorModal1').modal('show');"
												   update=":credential:dlgInstructors:formAssignInstructor:assignInstructorModalContent">
										Change #{msg['label.instructor']}
										<f:param name="context" value="#{util:addSubContext(cc.attrs.learningContext, 'context:/name:USER|id:'.concat(loggeduser.getUserId()).concat('/'))}" />
									</p:commandLink>
								</ui:fragment>

								<ui:fragment rendered="#{empty cc.attrs.bean.credentialData.instructorFullName}">
									<p class="bottom10">
										No #{msg['label.instructor'].toLowerCase()} assigned.
									</p>

									<p:commandLink rendered="#{cc.attrs.bean.credentialData.assessorAssignment == 'BY_STUDENTS'}"
												   styleClass="btn btn-green btn-sm"
												   pt:data-toggle="modal"
												   process="@this"
												   action="#{assignStudentToInstructorDialogBean.loadCredentialInstructors(cc.attrs.bean.decodedId, loggeduser.getUserId())}"
												   oncomplete="$('#assignInstructorModal1').modal('show');"
												   update=":credential:dlgInstructors:formAssignInstructor:assignInstructorModalContent">
										Choose #{msg['label.instructor']}
										<f:param name="context" value="#{util:addSubContext(cc.attrs.learningContext, 'context:/name:USER|id:'.concat(loggeduser.getUserId()).concat('/'))}" />
									</p:commandLink>
								</ui:fragment>
							</ui:fragment>
						</h:panelGroup>
					</c:if>

					<c:if test="#{cc.attrs.role eq 'USER' and cc.attrs.bean.credentialData.enrolled}">
						<div class="sidebarBlock">
							<div class="assessmentsSidebarHead">
								<h2>Assessments</h2>
								<h:link outcome="/credential-instructor-assessment">
									View All
									<f:param name="id" value="#{param.id}" />
								</h:link>
							</div>
							<ul class="assessmentsSidebar">
								<c:if test="#{cc.attrs.bean.credentialData.peerAssessmentEnabled}">
									<li>
										<h3>Peer Assessment</h3>
										<div class="right">
											<p:commandLink
													pt:data-toggle="modal"
													value="Ask"
													action="#{cc.attrs.bean.initAskForAssessment('PEER_ASSESSMENT')}"
													update="askForAssessment:askForAssessmentPanel"
													oncomplete="$('#askAssessment').modal('show');">
											</p:commandLink>
											<div class="assessmentsStar #{styleUtilBean.getGradeStarClass(cc.attrs.bean.credentialData.getGradeSummary('PEER_ASSESSMENT'))}">
												<div data-html="true" data-toggle="#{cc.attrs.bean.credentialData.assessmentSettings.rubricId gt 0 ? 'tooltip' : ''}" title="#{cc.attrs.bean.credentialData.assessmentSettings.rubricId gt 0 ? styleUtilBean.getRubricAssessmentStarLabel(cc.attrs.bean.credentialData.getGradeSummary('PEER_ASSESSMENT')): ''}"  class="star #{styleUtilBean.getEmptyStarClass(cc.attrs.bean.credentialData.getGradeSummary('PEER_ASSESSMENT'))}"></div>
											</div>
										</div>
									</li>
								</c:if>
								<li>
									<h3>Tutor Assessment</h3>
									<div class="right">
										<p:commandLink
												pt:data-toggle="modal"
												value="Ask"
												action="#{cc.attrs.bean.initAskForAssessment('INSTRUCTOR_ASSESSMENT')}"
												update="askForAssessment:askForAssessmentPanel"
												oncomplete="$('#askAssessment').modal('show');">
										</p:commandLink>
										<div class="assessmentsStar #{styleUtilBean.getGradeStarClass(cc.attrs.bean.credentialData.getGradeSummary('INSTRUCTOR_ASSESSMENT'))}">
											<div data-html="true" data-toggle="#{cc.attrs.bean.credentialData.assessmentSettings.rubricId gt 0 ? 'tooltip' : ''}" title="#{cc.attrs.bean.credentialData.assessmentSettings.rubricId gt 0 ? styleUtilBean.getRubricAssessmentStarLabel(cc.attrs.bean.credentialData.getGradeSummary('INSTRUCTOR_ASSESSMENT')): ''}"  class="star #{styleUtilBean.getEmptyStarClass(cc.attrs.bean.credentialData.getGradeSummary('INSTRUCTOR_ASSESSMENT'))}"></div>
										</div>
									</div>
								</li>
								<c:if test="#{cc.attrs.bean.credentialData.selfAssessmentEnabled}">
									<li>
										<h3>Self-Assessment</h3>
										<div class="right">
											<h:link outcome="/credential-self-assessment" value="Write">
												<f:param name="id" value="#{param.id}"/>
											</h:link>
											<div class="assessmentsStar #{styleUtilBean.getGradeStarClass(cc.attrs.bean.credentialData.getGradeSummary('SELF_ASSESSMENT'))}">
												<div data-html="true" data-toggle="#{cc.attrs.bean.credentialData.assessmentSettings.rubricId gt 0 ? 'tooltip' : ''}" title="#{cc.attrs.bean.credentialData.assessmentSettings.rubricId gt 0 ? styleUtilBean.getRubricAssessmentStarLabel(cc.attrs.bean.credentialData.getGradeSummary('SELF_ASSESSMENT')): ''}"  class="star #{styleUtilBean.getEmptyStarClass(cc.attrs.bean.credentialData.getGradeSummary('SELF_ASSESSMENT'))}"></div>
											</div>
										</div>
									</li>
								</c:if>
							</ul>
							<assessments:askForAssessment
									id="askForAssessment"
									bean="#{askForCredentialAssessmentBean}"
									submitAssessmentRequestActionMethodName="submitAssessment"
									submitAssessmentRequestAction="#{askForCredentialAssessmentBean.submitAssessment}"
									resource="CREDENTIAL"
									resourceTitle="#{cc.attrs.bean.credentialData.idData.title}"
									toUpdate="#{cc.attrs.growlToUpdate}"
									learningContext="#{cc.attrs.learningContext}"
							/>
						</div>
					</c:if>
				</div>
			</div>
		</div>
	</composite:implementation>
</ui:component>