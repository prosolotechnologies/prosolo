<ui:component
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:composite="http://java.sun.com/jsf/composite"
	xmlns:p="http://primefaces.org/ui"
	xmlns:comp="http://java.sun.com/jsf/composite/components"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
	xmlns:util="http://www.prosolo.com/util"
	xmlns:courses="http://java.sun.com/jsf/composite/components/courses">

	<composite:interface>
		<composite:attribute name="bean" required="true"/>
		<composite:attribute name="role" type="java.lang.String" default="USER"/>
		<composite:attribute name="learningContext" default=""/>
		<composite:attribute name="service" default="" />
	</composite:interface>
	
	<composite:implementation>
		<script src="#{request.contextPath}/resources/javascript2/search.js"></script>
		<script src="https://use.typekit.net/zvv0dgl.js"></script>
    	<script>try{Typekit.load({ async: true });}catch(e){}</script>
    	<script>
			function hideAssesmentDialog(dialogId) {
				$('#'+dialogId).modal('hide');
				$("body").removeAttr("class").removeAttr("style")
				$("div.modal-backdrop.fade.in").remove()
			}
			
			function markAnnouncementReadWithId(announcementId) {
				markAnnouncementRead([{name:'announcementId', value:announcementId}])
			}
			
			function handleTyping(id) {
				var item = $('#credential\\:formMain\\:newAssessorName');
				if(item.val().length >= 3) {
					$('#usersList').show();
					return true;
				}
				//if we got some results, then backspaced back to, say, 2 letters, reset list
				$('#usersList').empty();
				$('#usersList').hide();
				return false;
			}
			
			function setRecipient(name,id) {
				//setupNewMessageThreadRecievers([{name:'newThreadRecipients', value:id}])
				//resetPeopleSearchParameters()
				//$("#messages\\:messageRecievingUserName").val(name)
				//$("[id*='#messages\\:newMessageContentTextarea']").focus()
			}
    	</script>
    	
		<ui:param name="baseContext" value="name:credential|id:#{cc.attrs.bean.decodedId}"></ui:param>
		<ui:param name="canEdit" value="#{cc.attrs.role == 'MANAGER' and cc.attrs.bean.credentialData.type == 'UNIVERSITY_CREATED' 
				and request.isUserInRole('MANAGE.CONTENT.EDIT') || cc.attrs.role != 'MANAGER' and cc.attrs.bean.credentialData.type == 'USER_CREATED' and cc.attrs.bean.isCurrentUserCreator()}"></ui:param>
		<ui:param name="startedLearning" value="#{cc.attrs.bean.credentialData.enrolled}"></ui:param>
		<ui:param name="isPreview" value="#{cc.attrs.bean.isPreview()}"></ui:param>
		
     	<div id="#{cc.clientId}">
		    <h:form id="formMain">
			    <p:growl id="growlMain" globalOnly="true" showDetail="true" />
			    			    
			    <div class="whiteBar">
			        <div class="container">
			            <div class="whiteBarContent">
							<div class="whiteBarLeft">
								<p:commandLink rendered="#{!cc.attrs.bean.credentialData.firstTimeDraft and cc.attrs.role == 'USER' and !startedLearning and !isPreview}"
									styleClass="btn btn-green btn-sm"
									action="#{cc.attrs.bean.enrollInCredential()}"
									update=":#{cc.clientId}:formMain">
			                     	Start
			                     	<f:param name="context" value="#{baseContext}" />
								</p:commandLink>

								<ui:fragment rendered="#{startedLearning and cc.attrs.bean.credentialData.progress lt 100 and !isPreview}">
									<h:link outcome="/activity" styleClass="btn btn-green btn-sm">
				                     	Resume
				                     	<f:param name="actId" value="#{util:encodeId(cc.attrs.bean.credentialData.nextActivityToLearnId)}" />
										<f:param name="compId" value="#{util:encodeId(cc.attrs.bean.credentialData.nextCompetenceToLearnId)}" />
										<f:param name="credId" value="#{param['id']}" />
									</h:link>

									<h:panelGroup layout="block" styleClass="progressBar item">
										<span>#{cc.attrs.bean.credentialData.progress}%</span>
										<div class="progress">
											<div class="progress-bar" role="progressbar"
												aria-valuenow="#{cc.attrs.bean.credentialData.progress}"
												aria-valuemin="0" aria-valuemax="100"
												style="width: #{cc.attrs.bean.credentialData.progress}%;">
											</div>
										</div>
									</h:panelGroup>
								</ui:fragment>
								
								<ui:fragment rendered="#{cc.attrs.bean.credentialData.progress == 100}">
									<div class="tagCompleted item">Completed</div>
								</ui:fragment>
								
								<ui:fragment rendered="#{(startedLearning and cc.attrs.bean.credentialData.progress lt 100 and !isPreview) or (cc.attrs.bean.credentialData.progress == 100)}">
									<ui:remove>
									<!-- We will reintroduce this functionality later -->
										<ui:fragment rendered="#{cc.attrs.bean.userHasAssessmentForCredential()}">
											<h:link outcome="/credential-assessment" class="btn btn-green-stroke btn-sm">
												View Assessments
				                    			<f:param name="assessmentId" value="#{cc.attrs.bean.getAssessmentIdForUser()}" />
												<f:param name="id" value="#{param['id']}" />
											</h:link>
										</ui:fragment>
									</ui:remove>
									
									<ui:remove>
										<h:link outcome="/credential-assessment" class="btn btn-green-stroke btn-sm item">
											View Assessment
			                    			<f:param name="assessmentId" value="#{cc.attrs.bean.getAssessmentIdForUser()}" />
											<f:param name="id" value="#{param['id']}" />
										</h:link>
									</ui:remove>
									
									<h:link outcome="/assessments" class="btn btn-green-stroke btn-sm item">
										View Assessments
									</h:link>
									
									<a href="#" class="btn btn-green btn-sm item"
										data-toggle="modal" 
										data-target="#askAssessment">
										Ask for Assessment
									</a>
									
									<div class="modal fade" id="askAssessment" tabindex="-1" role="dialog" aria-labelledby="askForAssessment">
										<div class="modal-dialog" role="document">
											<div class="modal-content">
												<div class="modal-header alignLeft">
													<button type="button" class="close" data-dismiss="modal" aria-label="Close">
														<span aria-hidden="true">Ã—</span>
													</button>
													<h2 class="modal-title" id="askForAssessment">
														Ask for Assessment
													</h2>
												</div>
												
												<div class="assessmentModalMeta">
													<div class="assessmentModalMetaLine">
														<div class="assessmentModalMetaLeft">Credential:</div>
														<div class="assessmentModalMetaRight">
															<h3>#{cc.attrs.bean.credentialData.title}</h3>
														</div>
													</div>
													
													<ui:remove>
														<div class="assessmentModalMetaLine" id="assessmentModalMetaLine">
															<ui:fragment rendered="#{cc.attrs.bean.credentialData.instructorPresent}">
																<div class="assessmentModalMetaLeft">Instructor:</div>
																<div class="assessmentModalMetaRight">
																	<img src="#{cc.attrs.bean.credentialData.instructorAvatarUrl}"
																		class="img-circle" width="32" height="32"
																		alt="#{cc.attrs.bean.credentialData.instructorFullName}" />
																	<h3>#{cc.attrs.bean.credentialData.instructorFullName}</h3>
																</div>
															</ui:fragment>
														</div>
													</ui:remove>

													<div class="assessmentModalMetaLine">
														<div class="assessmentModalMetaLeft">Ask to:</div>
														<h:panelGroup layuot="block" id="selectAssessor" class="assessmentModalMetaRight">
															<h:panelGroup rendered="#{cc.attrs.bean.assessmentRequestData.assessorSet}">
																<utilcomp:userAvatar
																	avatar="#{user.avatarUrl}"
																	fullName="#{user.name}" />
																<h3>#{cc.attrs.bean.assessmentRequestData.assessorFullName}</h3>
															</h:panelGroup>
														
															<h:inputText rendered="#{not cc.attrs.bean.assessmentRequestData.assessorSet}"
																onkeyup="searchListener(execSearchUsers);"
																value="#{searchPeopleBean.query}" 
																id="newAssessorName"
																placeholder="Type peer's name..."
																name="newAssessorName" />
															
															<p:remoteCommand 
																name="execSearchUsers" 
																process="newAssessorName"
																action="#{searchPeopleBean.searchPeople()}" 
																update=":credential:formMain:usersListPanel"
															/>
															
															<p:commandLink styleClass="btn btn-green-stroke btn-sm" value="Choose random"
																action="#{cc.attrs.bean.chooseRandomPeerForAssessor()}"
																update=":credential:formMain:selectAssessor :credential:formMain:randomUserErrorMessage" /> 
															
															<h:panelGroup id="usersListPanel">
																<h:panelGroup rendered="#{not cc.attrs.bean.assessmentRequestData.assessorSet and searchPeopleBean.userSize > 0}">
																	<ul id="usersList" class="dropdown-menu searchResultsDrop" style="display: block;">
																		<ui:repeat value="#{searchPeopleBean.users}" var="user" varStatus="iterator">
																			<li>
																				<p:commandLink style="cursor: pointer;"
																					id="userlink-#{user.id}"
																					action="#{cc.attrs.bean.setAssessor(user)}"
																					update=":credential:formMain:selectAssessor :credential:formMain:randomUserErrorMessage"> 
																					<utilcomp:userAvatar
																						avatar="#{user.avatarUrl}"
																						fullName="#{user.name}" />
																					<h3>#{user.name}</h3>
																				</p:commandLink>
																			</li>
																		</ui:repeat>
																	</ul>
																</h:panelGroup>
															</h:panelGroup>
														</h:panelGroup>
													</div>
												</div>

												<h:panelGroup id="randomUserErrorMessage">
													<ui:fragment rendered="#{cc.attrs.bean.noRandomAssessor}" >
														<div class="alert alert-warning" role="alert">
														    There is no peer available to ask for assessment.
														</div>
													</ui:fragment>
												</h:panelGroup>

												<div class="modal-body alignLeft">
													<h:inputTextarea id="messageContentTextarea"
														placeholder="Write message..."
														value="#{cc.attrs.bean.assessmentRequestData.messageText}" />

													<ui:remove>
													<div class="assessmentMassageContent"
														placeholder="Write message..." strip-br="true"
														contenteditable="true"
														onkeyup="displaySubmitButton(this);"></div>
													</ui:remove>

													<script>
													$('#'+ escapeColons('comment_#{comment.commentId}')+ ' .replyComment .contentEditableComment').on('keyup',function(e) {
														$(this).prev('textarea').val($(this).html());
													});
												</script>
												</div>

												<div class="modal-footer alignLeft">
													<p:commandLink process="messageContentTextarea"
														update=":#{cc.clientId}:formMain"
														action="#{cc.attrs.bean.submitAssessment()}"
														styleClass="btn btn-green"
														oncomplete="hideAssesmentDialog('askAssessment')">
			                                    		Submit
			                                    </p:commandLink>
												</div>
											</div>
										</div>
									</div>
									<p:remoteCommand name="resetAskForAssessmentModal" 
										action="#{cc.attrs.bean.resetAskForAssessmentModal()}"
										update=":credential:formMain:selectAssessor :credential:formMain:randomUserErrorMessage" />
										
									<script>
									$('#askAssessment').on('hidden.bs.modal', function () {
										resetAskForAssessmentModal();
									})
									</script>
									
								</ui:fragment>
							</div>

							<div class="whiteBarRight">
			                    <h:panelGroup rendered="#{cc.attrs.bean.credentialData.mandatoryFlow}" styleClass="mandatoryTag item">Mandatory flow</h:panelGroup>
			                    <div class="duration item">#{cc.attrs.bean.credentialData.durationString}</div>
			                    <h:link 
			                    	rendered="#{canEdit and !isPreview}"
			                    	outcome="create-credential" 
			                    	styleClass="btn btn-green-stroke btn-sm item">
			                    	Edit Credential
			                    	<f:param name="id" value="#{param['id']}"></f:param>
			                    </h:link>
			                </div>
			            </div>
			        </div>
			    </div>
			
			    <div class="container">
			        <ol class="breadcrumb">
			            <li><a href="#">Credentials</a></li>
			            <li class="active">#{cc.attrs.bean.credentialData.title}</li>
			        </ol>
			    </div>
			
			    <div class="container">
			        <div class="row">
			            <div class="col-md-8 #{cc.attrs.bean.credentialData.mandatoryFlow ? 'mandatoryFlow' : ''}">
			                <h:panelGroup rendered="#{startedLearning and !isPreview and announcementStudentBean.userDidNotReadLastAnnouncement(cc.attrs.bean.id)}" layout="block" styleClass="alert alert-info alert-dismissible" pt:role="alert">
			                	<p:remoteCommand name="markAnnouncementRead" update="@none" process="@this" actionListener="#{announcementStudentBean.markAnnouncementReadFromAjax()}"></p:remoteCommand>
                    			<button onclick="markAnnouncementReadWithId('#{announcementStudentBean.announcementId}')" type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">Ã—</span></button>
                    			There's a new announcements for this credential. 
                    			<h:link outcome="announcement" >
                    				Read here
                    				<f:param name="id" value="#{param['id']}"></f:param>
                    				<f:param name="announcementId" value="#{announcementStudentBean.announcementId}"></f:param>
                    			</h:link>.
                			</h:panelGroup>
			                <h2>About Credential</h2>
			                <p>#{cc.attrs.bean.credentialData.description}</p>
			                <courses:compList 
			                	bean="#{cc.attrs.bean}"
			                	competences="#{cc.attrs.bean.credentialData.competences}"
			                	credentialId="#{param['id']}"
			                	isEdit="false"
			                	startedLearning="#{startedLearning}"
			                	isPreview="#{isPreview}"/>
			            </div>
			            
			            <div class="col-md-4">
			            	<h:panelGroup layout="block" styleClass="sidebarBlock" rendered="#{cc.attrs.role eq 'USER' and startedLearning}">
			                    There 
			                    
								#{cc.attrs.bean.numberOfUsersLearningCred == 1 ? 'is' : 'are'} 
			                    <h:link outcome="/credential-students">
			                    	<f:param name="id" value="#{param['id']}"/>
			                    	#{cc.attrs.bean.numberOfUsersLearningCred} students
			                    </h:link> 
			                    who #{cc.attrs.bean.numberOfUsersLearningCred == 1 ? 'is' : 'are'} learning this credential.
			                </h:panelGroup>
							<div class="sidebarBlock">
				                <h2>Keywords</h2>
				                <ul class="tags">
				                	<ui:repeat var="tag" value="#{cc.attrs.bean.credentialData.tags}">
				                		<li><a href="#">#{tag.title}</a></li>
				                	</ui:repeat>
				                </ul>
			                </div>
			                
			                <ui:fragment rendered="#{not empty cc.attrs.bean.credentialData.hashtags}">
				                <div class="sidebarBlock">
					                <h2>Twitter hashtags</h2>
					                <ul class="tags">
					                	<ui:repeat var="hashtag" value="#{cc.attrs.bean.credentialData.hashtags}">
					                		<li><a href="#">#{hashtag.title}</a></li>
					                	</ui:repeat>
					                </ul>
				                </div>
			                </ui:fragment>
			                
			                <ui:fragment rendered="#{not empty cc.attrs.bean.credentialData.instructorFullName}">
				                <div class="sidebarBlock">
					                <h2>Your instructor</h2>
					                <div class="user32">
					                    <a href="#">
											<utilcomp:userAvatar
												avatar="#{cc.attrs.bean.credentialData.instructorAvatarUrl}"
												fullName="#{cc.attrs.bean.credentialData.instructorFullName}" />
					                    </a>
					                    <h3><a href="#">#{cc.attrs.bean.credentialData.instructorFullName}</a></h3>
					                </div>
				                </div>
			                </ui:fragment>
			                
			                <div class="sidebarBlock">
				                <h2>Created by</h2>
				                <div class="user32">
				                    <a href="#">
										<utilcomp:userAvatar
											avatar="#{cc.attrs.bean.credentialData.creator.avatar}"
											fullName="#{cc.attrs.bean.credentialData.creator.name}" />
				                    </a>
				                    <h3><a href="#">#{cc.attrs.bean.credentialData.creator.name}</a></h3>
				                </div>
			                </div>
			            </div>
			        </div>
			    </div>
			</h:form>
	   </div>
	</composite:implementation>
</ui:component>