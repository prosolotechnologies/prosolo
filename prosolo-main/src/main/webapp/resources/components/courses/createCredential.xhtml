<ui:component
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:composite="http://java.sun.com/jsf/composite"
	xmlns:p="http://primefaces.org/ui"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
	xmlns:util="http://www.prosolo.com/util"
	xmlns:courses="http://java.sun.com/jsf/composite/components/courses"
	xmlns:dlg="http://java.sun.com/jsf/composite/components/dialogs"
	xmlns:learningResource="http://java.sun.com/jsf/composite/components/learningResource"
>

	<composite:interface>
		<composite:attribute name="role" type="java.lang.String" default="USER"/>
		<composite:attribute name="toUpdate" default=""></composite:attribute>
	</composite:interface>

	<composite:implementation>
		<utilcomp:messagesBundle var="msg" />
		<h:outputStylesheet name="bootstrap-datetimepicker.css" library="css2"/>
		<link rel="stylesheet" type="text/css" media="all" href="#{request.contextPath}/resources/css2/bootstrap-tagsinput.css" />
		<script src="#{request.contextPath}/resources/javascript2/bootstrap-tagsinput.min.js"></script>
		<script src="#{request.contextPath}/resources/javascript2/moment.min.js"></script>
		<script src="#{request.contextPath}/resources/javascript2/bootstrap-datetimepicker.min.js"></script>
		<script src="#{request.contextPath}/resources/javascript2/search.js"></script>
		<script src="#{request.contextPath}/resources/javascript2/createCredential.js"></script>
		<script src="#{request.contextPath}/resources/javascript2/tinymce/tinymce.min.js"></script>
		<script src="#{request.contextPath}/resources/javascript2/prosolo.tinymce.js"></script>
		<script src="#{request.contextPath}/resources/javascript2/startDelivery.js"></script>

		<div class="whiteBar">
			<c:if test="#{credentialEditBean.original and credentialEditBean.credentialData.id gt 0}">
				<div class="container">
	            	<div class="whiteBarContent">
	                	<div class="whiteBarLeft">
	                    	<p:commandLink styleClass="btn btn-green btn-sm item" pt:data-toggle="modal" 
	                    		process="@this"
	                    		update="startDeliveryModal:formDeliveryStart:newDeliveryModalContent"
	                    		oncomplete="$('#newDeliveryModal').modal('show');">
	                    		Start New #{msg['label.delivery']}
	                    	</p:commandLink>
						</div>
					</div>
				</div>
			</c:if>
		</div>

		<div class="container">
	        <ol class="breadcrumb">
	            <li>
	            	<h:link value="#{msg['label.credential.plural']}" outcome="credentialLibrary"/>
	            </li>
	            <ui:fragment rendered="#{!credentialEditBean.isCreateUseCase()}">
	            	<li class="active">#{credentialEditBean.credentialData.title}</li>
	            </ui:fragment>
	            <ui:fragment rendered="#{credentialEditBean.isCreateUseCase()}">
	            	<li class="active">New #{msg['label.credential']}</li>
	            </ui:fragment>
	        </ol>
	    </div>
		
	   	<div id="#{cc.clientId}">
	   	<script>
			containerId = '#{cc.clientId}';
		</script>
		<h:form id="formMain">
			<p:growl id="growlMain" showDetail="true" globalOnly="true"></p:growl>
			<ui:param name="learningContext" value="#{credentialEditBean.decodedId > 0 ? 'name:CREDENTIAL|id:'.concat(credentialEditBean.decodedId) : ''}"></ui:param>
			<div class="container">
				<div class="row">
					<div class="col-md-8">
						<div class="whiteBox">
							<ul class="nav nav-tabs pageSubmenu" role="tablist">
								<li role="presentation" class="#{param.tab ne 'competences' ? 'active' : ''}"><a href="#info" aria-controls="info" role="tab" data-toggle="tab" onclick="setQueryParam('tab','info')">#{credentialEditBean.resourceTypeString eq 'Delivery' ? msg['label.delivery'] : msg['label.credential']} Info</a></li>
								<li role="presentation" class="#{param.tab eq 'competences' ? 'active' : ''}"><a href="#competences" aria-controls="competences" role="tab" data-toggle="tab" onclick="setQueryParam('tab','competences')">#{msg['label.competence.plural']}</a></li>
							</ul>
						</div>
						<div class="tab-content">
							<div role="tabpanel" class="tab-pane fade #{param.tab ne 'competences' ? 'active in' : ''}" id="info">
								<div class="whiteBox">
									<h2>#{credentialEditBean.resourceTypeString eq 'Delivery' ? msg['label.delivery'] : msg['label.credential']} Info</h2>
									
									<div class="formWrapper">
										<div class="formLine">
											<label>Title</label>
											<div class="formLineRight">
												<h:inputText
													autofocus="true"
													id="inputTitle" 
													value="#{credentialEditBean.credentialData.title}" 
													required="true"
													requiredMessage="Title is required"
													autocomplete="off"/>

												<small class="redText"><h:message for="inputTitle"></h:message></small>
											</div>
										</div>
										
										<div class="formLine">
											<label>About #{msg['label.credential']}</label>
											<div class="formLineRight">                           
												<h:inputTextarea
													id="inputDescription" 
													value="#{credentialEditBean.credentialData.description}"
													required="true"
													requiredMessage="Description is required" />

												<small class="redText"><h:message for="inputDescription"></h:message></small>
													
												<script>
		                                    		initTinyMCE('#createCredential\\:formMain\\:inputDescription');
		                                    	</script>
											</div>
										</div>

										<div class="formLine">
											<label>Keywords</label>

											<div class="formLineRight">
												<h:inputText id="inputKeywords" styleClass="tagsInputCredTag"
															 value="#{credentialEditBean.credentialData.tagsString}"
															 pt:placeholder="Type and press 'Enter'"
															 pt:data-role="tagsinput"
															 autocomplete="off"/>
											</div>
										</div>

										<script>$('.tagsInputCredTag').tagsinput();</script>

										<div class="formLine">
											<label>Twitter hashtags</label>

											<div class="formLineRight">
												<h:inputText id="inputHashtags" styleClass="tagsInputCredHahstag"
															 value="#{credentialEditBean.credentialData.hashtagsString}"
															 pt:placeholder="Type and press 'Enter'"
															 pt:data-role="tagsinput" autocomplete="off" />
											</div>
										</div>
										<script>$('.tagsInputCredHahstag').tagsinput();</script>

										<div class="formLine">
											<label>Other</label>
											<div class="formLineRight">
												<div class="checkbox checkLine">
													<h:selectBooleanCheckbox
															id="checkMandatory"
															value="#{credentialEditBean.credentialData.mandatoryFlow}"
															onchange="showOrHideMandatoryArrows();">
													</h:selectBooleanCheckbox>

													<h:outputLabel for="checkMandatory">
														Mandatory flow
													</h:outputLabel>
												</div>
												<c:if test="#{cc.attrs.role eq 'MANAGER'}">
													<div class="checkbox checkLine">
														<h:selectBooleanCheckbox disabled="#{credentialEditBean.delivery}"
																				 id="checkAutomaticAssign"
																				 value="#{credentialEditBean.credentialData.automaticallyAssingStudents}">
														</h:selectBooleanCheckbox>
														<h:outputLabel for="checkAutomaticAssign">
															Assign instructor to students automatically
														</h:outputLabel>
													</div>
												</c:if>
											</div>
										</div>
										<ui:fragment rendered="#{credentialEditBean.delivery}">
											<div class="formLine">
												<label>#{msg['label.credential']}</label>
												<div class="formLineRight">
													<ul class="addedItems">
														<li>
															<h:link outcome="/manage/create-credential">
																#{credentialEditBean.credentialData.deliveryOfTitle}
																<f:param name="id" value="#{util:encodeId(credentialEditBean.credentialData.deliveryOfId)}"></f:param>
															</h:link>
														</li>
													</ul>
												</div>
											</div>
										</ui:fragment>
									</div>
								</div>

								<!-- assessment -->
								<div class="whiteBox">
									<div class="formWrapper">
										<h2>Assessment</h2>
										<div class="formLine">
											<label>Assessment Type</label>
											<div class="formLineRight">
												<ui:repeat value="#{credentialEditBean.credentialData.assessmentTypes}" var="at">
													<div class="checkbox checkLine">
														<h:selectBooleanCheckbox value="#{at.enabled}" id="checkAssessmentType" disabled="#{at.mandatory or credentialEditBean.limitedEdit}"/>
														<h:outputLabel for="checkAssessmentType">#{msg['label.assessment.type.'.concat(at.type)]} #{at.mandatory ? '(mandatory)' : ''}</h:outputLabel>
													</div>
												</ui:repeat>
											</div>
										</div>

										<learningResource:assessmentSettings
												id="assessmentSettings"
												bean="#{credentialEditBean}"
												resource="CREDENTIAL"
												showAcceptGrades="false"
										/>

									</div>
									<!--<script>determineVisibilityBasedOnGradingMode();</script>-->
								</div>
									<!-- assessment end -->
							</div>

							<div role="tabpanel" class="tab-pane fade #{credentialEditBean.credentialData.mandatoryFlow ? 'mandatoryFlow' : ''} #{param.tab eq 'competences' ? 'active in' : ''}" id="competences">
								<courses:compList 
									id="compList"
									bean="#{credentialEditBean}"
									competences="#{credentialEditBean.credentialData.competences}"
									isEdit="true"
									startedLearning="false"
									toUpdate=""
									role="#{cc.attrs.role}"
									credentialId="#{credentialEditBean.id}"
									isOriginal="#{credentialEditBean.original}"/>
			
								<h:panelGroup layout="block" styleClass="newCompetenceBox" rendered="#{credentialEditBean.original}">
									<div class="elementsWrapper">
										<p:commandLink
											styleClass="btn btn-green"
											value="Create New #{msg['label.competence']}"
											action="#{credentialEditBean.saveAndNavigateToCreateCompetence}" 
											oncomplete="if (args &amp;&amp; args.validationFailed) { $('##{cc.clientId}\\:formMain\\:hiddenLinkFailure').click();};"
											onclick="copyTextFromTinyMCEToTextarea('#createCredential\\:formMain\\:inputDescription');">
											<f:param name="page" value="#{facesContext.viewRoot.viewId}"></f:param>
											<f:param name="learningContext" value="name:new_competence"></f:param>
										</p:commandLink>
										
										<p:commandLink style="display:none" id="hiddenLinkFailure"
					 							update=":#{cc.clientId}:formMain"
					 					/>
										<ui:remove>
											<span>or</span>

											<div class="elementsRight">
												<p:remoteCommand name="execSearchComps" process="inputCompName"
													update=":#{cc.clientId}:formMain:panelCompSearchResults"
													action="#{credentialEditBean.searchCompetences()}">
													<f:param name="page" value="#{facesContext.viewRoot.viewId}"></f:param>
													<f:param name="learningContext" value="#{learningContext}"></f:param>
												</p:remoteCommand>

												<h:inputText id="inputCompName"
															 styleClass="competenceSearchField"
															 value="#{credentialEditBean.compSearchTerm}"
															 placeholder="Add existing one"
															 onclick="$(this).select();"
															 onkeyup="showSearchResults('.panelCompSearchResultsSelector', '.competenceSearchField');searchIfNeeded('.competenceSearchField', execSearchComps);return false;"
															 autocomplete="off" />

												<h:panelGroup id="panelCompSearchResults">
													<h:panelGroup rendered="#{not empty credentialEditBean.compSearchResults}">
														<ul class="dropdown-menu searchResultsDrop panelCompSearchResultsSelector" style="display:block;">
															<ui:repeat var="comp" value="#{credentialEditBean.compSearchResults}">
																<li>
																	<p:commandLink
																			process="@this"
																			action="#{credentialEditBean.addComp(comp)}"
																			update=":#{cc.clientId}:formMain:compList :#{cc.clientId}:formMain:panelCompSearchResults"
																			oncomplete="$('.competenceSearchField').val(''); $('.panelCompSearchResultsSelector').first().stop(true, true).slideUp(10);">
																		<h3>#{comp.title}</h3>
																	</p:commandLink>
																</li>
															</ui:repeat>
														</ul>
													</h:panelGroup>
												</h:panelGroup>

												<ui:remove><a href="#">Recommended Competences</a></ui:remove>
											</div>
										</ui:remove>
									</div>
								</h:panelGroup>
							</div>
						</div>
					</div>

					<div class="col-md-4">
						<ui:remove>
							<h:panelGroup layout="block" rendered="#{!credentialEditBean.createUseCase}" styleClass="whiteBox publishBox visibilityBox">
								<ui:remove>
									<p class="url">
										Public URL:<br></br>
										<a href="#">https://uta.prosolo.ca/prosolo/credentials/X7J62DA7</a>
									</p>
								</ui:remove>
							</h:panelGroup>
						</ui:remove>

						<ui:remove>
							<div class="alert alert-info alert-dismissible" role="alert">
								<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
								Note that all credential changes will affect all students currently learning for this credential.
							</div>
						</ui:remove>

						<c:if test="#{credentialEditBean.delivery and credentialEditBean.credentialData.learningStageEnabled}">
							<div class="sidebarBlock">
								<div class="whiteBox sidebarStage">
									<h2>Stage #{credentialEditBean.credentialData.learningStage.order}: #{credentialEditBean.credentialData.learningStage.title}</h2>
								</div>
							</div>
						</c:if>
						<c:if test="#{credentialEditBean.original and credentialEditBean.learningInStagesEnabled and not empty credentialEditBean.credentialData.learningStages}">
							<div class="whiteBox stagesBox">
								<h2>Stages</h2>
								<div class="checkbox checkLine">
									<h:selectBooleanCheckbox id="checkboxLearningInStages"
															 value="#{credentialEditBean.credentialData.learningStageEnabled}">
										<f:ajax event="click" execute="@this"
												listener="#{credentialEditBean.enableLearningStagesChecked()}"
												render="@this panelLearningStages :#{cc.clientId}:formMain:savePanel" />
									</h:selectBooleanCheckbox>
									<h:outputLabel for="checkboxLearningInStages">Enable stages</h:outputLabel>
								</div>
								<h:panelGroup id="panelLearningStages">
									<h:panelGroup rendered="#{credentialEditBean.credentialData.learningStageEnabled}">
										<ul>
											<ui:repeat value="#{credentialEditBean.credentialData.learningStages}" var="stage">
												<li class="#{credentialEditBean.isLearningStageActive(stage) ? 'active' : stage.canBeCreated or stage.learningResourceId gt 0 ? '' : 'disabled'}">
													#{stage.learningStage.title}
													<ui:fragment rendered="#{stage.learningResourceId gt 0 and not credentialEditBean.isLearningStageActive(stage)}">
														<h:link outcome="/manage/create-credential" value="View">
															<f:param name="id" value="#{util:encodeId(stage.learningResourceId)}"/>
														</h:link>
													</ui:fragment>
													<ui:fragment rendered="#{not credentialEditBean.isLearningStageActive(stage) and stage.canBeCreated}">
														<a href="javascript:void(0)" data-toggle="modal" data-target="#createStageCredentialModal">Create</a>
													</ui:fragment>
												</li>
											</ui:repeat>
										</ul>
									</h:panelGroup>
								</h:panelGroup>
							</div>
						</c:if>

						<div class="whiteBox publishBox">
							<h2>Options</h2>

							<ui:fragment rendered="#{credentialEditBean.credentialData.id gt 0}">
								<h:link
										target="_blank"
										outcome="/manage/credential"
										value="Preview"
										class="linkPreview">
									<f:param name="id" value="#{credentialEditBean.id}"></f:param>
								</h:link>
							</ui:fragment>
							<ui:fragment rendered="#{not (credentialEditBean.credentialData.id gt 0)}">
								<a href="javascript:void(0);"
								   class="linkPreview disabled"
								   data-toggle="tooltip"
								   title="You need to save the credential in order to preview latest changes">
									Preview
								</a>
							</ui:fragment>

							<div class="clear"></div>
							<c:if test="#{credentialEditBean.delivery}">
								<label>Start:</label>
								<div class="datePickerRow">
									<utilcomp:convertTimeInput
											millis="#{credentialEditBean.credentialData.deliveryStartTime}"
											format="MM/DD/YYYY hh:mm a"
											disabled="#{credentialEditBean.hasDeliveryStarted()}"
											timeInputClass="datePickerSelector#{credentialEditBean.hasDeliveryStarted() ? '1' : ''} deliveryStartSelector"
									/>
								</div>
								<label>End:</label>
								<div class="datePickerRow">
									<utilcomp:convertTimeInput
											millis="#{credentialEditBean.credentialData.deliveryEndTime}"
											format="MM/DD/YYYY hh:mm a"
											disabled="#{credentialEditBean.hasDeliveryEnded()}"
											timeInputClass="datePickerSelector#{credentialEditBean.hasDeliveryEnded() ? '1' : ''} deliveryEndSelector"
									/>
								</div>
								<script>
									$(function() {
										initializeDatePickers();
										disableInputAfterSpecifiedTime('deliveryStartSelector',
											#{credentialEditBean.getNumberOfMillisecondsBetweenNowAndDeliveryStart()});
										disableInputAfterSpecifiedTime('deliveryEndSelector',
											#{credentialEditBean.getNumberOfMillisecondsBetweenNowAndDeliveryEnd()});
									});

								</script>
							</c:if>
							<div class="publishRow">
								<h:panelGroup id="savePanel">
									<ui:fragment rendered="#{credentialEditBean.areOtherCredentialsInfluencedByUpdate()}">
										<a href="javascript:void(0);" class="btn btn-green" data-toggle="modal" data-target="#modalSaveChanges">Save changes</a>
										<div class="modal fade" id="modalSaveChanges" tabindex="-1" role="dialog" aria-labelledby="removeCompetence">
											<div class="modal-dialog" role="document">
												<div class="modal-content">
													<div class="modal-header">
														<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&#215;</span></button>
														<h2 class="modal-title" id="removeCompetence1">Save changes</h2>
													</div>

													<div class="modal-body">
														<p>Disabling learning in stages for this #{msg['label.credential'].toLowerCase()} will also disable it for #{msg['label.credential.plural'].toLowerCase()} in other stages too. Are you sure you want to continue?</p><br/>
													</div>

													<div class="modal-footer">
														<p:commandLink styleClass="btn btn-green"
																	   action="#{credentialEditBean.save()}"
																	   update=":#{cc.clientId}:formMain #{cc.attrs.toUpdate} :#{cc.clientId}:archiveDialog :#{cc.clientId}:restoreDialog :#{cc.clientId}:createStageCredentialForm"
																	   onclick="copyTextFromTinyMCEToTextarea('#createCredential\\:formMain\\:inputDescription');"
																	   oncomplete="hideModal('modalSaveChanges')">
															<f:param name="page" value="#{facesContext.viewRoot.viewId}" />
															<f:param name="learningContext" value="#{learningContext}" />
															Save changes
														</p:commandLink>
														<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
													</div>
												</div>
											</div>
										</div>
									</ui:fragment>
									<p:commandLink rendered="#{not credentialEditBean.areOtherCredentialsInfluencedByUpdate()}"
											styleClass="btn btn-green"
											action="#{credentialEditBean.save()}"
											update=":#{cc.clientId}:formMain #{cc.attrs.toUpdate} :#{cc.clientId}:archiveDialog :#{cc.clientId}:restoreDialog :#{cc.clientId}:createStageCredentialForm"
											onclick="copyTextFromTinyMCEToTextarea('#createCredential\\:formMain\\:inputDescription');">
										<f:param name="page" value="#{facesContext.viewRoot.viewId}" />
										<f:param name="learningContext" value="#{learningContext}" />
										Save changes
									</p:commandLink>
								</h:panelGroup>
								<ui:fragment rendered="#{credentialEditBean.credentialData.id > 0 and credentialEditBean.original and not credentialEditBean.credentialData.archived}">
									<a href="#" class="linkRed" data-toggle="modal" data-target="#archiveModal">Archive</a>
								</ui:fragment>
								<ui:fragment rendered="#{credentialEditBean.credentialData.id > 0 and credentialEditBean.original and credentialEditBean.credentialData.archived}">
									<a href="#" data-toggle="modal" data-target="#restoreModal">Restore</a>
								</ui:fragment>
								<ui:fragment rendered="#{credentialEditBean.credentialData.id > 0 and credentialEditBean.delivery}">
									<a href="#" class="linkRed" data-toggle="modal" data-target="#deleteModal">Delete</a>
								</ui:fragment>
							</div>
						</div>
					</div>
				</div>
			</div>
		</h:form>

		<h:form id="formRemoveComp">
			<div class="modal fade" id="modalRemoveComp" tabindex="-1" role="dialog" aria-labelledby="removeCompetence">
				<div class="modal-dialog" role="document">
					<div class="modal-content">
						<div class="modal-header">
							<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&#215;</span></button>
							<h2 class="modal-title" id="removeCompetence1">Remove Competence?</h2>
						</div>

						<div class="modal-body">
							<p>Are you sure you want to remove this competence from credential?<br></br><br></br></p>
						</div>

						<div class="modal-footer">
							<p:commandLink
									value="Remove"
									styleClass="btn btn-red"
									process="@this"
									action="#{credentialEditBean.removeComp()}"
									update=":#{cc.clientId}:formMain:compList"
									oncomplete="$('#modalRemoveComp').modal('hide');">
							</p:commandLink>
							<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
						</div>
					</div>
				</div>
			</div>
		</h:form>
   </div>
	  
	<dlg:archiveResource
		id="archiveDialog"
		archiveActionMethodName="archive"
		archiveAction="#{credentialEditBean.archive}"
		toUpdate=":#{cc.clientId}:formMain #{cc.attrs.toUpdate}"
		title="#{msg['label.credential']}"
		resourceType="credential"
		resourceTypePlural="credentials"
		learningContext="#{learningContext}"/>

	<dlg:restoreResource
		id="restoreDialog"
		restoreActionMethodName="restore"
		restoreAction="#{credentialEditBean.restore}"
		toUpdate=":#{cc.clientId}:formMain #{cc.attrs.toUpdate}"
		title="#{msg['label.credential']}"
		resourceType="credential"
		resourceTypePlural="credentials"
		learningContext="#{learningContext}"/>

	<c:if test="#{credentialEditBean.original}">
		<courses:startDelivery
			id="startDeliveryModal"
			credentialId="#{credentialEditBean.credentialData.id}"
			toUpdate=":#{cc.clientId}:formMain:growlMain"
			learningContext="#{learningContext}" />
	</c:if>

	<c:if test="#{credentialEditBean.delivery}">
		<courses:deleteModalDialog
			deleteActionMethodName="delete"
			deleteAction="#{credentialEditBean.delete}"
			toUpdate=":#{cc.clientId}:formMain #{cc.attrs.toUpdate}"
			modalDeleteTitle="#{msg['label.credential']} #{msg['label.delivery']}"
			modalDeleteText="#{msg['label.credential'].toLowerCase()} #{msg['label.delivery'].toLowerCase()}"/>
	</c:if>

		<h:form id="createStageCredentialForm">
			<div class="modal fade newGroupModal" id="createStageCredentialModal" tabindex="-1" role="dialog" aria-labelledby="nGroupModal">
				<div class="modal-dialog">
					<div class="modal-content">
						<div class="modal-header">
							<button type="button" class="close" data-dismiss="modal"
									aria-label="Close">
								<span aria-hidden="true">&#215;</span>
							</button>
							<h2 class="modal-title">Create #{msg['label.credential']} for '#{credentialEditBean.nextStageToBeCreated.title}' learning stage</h2>
						</div>

						<div class="modal-body">
							<p>#{msg['label.credential']} in '#{credentialEditBean.nextStageToBeCreated.title}' learning stage will be created with copied details from '#{credentialEditBean.lastCreatedStage.learningStage.title}' #{msg['label.credential'].toLowerCase()}. You can choose whether you want to copy the learning content too, or just the basic #{msg['label.credential'].toLowerCase()} info.</p>
						</div>

						<div class="modal-footer">
							<p:commandLink id="basicCopyBtn"
										   styleClass="btn btn-green"
										   process="@form"
										   action="#{credentialEditBean.createNextStageCredentialBasic()}"
										   update=":#{cc.clientId}:formMain:growlMain"
										   oncomplete="$('#createStageCredentialModal').modal('hide');">
								<f:param name="page" value="#{facesContext.viewRoot.viewId}" />
								<f:param name="learningContext"
										 value="#{util:addSubContext(learningContext, 'name:next_learning_stage_dialog|id:'.concat(credentialEditBean.nextStageToBeCreated.id))}" />
								Copy only basic info
							</p:commandLink>
							<p:commandLink id="fullCopyBtn"
										   styleClass="btn btn-green"
										   process="@form"
										   action="#{credentialEditBean.createNextStageCredentialFull()}"
										   update=":#{cc.clientId}:formMain:growlMain"
										   oncomplete="$('#createStageCredentialModal').modal('hide');">
								<f:param name="page" value="#{facesContext.viewRoot.viewId}" />
								<f:param name="learningContext"
										 value="#{util:addSubContext(learningContext, 'name:next_learning_stage_dialog|id:'.concat(credentialEditBean.nextStageToBeCreated.id))}" />
								Full copy (with #{msg['label.competence.plural'].toLowerCase()})
							</p:commandLink>
							<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
						</div>
					</div>
				</div>
			</div>
		</h:form>
	  
	</composite:implementation>
</ui:component>