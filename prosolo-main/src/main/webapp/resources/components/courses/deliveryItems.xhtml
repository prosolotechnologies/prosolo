<ui:component
		xmlns:h="http://java.sun.com/jsf/html"
		xmlns:f="http://java.sun.com/jsf/core"
		xmlns:ui="http://java.sun.com/jsf/facelets"
		xmlns:composite="http://java.sun.com/jsf/composite"
		xmlns:c="http://java.sun.com/jsp/jstl/core"
		xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
		xmlns:util="http://www.prosolo.com/util"
		xmlns:p="http://primefaces.org/ui"
		xmlns:pt="http://xmlns.jcp.org/jsf/passthrough">

	<composite:interface>
		<composite:attribute name="deliveries" required="true" />
		<composite:attribute name="canEdit" default="false" />
		<composite:attribute name="isAdmin" type="java.lang.Boolean" default="false" />
		<composite:attribute name="bean" required="true"/>
		<composite:attribute name="onDeliveryEditComplete" default=""/>
		<composite:attribute name="onDeliveryEditUpdate" default="" />
		<composite:attribute name="encodedOrgId" default="" />
		<composite:attribute name="encodedUnitId" default="" />
	</composite:interface>
	
	<composite:implementation>
		<utilcomp:messagesBundle var="msg" />
		<ul>
			<ui:repeat var="delivery" value="#{cc.attrs.deliveries}">
	            <li class="deliveryItem">
	                <div class="deliveryItemLeft">
	                    <div class="status #{styleUtilBean.getStyleClassBasedOnDeliveryStatus(delivery.deliveryStatus)}"></div>
	                    <h3>
							<span>#{msg['label.delivery']} #{delivery.idData.formattedOrder}:</span>
							<h:link outcome="/manage/credential">
								#{delivery.idData.title}
								<f:param name="id" value="#{util:encodeId(delivery.idData.id)}"></f:param>
							</h:link>
						</h3>
	                    <div class="deliveryMeta">
							<h:panelGroup layout="block" styleClass="deliveryStage" rendered="#{delivery.learningStageEnabled}">
								<div class="stage"><span>Stage:</span> #{delivery.learningStage.title}</div>
							</h:panelGroup>
	                        <div class="deliveryTime">
	                            <div class="start"><span>Start:</span>
									<utilcomp:convertTimeOutput
											millis="#{delivery.deliveryStartTime}"
											format="MMM DD, YYYY [at] hh:mm a"
									/>
								</div>
	                            <div class="end"><span>End:</span>
									<ui:fragment rendered="#{delivery.deliveryEndTime gt 0}">
										<utilcomp:convertTimeOutput
												millis="#{delivery.deliveryEndTime}"
												format="MMM DD, YYYY [at] hh:mm a"
										/>
									</ui:fragment>
									<ui:fragment rendered="#{delivery.deliveryEndTime le 0}">
										<span>-</span>
									</ui:fragment>
								</div>
	                        </div>
							<div class="deliveryPeople">
								<div class="students"><span>Available to:</span>
									<ui:fragment rendered="#{delivery.groupsThatCanLearn.count lt 0 or delivery.studentsWhoCanLearn.count lt 0}">
										<h:link rendered="#{cc.attrs.bean.canUserNavigateToWhoCanLearnPage()}" outcome="/manage/credential-who-can-learn"
												pt:data-toggle="tooltip"
												pt:title="#{msg['label.delivery']} is available to all #{msg['label.unit.plural'].toLowerCase()} having access to the #{msg['label.credential'].toLowerCase()} (units are defined in the Privacy section)">
											all #{msg['label.unit.plural'].toLowerCase()}
											<f:param name="id" value="#{util:encodeId(delivery.idData.id)}"></f:param>
										</h:link>
										<ui:fragment rendered="#{not cc.attrs.bean.canUserNavigateToWhoCanLearnPage()}">
											<a data-toggle="tooltip"
											   title="#{msg['label.delivery']} is available to all #{msg['label.unit.plural'].toLowerCase()} having access to the #{msg['label.credential'].toLowerCase()}">
												all #{msg['label.unit.plural'].toLowerCase()}
											</a>
										</ui:fragment>
									</ui:fragment>
									<ui:fragment rendered="#{delivery.groupsThatCanLearn.count eq 0 and delivery.studentsWhoCanLearn.count eq 0}">
										no one
									</ui:fragment>
									<ui:fragment rendered="#{delivery.groupsThatCanLearn.count gt 0}">
										<ui:fragment rendered="#{cc.attrs.bean.canUserNavigateToWhoCanLearnPage()}">
											<h:link styleClass="selectorGroupsLink#{delivery.idData.id}" outcome="/manage/credential-who-can-learn"
													pt:data-toggle="tooltip"
													pt:title="#{cc.attrs.bean.getGroupsThatCanLearnString(delivery)}">
													#{delivery.groupsThatCanLearn.count} #{delivery.groupsThatCanLearn.count gt 1 ? 'groups' : 'group'}
												<f:param name="id" value="#{util:encodeId(delivery.idData.id)}"></f:param>
											</h:link>
										</ui:fragment>
										<ui:fragment rendered="#{not cc.attrs.bean.canUserNavigateToWhoCanLearnPage()}">
											<a class="selectorGroupsLink#{delivery.idData.id}"
											   data-toggle="tooltip"
											   title="#{cc.attrs.bean.getGroupsThatCanLearnString(delivery)}">
												#{delivery.groupsThatCanLearn.count} #{delivery.groupsThatCanLearn.count gt 1 ? 'groups' : 'group'}
											</a>
										</ui:fragment>
									</ui:fragment>
									<ui:fragment rendered="#{delivery.groupsThatCanLearn.count gt 0 and delivery.studentsWhoCanLearn.count gt 0}">
										and
									</ui:fragment>
									<ui:fragment rendered="#{delivery.studentsWhoCanLearn.count gt 0}">
										<ui:fragment rendered="#{cc.attrs.bean.canUserNavigateToWhoCanLearnPage()}">
											<h:link outcome="/manage/credential-who-can-learn"
													styleClass="selectorStudentsLink#{delivery.idData.id}"
													pt:data-toggle="tooltip"
													pt:title="#{cc.attrs.bean.getStudentsWhoCanLearnString(delivery)}">
												#{delivery.studentsWhoCanLearn.count} #{delivery.studentsWhoCanLearn.count gt 1 ? 'students' : 'student'}
												<f:param name="id" value="#{util:encodeId(delivery.idData.id)}"></f:param>
											</h:link>
										</ui:fragment>
										<ui:fragment rendered="#{not cc.attrs.bean.canUserNavigateToWhoCanLearnPage()}">
											<a class="selectorStudentsLink#{delivery.idData.id}"
											   data-toggle="tooltip"
											   title="#{cc.attrs.bean.getStudentsWhoCanLearnString(delivery)}">
												#{delivery.studentsWhoCanLearn.count} #{delivery.studentsWhoCanLearn.count gt 1 ? 'students' : 'student'}
											</a>
										</ui:fragment>
									</ui:fragment>
								</div>
								<h:form>
									<p:remoteCommand name="initGroupTooltipData#{delivery.idData.id}"
													 process="@this"
													 action="#{cc.attrs.bean.initGroupsThatCanLearnData(delivery)}"
													 update="panelGroupsThatCanLearnJS"
													 oncomplete="$('.selectorGroupsLink#{delivery.idData.id}').tooltip('hide').attr('data-original-title', getGroupsThatCanLearn#{delivery.idData.id}).tooltip('show');">
									</p:remoteCommand>
									<script>
										var initGroupTooltipFunction#{delivery.idData.id} = function() {
											initGroupTooltipData#{delivery.idData.id}();
										}
									</script>
									<h:panelGroup id="panelGroupsThatCanLearnJS">
										<ui:fragment rendered="#{not delivery.groupsThatCanLearn.initialized}">
											<script>
												$('.selectorGroupsLink#{delivery.idData.id}').on('mouseenter', initGroupTooltipFunction#{delivery.idData.id});
											</script>
										</ui:fragment>
										<ui:fragment rendered="#{delivery.groupsThatCanLearn.initialized}">
											<script>
												$('.selectorGroupsLink#{delivery.idData.id}').off('mouseenter', initGroupTooltipFunction#{delivery.idData.id});
											</script>
										</ui:fragment>
										<script>
											function getGroupsThatCanLearn#{delivery.idData.id}() {
												return '#{cc.attrs.bean.getGroupsThatCanLearnString(delivery)}';
											}
										</script>
									</h:panelGroup>
								</h:form>
								<h:form>
									<p:remoteCommand name="initStudentTooltipData#{delivery.idData.id}"
													 process="@this"
													 action="#{cc.attrs.bean.initStudentsWhoCanLearnData(delivery)}"
													 update="panelStudentsWhoCanLearnJS"
													 oncomplete="$('.selectorStudentsLink#{delivery.idData.id}').tooltip('hide').attr('data-original-title', getStudentsWhoCanLearn#{delivery.idData.id}).tooltip('show');">
									</p:remoteCommand>
									<script>
										var initStudentsTooltipFunction#{delivery.idData.id} = function() {
											initStudentTooltipData#{delivery.idData.id}();
										}
									</script>
									<h:panelGroup id="panelStudentsWhoCanLearnJS">
										<ui:fragment rendered="#{not delivery.studentsWhoCanLearn.initialized}">
											<script>
												$('.selectorStudentsLink#{delivery.idData.id}').on('mouseenter', initStudentsTooltipFunction#{delivery.idData.id});
											</script>
										</ui:fragment>
										<ui:fragment rendered="#{delivery.studentsWhoCanLearn.initialized}">
											<script>
												$('.selectorStudentsLink#{delivery.idData.id}').off('mouseenter', initStudentsTooltipFunction#{delivery.idData.id});
											</script>
										</ui:fragment>
										<script>
											function getStudentsWhoCanLearn#{delivery.idData.id}() {
												return '#{cc.attrs.bean.getStudentsWhoCanLearnString(delivery)}';
											}
										</script>
									</h:panelGroup>
								</h:form>
							</div>
	                    </div>
	                </div>
	                <div class="deliveryItemRight">
						<ui:fragment rendered="#{not delivery.archived and cc.attrs.canEdit}">
							<div class="dropdown optMoreMenu">
								<a data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">options menu</a>
								<ul class="dropdown-menu bullet pull-center" aria-labelledby="dropdownMenu2">
									<li>
										<p:commandLink
												value="Archive"
												styleClass="linkRed"
												process="@this"
												action="#{cc.attrs.bean.select(delivery)}"
												update=":archiveDialogDeliveries"
												oncomplete="$('#archiveModalDeliveries').modal('show');">
										</p:commandLink>
									</li>
								</ul>
							</div>
						</ui:fragment>
						<ui:fragment rendered="#{delivery.archived and cc.attrs.canEdit}">
							<div class="dropdown optMoreMenu">
								<a data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">options menu</a>
								<ul class="dropdown-menu bullet pull-center" aria-labelledby="dropdownMenu2">
									<li>
										<p:commandLink
												value="Restore"
												styleClass="linkRed"
												process="@this"
												action="#{cc.attrs.bean.select(delivery)}"
												update=":restoreDialog"
												oncomplete="$('#restoreModal').modal('show');">
										</p:commandLink>
									</li>
								</ul>
							</div>
						</ui:fragment>
	                    <h:link rendered="#{not cc.attrs.isAdmin and cc.attrs.canEdit}"
	                    	outcome="/manage/credential-create"
	                    	styleClass="btn btn-green-stroke btn-sm">
	                    	Edit
	                    	<f:param name="id" value="#{util:encodeId(delivery.idData.id)}"></f:param>
	                    </h:link>
						<p:commandLink rendered="#{cc.attrs.isAdmin}"
									   styleClass="btn btn-green-stroke btn-sm"
									   pt:data-toggle="modal"
									   process="@this"
									   action="#{cc.attrs.bean.select(delivery)}"
									   oncomplete="#{cc.attrs.onDeliveryEditComplete}"
									   update="#{cc.attrs.onDeliveryEditUpdate}">
							Edit Start/End
						</p:commandLink>
						<h:link rendered="#{cc.attrs.isAdmin}" outcome="/admin/credential">
							View
							<f:param name="orgId" value="#{cc.attrs.encodedOrgId}"></f:param>
							<f:param name="unitId" value="#{cc.attrs.encodedUnitId}"></f:param>
							<f:param name="id" value="#{util:encodeId(delivery.idData.id)}"></f:param>
						</h:link>
	                    <h:link rendered="#{not cc.attrs.isAdmin}" outcome="/manage/credential">
							Preview
	                    	<f:param name="id" value="#{util:encodeId(delivery.idData.id)}"></f:param>
	                    </h:link>
	                </div>
	            </li>
	         </ui:repeat>
        </ul>
	</composite:implementation>
</ui:component>