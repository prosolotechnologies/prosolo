<ui:component xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:composite="http://java.sun.com/jsf/composite"
	xmlns:p="http://primefaces.org/ui"
	xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
	xmlns:util="http://www.prosolo.com/util">

	<composite:interface>
		<composite:attribute name="credentialTitle" required="true" />
		<composite:attribute name="role" required="true" />
		<composite:attribute name="toUpdate" default=""/>
	</composite:interface>

	<composite:implementation>
		<utilcomp:messagesBundle var="msg" />
		<script src="#{request.contextPath}/resources/javascript2/search.js"></script>
		<script src="https://use.typekit.net/zvv0dgl.js"></script>
		<script>
			try {
				Typekit.load({
					async : true
				});
			} catch (e) {
			}
		</script>
		<script>
			function hideAssesmentDialog(dialogId) {
				$('#' + dialogId).modal('hide');
				$("body").removeAttr("class").removeAttr("style")
				$("div.modal-backdrop.fade.in").remove()
			}
		</script>

		<ui:param name="baseContext"
			value="name:credential|id:#{askForAssessmentBean.decodedId}"></ui:param>
		<ui:param name="canEdit"
			value="#{(cc.attrs.role == 'MANAGER' and request.isUserInRole('MANAGE.CONTENT.EDIT') || cc.attrs.role != 'MANAGER') and askForAssessmentBean.credentialData.canEdit}"></ui:param>

		<div class="modal fade" id="askAssessment" tabindex="-1" role="dialog"
			aria-labelledby="askForAssessment">
			<div class="modal-dialog" role="document">
				<div class="modal-content">
					<div class="modal-header alignLeft">
						<button type="button" class="close" data-dismiss="modal"
							aria-label="Close">
							<span aria-hidden="true">&#215;</span>
						</button>
						<h2 class="modal-title" id="askForAssessment">Ask for
							Assessment</h2>
					</div>

					<div class="assessmentModalMeta">
						<div class="assessmentModalMetaLine">
							<div class="assessmentModalMetaLeft">#{msg['label.credential']}:</div>
							<div class="assessmentModalMetaRight">
								<h3>#{cc.attrs.credentialTitle}</h3>
							</div>
						</div>

						<ui:remove>
							<div class="assessmentModalMetaLine" id="assessmentModalMetaLine">
								<ui:fragment
									rendered="#{askForAssessmentBean.credentialData.instructorPresent}">
									<div class="assessmentModalMetaLeft">#{msg['label.instructor']}:</div>
									<div class="assessmentModalMetaRight">
										<img src="#{askForAssessmentBean.credentialData.instructorAvatarUrl}"
											class="img-circle" width="32" height="32"
											alt="#{askForAssessmentBean.credentialData.instructorFullName}" />
										<h3>#{askForAssessmentBean.credentialData.instructorFullName}</h3>
									</div>
								</ui:fragment>
							</div>
						</ui:remove>

						<div class="assessmentModalMetaLine">
							<div class="assessmentModalMetaLeft">Ask to:</div>
							<h:panelGroup layuot="block" id="selectAssessor"
								class="assessmentModalMetaRight">
								<h:panelGroup
									rendered="#{askForAssessmentBean.assessmentRequestData.assessorSet}">
									<utilcomp:userAvatar
										avatar="#{askForAssessmentBean.assessmentRequestData.assessorAvatarUrl}"
										fullName="#{askForAssessmentBean.assessmentRequestData.assessorFullName}" />
									<h3>#{askForAssessmentBean.assessmentRequestData.assessorFullName}</h3>
								</h:panelGroup>

								<h:inputText
									rendered="#{not askForAssessmentBean.assessmentRequestData.assessorSet}"
									onkeyup="searchListener(execSearchUsers);"
									value="#{askForAssessmentBean.peerSearchTerm}" id="newAssessorName"
									placeholder="Type peer's name..." name="newAssessorName"
									autocomplete="off" />

								<p:remoteCommand name="execSearchUsers"
									process="newAssessorName"
									action="#{askForAssessmentBean.searchCredentialPeers()}"
									update="usersListPanel" />

								<p:commandLink styleClass="btn btn-green-stroke btn-sm"
									value="Choose random"
									action="#{askForAssessmentBean.chooseRandomPeerForAssessor()}"
									update="selectAssessor randomUserErrorMessage" />

								<h:panelGroup id="usersListPanel">
									<h:panelGroup
										rendered="#{not askForAssessmentBean.assessmentRequestData.assessorSet and askForAssessmentBean.peersForAssessment != null and askForAssessmentBean.peersForAssessment.size() > 0}">
										<ul id="usersList" class="dropdown-menu searchResultsDrop"
											style="display: block;">
											<ui:repeat value="#{askForAssessmentBean.peersForAssessment}"
												var="user" varStatus="iterator">
												<li><p:commandLink style="cursor: pointer;"
														id="userlink-#{user.id}"
														action="#{askForAssessmentBean.setAssessor(user)}"
														update=":#{cc.clientId}:selectAssessor :#{cc.clientId}:randomUserErrorMessage">
														<utilcomp:userAvatar avatar="#{user.avatarUrl}"
															fullName="#{user.fullName}" />
														<h3>#{user.fullName}</h3>
													</p:commandLink></li>
											</ui:repeat>
										</ul>
									</h:panelGroup>
								</h:panelGroup>
							</h:panelGroup>
						</div>
					</div>

					<h:panelGroup id="randomUserErrorMessage">
						<ui:fragment rendered="#{askForAssessmentBean.noRandomAssessor}">
							<div class="alert alert-warning" role="alert">There is no
								peer available to ask for assessment.</div>
						</ui:fragment>
					</h:panelGroup>

					<div class="modal-body alignLeft">
						<h:inputTextarea id="messageContentTextarea"
							placeholder="Write message..."
							value="#{askForAssessmentBean.assessmentRequestData.messageText}" />

						<ui:remove>
							<div class="assessmentMassageContent"
								placeholder="Write message..." strip-br="true"
								contenteditable="true" onkeyup="displaySubmitButton(this);"></div>
						</ui:remove>

						<script>
							$(
									'#'
											+ escapeColons('comment_#{comment.commentId}')
											+ ' .replyComment .contentEditableComment')
									.on(
											'keyup',
											function(e) {
												$(this).prev('textarea').val(
														$(this).html());
											});
						</script>
					</div>

					<div class="modal-footer alignLeft">
						<p:commandLink process="messageContentTextarea"
							update="#{cc.attrs.toUpdate}"
							action="#{askForAssessmentBean.submitAssessment()}"
							styleClass="btn btn-green"
							oncomplete="hideAssesmentDialog('askAssessment')">
							<f:param name="page" value="#{facesContext.viewRoot.viewId}"></f:param>
							<f:param name="learningContext" value="#{baseContext}"></f:param>
							<f:param name="service" value="name:ask_for_assessment_dialog"></f:param>
			                                    		Submit
			                                    </p:commandLink>
					</div>
				</div>
			</div>
		</div>
		<p:remoteCommand name="resetAskForAssessmentModal"
			action="#{askForAssessmentBean.resetAskForAssessmentModal()}"
			update="selectAssessor randomUserErrorMessage messageContentTextarea" />

		<script>
			$('#askAssessment').on('shown.bs.modal', function() {
				$('#credential\\:formMain\\:newAssessorName').focus();
			}).on('hidden.bs.modal', function() {
				resetAskForAssessmentModal();
			})
		</script>
	</composite:implementation>
</ui:component>