<ui:component xmlns:h="http://java.sun.com/jsf/html"
			  xmlns:f="http://java.sun.com/jsf/core"
			  xmlns:ui="http://java.sun.com/jsf/facelets"
			  xmlns:composite="http://java.sun.com/jsf/composite"
			  xmlns:p="http://primefaces.org/ui"
			  xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
			  xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
			  xmlns:util="http://www.prosolo.com/util"
			  xmlns:c="http://java.sun.com/jsp/jstl/core"
			  xmlns:assessment="http://java.sun.com/jsf/composite/components/assessments"
>

	<composite:interface>
		<composite:attribute name="bean" required="true" />
		<composite:attribute name="learningContext" default="" />
		<composite:attribute name="service" default="" />
		<composite:attribute name="role" default="USER" />
	</composite:interface>

	<composite:implementation>
		<utilcomp:messagesBundle var="msg" />

		<ui:param name="learningContext" value="#{util:addSubContext(cc.attrs.learningContext, 'name:CREDENTIAL_ASSESSMENT|id:'.concat(cc.attrs.bean.fullAssessmentData.credAssessmentId))}" />

		<h:outputStylesheet library="css2" name="bootstrap-slider.css" />
		<script
				src="#{request.contextPath}/resources/javascript2/bootstrap-slider.min.js"></script>

		<c:if test="#{cc.attrs.bean.fullDisplayMode}">
			<script>
				function hideConfirmDialog(dialogId) {
					$('#' + dialogId).modal('hide');
					$("body").removeAttr("class").removeAttr("style")
					$("div.modal-backdrop.fade.in").remove()
				}

				function markDiscussionAsSeen(assessmentId, el, resource) {
					switch (resource) {
						case 'ACTIVITY':
							markActivityDiscussionRead
								([{
									name: 'assessmentEncId',
									value: assessmentId
								}]);
							break;
						case 'COMPETENCE':
							markCompetenceAssessmentDiscussionRead
								([{
									name: 'assessmentEncId',
									value: assessmentId
								}]);
							break;
						case 'CREDENTIAL':
							markCredentialAssessmentDiscussionRead
							([{
								name: 'assessmentEncId',
								value: assessmentId
							}]);
							break;
					}
					$(el).removeClass("hasNewComments");
				}

				//comment form hide/show
				function displaySubmitButton(inputElem) {
					if ($(inputElem).val().length == 0) {
						$(inputElem).parent().find('a.btn-green').addClass('hidden');
					} else {
						$(inputElem).parent().find('a.btn-green').removeClass('hidden');
					}
				}

				function displaySubmitButtonPrivateConvModal(inputElem) {
					if ($(inputElem).val().length == 0) {
						$(inputElem).parent().find('a.btn-green').addClass('hidden');
					} else {
						$(inputElem).parent().find('a.btn-green').removeClass('hidden');
					}
				}

			</script>
			<h:form prependId="false" id="remoteCommandForm">
				<p:remoteCommand process="@this" action="#{cc.attrs.bean.markActivityAssessmentDiscussionRead()}"
								 name="markActivityDiscussionRead"></p:remoteCommand>
				<p:remoteCommand process="@this" action="#{cc.attrs.bean.markCompetenceAssessmentDiscussionRead()}"
								 name="markCompetenceAssessmentDiscussionRead"/>
				<p:remoteCommand process="@this" action="#{cc.attrs.bean.markCredentialAssessmentDiscussionRead()}"
								 name="markCredentialAssessmentDiscussionRead"/>
			</h:form>
		</c:if>

		<p:growl id="growlMain" globalOnly="true" showDetail="true" />

		<div class="whiteBar">
			<c:if test="#{cc.attrs.bean.fullDisplayMode and not cc.attrs.bean.isUserAssessedStudentInCurrentContext()}">
				<div class="container">
					<div class="whiteBarContent">
						<div class="whiteBarLeft">
							<h:form id="assessCredentialForm" prependId="false">
								<ui:fragment
										rendered="#{cc.attrs.bean.fullAssessmentData.approved}">
									<div class="tagApproved left item">Approved</div>
								</ui:fragment>

								<ui:fragment rendered="#{not cc.attrs.bean.fullAssessmentData.approved and cc.attrs.bean.isUserAssessorInCurrentContext() and not cc.attrs.bean.allCompetencesStarted()}">
									<a href="javascript:void(0);" disabled="disabled" class="btn btn-green btn-sm item" data-toggle="tooltip" title="#{msg['label.credential']} can't be approved until all #{msg['label.competence.plural'].toLowerCase()} are started">Approve</a>
								</ui:fragment>

								<ui:fragment rendered="#{not cc.attrs.bean.fullAssessmentData.approved and cc.attrs.bean.isUserAssessorInCurrentContext() and cc.attrs.bean.allCompetencesStarted()}">
									<p:commandLink
										styleClass="btn btn-green btn-sm item"
										pt:data-toggle="modal"
										value="Approve"
										action="#{cc.attrs.bean.prepareCredentialForApprove()}"
										update=":#{cc.clientId}:formApproveCredential:panelCredentialResult"
										oncomplete="$('#approveAssessment').modal('show')"
									/>
								</ui:fragment>

								<ui:remove>
									<div class="totalScore">Total score:
										#{cc.attrs.bean.fullAssessmentData.gradeData.currentGrade} /
										#{cc.attrs.bean.fullAssessmentData.gradeData.maxGrade}</div>
								</ui:remove>
								<p:commandLink styleClass="item commentsIcon #{(!cc.attrs.bean.fullAssessmentData.participantInDiscussion or cc.attrs.bean.fullAssessmentData.allRead or cc.attrs.bean.fullAssessmentData.numberOfMessages eq 0) ? '' : 'hasNewComments'}" pt:data-toggle="modal"
											   onclick="markDiscussionAsSeen('#{util:encodeId(cc.attrs.bean.fullAssessmentData.credAssessmentId)}', this, 'CREDENTIAL')"
											   action="#{cc.attrs.bean.prepareLearningResourceAssessmentForCommenting()}"
											   update=":assessmentPreview:commentModal:formPrivateConversation:panelModalPrivateConversation"
											   oncomplete="$('#assessmentCommentsModal1').modal('show');">
									#{cc.attrs.bean.fullAssessmentData.numberOfMessages}
								</p:commandLink>
								<assessment:gradeLabel
										assessment="#{cc.attrs.bean.fullAssessmentData}"
										assessmentBean="#{cc.attrs.bean}"
										currentUserAssessedStudent="#{cc.attrs.bean.isUserAssessedStudentInCurrentContext()}"
										currentUserAssessor="#{cc.attrs.bean.isUserAssessorInCurrentContext()}"
										gradeData="#{cc.attrs.bean.fullAssessmentData.gradeData}"
										userAllowedToSeeRubric="#{cc.attrs.bean.isUserAllowedToSeeRubric(cc.attrs.bean.fullAssessmentData.gradeData, 'CREDENTIAL')}"
										gradeLinkSelectorId="credential"
										toUpdateGradePanel=":#{cc.clientId}:gradePanelContainer"
										gradePanelSidebarId="gradeSidebar"
										toUpdateRubricPanelForStudent=":#{cc.clientId}:rubricAssessmentPreview:panelRubricAssessment"
										growlToUpdate=":#{cc.clientId}:growlMain"
										role="#{cc.attrs.role}"
										learningContext="#{learningContext}"
										learningResource="CREDENTIAL"
								/>
							</h:form>
						</div>

						<div class="whiteBarRight">
							<h:panelGroup rendered="#{cc.attrs.bean.fullAssessmentData.mandatoryFlow}" styleClass="mandatoryTag item" layout="block"/>
							<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.durationString ne null}">
								<div class="duration item">#{cc.attrs.bean.fullAssessmentData.durationString}</div>
							</ui:fragment>
						</div>
					</div>
				</div>
			</c:if>
		</div>

		<div class="container">
			<ol class="breadcrumb">
				<ui:fragment rendered="#{cc.attrs.role eq 'MANAGER'}">
					<li>
						<h:link value="#{msg['label.credential.plural']}" outcome="/manage/library" />
					</li>
					<li>
						<h:link
								value="#{cc.attrs.bean.credentialIdData.fullTitle}"
								outcome="/manage/credential">
							<f:param name="id" value="#{util:encodeId(cc.attrs.bean.decodedId)}"></f:param>
						</h:link>
					</li>
					<li>
						<h:link value="Students" outcome="credential-students">
							<f:param name="id" value="#{util:encodeId(cc.attrs.bean.decodedId)}"></f:param>
						</h:link>
					</li>

					<li class="active">
						<assessment:assessmentActorName
								actorId="#{cc.attrs.bean.fullAssessmentData.assessedStudentId}"
								actorFullName="#{cc.attrs.bean.fullAssessmentData.studentFullName}"
								blindAssessmentMode="#{cc.attrs.bean.fullAssessmentData.blindAssessmentMode}"
								actorType="STUDENT"
						/>
					</li>
				</ui:fragment>

				<ui:fragment rendered="#{cc.attrs.role eq 'USER'}">
					<ui:fragment rendered="#{cc.attrs.bean.fullDisplayMode}">
						<li>
							<h:link value="#{msg['label.credential.plural']}" outcome="credentialLibrary"/>
						</li>
						<li>
							<h:link value="#{cc.attrs.bean.credentialTitle}" outcome="credential">
								<f:param name="id" value="#{util:encodeId(cc.attrs.bean.decodedId)}"/>
							</h:link>
						</li>

						<li>
							<h:link rendered="#{not cc.attrs.bean.isUserAssessedStudentInCurrentContext()}" value="Assessments" outcome="/assessments">
								<f:param name="id" value="#{param.id}" />
							</h:link>
							<h:link rendered="#{cc.attrs.bean.isUserAssessedStudentInCurrentContext()}" value="Assessments" outcome="/credential-instructor-assessment">
								<f:param name="id" value="#{param.id}" />
							</h:link>
						</li>
						<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.assessorId > 0}">
							<li class="active">
								<assessment:assessmentActorName
										actorId="#{cc.attrs.bean.fullAssessmentData.assessorId}"
										actorFullName="#{cc.attrs.bean.fullAssessmentData.assessorFullName}"
										blindAssessmentMode="#{cc.attrs.bean.fullAssessmentData.blindAssessmentMode}"
										actorType="ASSESSOR"
								/>
							</li>
						</ui:fragment>
					</ui:fragment>
					<ui:fragment rendered="#{not cc.attrs.bean.fullDisplayMode}">
						<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.blindAssessmentMode eq 'OFF'}">
							<li>
								<h:link value="#{cc.attrs.bean.fullAssessmentData.studentFullName}" outcome="profile">
									<f:param name="id" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.assessedStudentId)}"/>
								</h:link>
							</li>
							<li>
								<h:link value="#{cc.attrs.bean.credentialTitle}" outcome="public-credential">
									<f:param name="credId" value="#{cc.attrs.bean.id}"/>
									<f:param name="studentId" value="#{param.studentId}"/>
								</h:link>
							</li>
						</ui:fragment>
						<ui:fragment rendered="#{cc.attrs.bean.isUserAssessedStudentInCurrentContext()}">
							<li>
								<h:link value="Assessments" outcome="/credential-instructor-assessment-profile">
									<f:param name="credId" value="#{cc.attrs.bean.id}" />
									<f:param name="studentId" value="#{param.studentId}"/>
								</h:link>
							</li>
						</ui:fragment>
						<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.type ne 'SELF_ASSESSMENT' and cc.attrs.bean.fullAssessmentData.assessorId > 0}">
							<li class="active">
								<assessment:assessmentActorName
										actorId="#{cc.attrs.bean.fullAssessmentData.assessorId}"
										actorFullName="#{cc.attrs.bean.fullAssessmentData.assessorFullName}"
										blindAssessmentMode="#{cc.attrs.bean.fullAssessmentData.blindAssessmentMode}"
										actorType="ASSESSOR"
								/>
							</li>
						</ui:fragment>
						<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.type eq 'SELF_ASSESSMENT'}">
							<li class="active">Assessment</li>
						</ui:fragment>
					</ui:fragment>
				</ui:fragment>
			</ol>
		</div>

		<c:if test="#{cc.attrs.bean.fullDisplayMode and cc.attrs.bean.isUserAssessedStudentInCurrentContext()}">
			<div class="container">
				<div class="row">
					<div class="col-md-12">
						<assessment:credentialAssessmentStudentTabs
							encodedCredId="#{cc.attrs.bean.id}"
							peerAssessmentEnabled="#{cc.attrs.bean.peerAssessmentEnabled}"
							selfAssessmentEnabled="#{cc.attrs.bean.selfAssessmentEnabled}"
						/>
					</div>
				</div>
			</div>
		</c:if>

		<c:if test="#{not cc.attrs.bean.fullDisplayMode}">
			<div class="container">
				<div class="row">
					<div class="col-md-12">
						<assessment:credentialAssessmentStudentTabsPublic
								encodedCredId="#{cc.attrs.bean.id}"
								encodedStudentId="#{param.studentId}"
								peerAssessmentEnabled="#{cc.attrs.bean.peerAssessmentEnabled}"
								selfAssessmentEnabled="#{cc.attrs.bean.selfAssessmentEnabled}"
						/>
					</div>
				</div>
			</div>
		</c:if>

		<div class="container">
			<div class="row">
				<div class="col-md-#{cc.attrs.bean.fullAssessmentData.type eq 'SELF_ASSESSMENT' or (not cc.attrs.bean.fullDisplayMode and not cc.attrs.bean.fullAssessmentData.approved) ? '12' : '9'} mandatoryFlow">
					<c:if test="#{cc.attrs.bean.fullDisplayMode or cc.attrs.bean.fullAssessmentData.approved}">
						<h2 class="bottom10">#{msg['label.credential']} Assessment</h2>
					</c:if>

					<ui:fragment rendered="#{cc.attrs.role eq 'MANAGER'}">
						<div class="fromBox">
							<span class="fromLabel">From:</span>
							<h:panelGroup layout="block" id="otherAssessments" styleClass="dropdown fromDrop">
								<a data-toggle="dropdown" aria-haspopup="true"
								   aria-expanded="true">
									<span class="arrowDown">arrowDown</span>
									#{msg['label.assessment.type.'.concat(cc.attrs.bean.fullAssessmentData.type.name())]}<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.type ne 'SELF_ASSESSMENT' and cc.attrs.bean.fullAssessmentData.assessorId gt 0}">: </ui:fragment>
									<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.type ne 'SELF_ASSESSMENT' and cc.attrs.bean.fullAssessmentData.assessorId gt 0}">
										<assessment:assessmentActorName
													actorId="#{cc.attrs.bean.fullAssessmentData.assessorId}"
													actorFullName="#{cc.attrs.bean.fullAssessmentData.assessorFullName}"
													blindAssessmentMode="#{cc.attrs.bean.fullAssessmentData.blindAssessmentMode}"
													actorType="ASSESSOR"/>
									</ui:fragment>
								</a>
								<ul class="dropdown-menu" aria-labelledby="dropdownMenu">
									<ui:repeat value="#{cc.attrs.bean.otherAssessments}"
											   var="otherAssessment">
										<li>
											<h:outputLink
												value="#{applicationbean.domain}manage/credentials/#{otherAssessment.encodedCredentialId}/assessments/#{otherAssessment.encodedAssessmentId}">
												#{msg['label.assessment.type.'.concat(otherAssessment.type.name())]}<ui:fragment rendered="#{otherAssessment.type ne 'SELF_ASSESSMENT' and otherAssessment.assessorId gt 0}">: </ui:fragment>
												<ui:fragment rendered="#{otherAssessment.type ne 'SELF_ASSESSMENT' and otherAssessment.assessorId gt 0}">
													<assessment:assessmentActorName
															actorId="#{otherAssessment.assessorId}"
															actorFullName="#{otherAssessment.assessorFullName}"
															blindAssessmentMode="#{otherAssessment.blindAssessmentMode}"
															actorType="ASSESSOR"
													/>
												</ui:fragment>
												<span class="#{otherAssessment.approved ? 'approved' : 'pending'}">#{otherAssessment.approved
													? 'Approved' : 'Pending'}</span>
											</h:outputLink>
										</li>
									</ui:repeat>
								</ul>
							</h:panelGroup>
						</div>
					</ui:fragment>

					<c:if test="#{not cc.attrs.bean.fullDisplayMode and not cc.attrs.bean.fullAssessmentData.approved}">
						<div class="noContentMessage">
							<p>
								No assessments.
							</p>
						</div>
					</c:if>
					<c:if test="#{cc.attrs.bean.fullDisplayMode or cc.attrs.bean.fullAssessmentData.approved}">
						<ui:fragment rendered="#{cc.attrs.bean.fullDisplayMode and cc.attrs.bean.fullAssessmentData.type ne 'SELF_ASSESSMENT'}">
							<p>This is the ${msg['label.credential'].toLowerCase()} assessment for student
								<assessment:assessmentActorName
										actorId="#{cc.attrs.bean.fullAssessmentData.assessedStudentId}"
										actorFullName="#{cc.attrs.bean.fullAssessmentData.studentFullName}"
										blindAssessmentMode="#{cc.attrs.bean.fullAssessmentData.blindAssessmentMode}"
										actorType="STUDENT"
								/>.
								All comments between the student and the assessor are private.</p>
						</ui:fragment>

						<c:if test="#{cc.attrs.bean.fullDisplayMode and not cc.attrs.bean.isUserAssessedStudentInCurrentContext()}">
							<h:panelGroup id="panelAssessorNotification" styleClass="panelAssessorNotificationSelector">
								<h:panelGroup layout="block" styleClass="innerWrapper" rendered="#{cc.attrs.bean.fullAssessmentData.assessorNotified}">
									<div class="alert alert-warning alert-dismissible fade in bottom0" role="alert">
										Student asked for assessment of this #{msg['label.credential'].toLowerCase()}.
									</div>
								</h:panelGroup>
							</h:panelGroup>
							<br/>
						</c:if>

						<c:if test="#{!cc.attrs.bean.fullDisplayMode or cc.attrs.bean.isUserAssessedStudentInCurrentContext()}">
							<h:form id="assessCredentialForm" prependId="false">
								<article class="whiteBox summaryCard summaryCompetence summaryAssessments">
									<h:panelGroup id="panelAssessorNotification" styleClass="panelAssessorNotificationSelector">
										<h:panelGroup layout="block" styleClass="innerWrapper" rendered="#{cc.attrs.bean.fullDisplayMode and cc.attrs.bean.fullAssessmentData.assessorNotified}">
											<div class="alert alert-warning alert-dismissible fade in bottom0" role="alert">
												You have asked for assessment of this #{msg['label.credential'].toLowerCase()}.
											</div>
										</h:panelGroup>
									</h:panelGroup>
									<div class="summaryAssessmentsHead #{(cc.attrs.bean.fullDisplayMode and (!cc.attrs.bean.fullAssessmentData.participantInDiscussion or cc.attrs.bean.fullAssessmentData.allRead or cc.attrs.bean.fullAssessmentData.numberOfMessages eq 0)) ? '' : 'hasNewComments'}">
										<h2>#{cc.attrs.bean.credentialTitle}</h2>
										<div class="activityOptions">
												<ui:fragment
														rendered="#{cc.attrs.bean.fullAssessmentData.approved}">
													<div class="tagApproved">Approved</div>
												</ui:fragment>

												<ui:fragment rendered="#{cc.attrs.bean.fullDisplayMode and not cc.attrs.bean.fullAssessmentData.approved and cc.attrs.bean.isUserAssessorInCurrentContext() and not cc.attrs.bean.allCompetencesStarted()}">
													<a href="javascript:void(0);" disabled="disabled" class="linkApprove" data-toggle="tooltip" title="#{msg['label.credential']} can't be approved until all #{msg['label.competence.plural'].toLowerCase()} are started">Approve<span></span></a>
												</ui:fragment>

												<ui:fragment rendered="#{cc.attrs.bean.fullDisplayMode and not cc.attrs.bean.fullAssessmentData.approved and cc.attrs.bean.isUserAssessorInCurrentContext() and cc.attrs.bean.allCompetencesStarted()}">
													<p:commandLink
															styleClass="linkApprove"
															pt:data-toggle="modal"
															action="#{cc.attrs.bean.prepareCredentialForApprove()}"
															update=":#{cc.clientId}:formApproveCredential:panelCredentialResult"
															oncomplete="$('#approveAssessment').modal('show')">
														Approve<span></span>
													</p:commandLink>
												</ui:fragment>

												<ui:remove>
													<div class="totalScore">Total score:
														#{cc.attrs.bean.fullAssessmentData.gradeData.currentGrade} /
														#{cc.attrs.bean.fullAssessmentData.gradeData.maxGrade}</div>
												</ui:remove>
												<p:commandLink styleClass="commentsIcon" pt:data-toggle="modal"
															   rendered="#{cc.attrs.bean.fullDisplayMode}"
															   onclick="markDiscussionAsSeen('#{util:encodeId(cc.attrs.bean.fullAssessmentData.credAssessmentId)}', this.parentElement.parentElement, 'CREDENTIAL')"
															   action="#{cc.attrs.bean.prepareLearningResourceAssessmentForCommenting()}"
															   update=":assessmentPreview:commentModal:formPrivateConversation:panelModalPrivateConversation"
															   oncomplete="$('#assessmentCommentsModal1').modal('show');">
													#{cc.attrs.bean.fullAssessmentData.numberOfMessages}
												</p:commandLink>
												<assessment:gradeLabel
														assessment="#{cc.attrs.bean.fullAssessmentData}"
														assessmentBean="#{cc.attrs.bean}"
														currentUserAssessedStudent="#{cc.attrs.bean.isUserAssessedStudentInCurrentContext()}"
														currentUserAssessor="#{cc.attrs.bean.isUserAssessorInCurrentContext()}"
														gradeData="#{cc.attrs.bean.fullAssessmentData.gradeData}"
														userAllowedToSeeRubric="#{cc.attrs.bean.isUserAllowedToSeeRubric(cc.attrs.bean.fullAssessmentData.gradeData, 'CREDENTIAL')}"
														gradeLinkSelectorId="credential"
														toUpdateGradePanel=":#{cc.clientId}:gradePanelContainer"
														gradePanelSidebarId="gradeSidebar"
														toUpdateRubricPanelForStudent=":#{cc.clientId}:rubricAssessmentPreview:panelRubricAssessment"
														growlToUpdate=":#{cc.clientId}:growlMain"
														role="#{cc.attrs.role}"
														learningContext="#{learningContext}"
														fullDisplayMode="#{cc.attrs.bean.fullDisplayMode}"
														learningResource="CREDENTIAL"
												/>
										</div>
									</div>
								</article>
							</h:form>
						</c:if>

						<h:panelGroup id = "competenceAssessmentPanel">
							<h:form>
								<ui:repeat varStatus="compAssIndex" var="competenceAssessment" value="#{cc.attrs.bean.fullAssessmentData.competenceAssessmentData}">
									<assessment:competenceAssessment
											competenceAssessment="#{competenceAssessment}"
											blindAssessmentMode="#{cc.attrs.bean.fullAssessmentData.blindAssessmentMode}"
											bean="#{cc.attrs.bean}"
											fullDisplayMode="#{cc.attrs.bean.fullDisplayMode}"
											credentialId="#{cc.attrs.bean.fullAssessmentData.credentialId}"
											role="#{cc.attrs.role}"
											learningContext="#{learningContext}"
											growlToUpdate=":#{cc.clientId}:growlMain"
											toUpdateGradePanel=":#{cc.clientId}:gradePanelContainer"
											gradePanelSidebarId="gradeSidebar"
											toUpdateRubricPanelForStudent=":#{cc.clientId}:rubricAssessmentPreview:panelRubricAssessment"
											toUpdatePrivateConversationModal=":assessmentPreview:commentModal:formPrivateConversation:panelModalPrivateConversation"
											currentUserAssessor="#{cc.attrs.bean.isUserAssessorInCurrentContext()}"
											currentUserAssessedStudent="#{cc.attrs.bean.isUserAssessedStudentInCurrentContext()}"
									/>
								</ui:repeat>
							</h:form>
						</h:panelGroup>
					</c:if>
				</div>

				<c:if test="#{cc.attrs.bean.fullDisplayMode or cc.attrs.bean.fullAssessmentData.approved}">
					<h:panelGroup layout="block" rendered="#{cc.attrs.bean.fullAssessmentData.type ne 'SELF_ASSESSMENT'}" styleClass="col-md-3">
						<div class="sidebarBlock">
							<h2>Student</h2>
							<div class="user32">
								<a href="javascript:void(0);">
									<assessment:assessmentActorAvatar
											actorId="#{cc.attrs.bean.fullAssessmentData.assessedStudentId}"
											avatarUrl="#{cc.attrs.bean.fullAssessmentData.studentAvatarUrl}"
											actorFullName="#{cc.attrs.bean.fullAssessmentData.studentFullName}"
											blindAssessmentMode="#{cc.attrs.bean.fullAssessmentData.blindAssessmentMode}"
											actorType="STUDENT"
									/>
								</a>
								<h3>
									<a href="javascript:void(0);">
										<assessment:assessmentActorName
												actorId="#{cc.attrs.bean.fullAssessmentData.assessedStudentId}"
												actorFullName="#{cc.attrs.bean.fullAssessmentData.studentFullName}"
												blindAssessmentMode="#{cc.attrs.bean.fullAssessmentData.blindAssessmentMode}"
												actorType="STUDENT"
										/>
									</a>
								</h3>
							</div>
						</div>

						<div class="sidebarBlock">
							<ui:fragment
									rendered="#{cc.attrs.role eq 'USER' and cc.attrs.bean.fullAssessmentData.assessorId > 0}">
								<h2>Assessor</h2>
								<div class="user32">
									<a href="javascript:void(0);">
										<assessment:assessmentActorAvatar
												actorId="#{cc.attrs.bean.fullAssessmentData.assessorId}"
												avatarUrl="#{cc.attrs.bean.fullAssessmentData.assessorAvatarUrl}"
												actorFullName="#{cc.attrs.bean.fullAssessmentData.assessorFullName}"
												blindAssessmentMode="#{cc.attrs.bean.fullAssessmentData.blindAssessmentMode}"
												actorType="ASSESSOR"
										/>
									</a>
									<h3>
										<a href="javascript:void(0);">
											<assessment:assessmentActorName
													actorId="#{cc.attrs.bean.fullAssessmentData.assessorId}"
													actorFullName="#{cc.attrs.bean.fullAssessmentData.assessorFullName}"
													blindAssessmentMode="#{cc.attrs.bean.fullAssessmentData.blindAssessmentMode}"
													actorType="ASSESSOR"
											/>
										</a>
									</h3>
								</div>
							</ui:fragment>

							<ui:fragment
									rendered="#{cc.attrs.bean.fullAssessmentData.assessorId eq 0}">
								<div class="user32">
									<h3>Currently, there is no assessor assigned.</h3>
								</div>
							</ui:fragment>
						</div>

						<div class="sidebarBlock">
							<h2>Requested</h2>
							<p>#{cc.attrs.bean.fullAssessmentData.dateValue}</p>
						</div>
						<c:if test="#{cc.attrs.bean.fullDisplayMode and cc.attrs.bean.isUserAssessedStudentInCurrentContext()}">
							<p:commandLink
									styleClass="btn btn-green"
									pt:data-toggle="modal"
									value="Ask for #{msg['label.assessment.type.'.concat(cc.attrs.bean.fullAssessmentData.type)]}"
									action="#{cc.attrs.bean.initAskForAssessment()}"
									update="formAskForAssessment:askForAssessment:askForAssessmentPanel"
									oncomplete="$('#askAssessment').modal('show');">
							</p:commandLink>
						</c:if>
					</h:panelGroup>
				</c:if>
			</div>
		</div>

		<c:if test="#{cc.attrs.bean.fullDisplayMode}">
			<assessment:assessmentCommentModal
					id="commentModal"
					toUpdate=":#{cc.clientId}:growlMain @(.assessmentActivityList.comp_#{cc.attrs.bean.currentCompetenceAssessmentId}) @(.panelCompAssessment_#{cc.attrs.bean.currentCompetenceAssessmentId}) :assessmentPreview:assessCredentialForm"
					messages="#{cc.attrs.bean.currentAssessmentMessages}"
					bean="#{cc.attrs.bean.currentAssessmentBean}"
					studentId="#{cc.attrs.bean.fullAssessmentData.assessedStudentId}"
					assessorId="#{cc.attrs.bean.fullAssessmentData.assessorId}"
					blindAssessmentMode="#{cc.attrs.bean.fullAssessmentData.blindAssessmentMode}"
					learningContext="#{cc.attrs.bean.currentResType eq 'ACTIVITY'
						? util:addSubContext(learningContext, 'name:competence|id:'.concat(activityAssessmentBean.activityAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.compAssessment.competenceAssessmentId).concat('|context:/name:activity|id:').concat(activityAssessmentBean.activityAssessmentData.activityId).concat('|context:/name:ACTIVITY_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.activityAssessmentId).concat('/').concat('/').concat('/'))
						: cc.attrs.bean.currentResType eq 'COMPETENCE'
							? util:addSubContext(learningContext, 'name:competence|id:'.concat(competenceAssessmentBean.competenceAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(competenceAssessmentBean.competenceAssessmentData.competenceAssessmentId).concat('/'))
							: learningContext}"
			/>

			<c:if test="#{cc.attrs.bean.isUserAssessedStudentInCurrentContext() and not cc.attrs.bean.isUserAssessorInCurrentContext()}">
				<assessment:rubricAssessmentPreview
						id="rubricAssessmentPreview"
						grade="#{cc.attrs.bean.currentGradeData}"
						resourceType="#{cc.attrs.bean.currentResType}"
						resourceTitle="#{cc.attrs.bean.currentResTitle}"
				/>

				<c:if test="#{cc.attrs.bean.fullAssessmentData.type ne 'SELF_ASSESSMENT'}">
					<h:form id="formAskForAssessment">
						<assessment:askForAssessment
								id="askForAssessment"
								bean="#{askForCredentialAssessmentBean}"
								submitAssessmentRequestActionMethodName="submitAssessment"
								submitAssessmentRequestAction="#{cc.attrs.bean.submitAssessment}"
								resource="CREDENTIAL"
								resourceTitle="#{cc.attrs.bean.credentialTitle}"
								toUpdate=":#{cc.clientId}:growlMain :#{cc.clientId}:assessCredentialForm"
								learningContext="#{learningContext}"
						/>
					</h:form>
				</c:if>
			</c:if>

			<c:if test="#{cc.attrs.bean.isUserAssessorInCurrentContext()}">
				<h:panelGroup id="gradePanelContainer">
					<ui:param name="compAssessmentLearningContext" value="#{util:addSubContext(learningContext, 'name:competence|id:'.concat(competenceAssessmentBean.competenceAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(competenceAssessmentBean.competenceAssessmentData.competenceAssessmentId).concat('/'))}" />
					<ui:param name="activityAssessmentLearningContext" value="#{util:addSubContext(learningContext, 'name:competence|id:'.concat(activityAssessmentBean.activityAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.compAssessment.competenceAssessmentId).concat('|context:/name:ACTIVITY|id:').concat(activityAssessmentBean.activityAssessmentData.activityId).concat('|context:/name:ACTIVITY_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.activityAssessmentId).concat('///'))}" />

					<assessment:gradePanel
							id="resourceGradePanel"
							gradeActionMethodName="updateGrade"
							gradeAction="#{cc.attrs.bean.updateAssessmentGrade}"
							assessmentId="#{cc.attrs.bean.currentAssessmentId}"
							completed="#{cc.attrs.bean.hasStudentCompletedCurrentResource()}"
							gradeData="#{cc.attrs.bean.currentGradeData}"
							resource="#{cc.attrs.bean.currentResType}"
							resourceTitle="#{cc.attrs.bean.currentResTitle}"
							toUpdate=":#{cc.clientId}:growlMain @(.assessmentActivityList.comp_#{cc.attrs.bean.currentCompetenceAssessmentId}) @(.panelCompAssessment_#{cc.attrs.bean.currentCompetenceAssessmentId}) :assessmentPreview:assessCredentialForm @(.panelAssessorNotificationSelector)"
							learningContext="#{cc.attrs.bean.currentResType == null ? '' : (cc.attrs.bean.currentResType == 'CREDENTIAL' ? learningContext : ((cc.attrs.bean.currentResType == 'COMPETENCE' ? compAssessmentLearningContext : activityAssessmentLearningContext)))}"
							gradePanelSidebarId="gradeSidebar"
					/>
				</h:panelGroup>

				<h:form id="formApproveCredential">
					<div class="modal fade" id="approveAssessment" tabindex="-1" role="dialog" aria-labelledby="apprAssessment">
						<div class="modal-dialog" role="document">
							<div class="modal-content">
								<div class="modal-header alignLeft">
									<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&#215;</span></button>
									<h2 class="modal-title" id="apprAssessment">Approve Assessment</h2>
								</div>
								<div class="assessmentModalMeta">
									<div class="assessmentModalMetaLine">
										<div class="assessmentModalMetaLeft">
											Credential:
										</div>
										<div class="assessmentModalMetaRight">
											<h3>#{cc.attrs.bean.credentialTitle}</h3>
										</div>
									</div>
									<div class="assessmentModalMetaLine">
										<div class="assessmentModalMetaLeft">
											Student:
										</div>
										<div class="assessmentModalMetaRight">
											<assessment:assessmentActorAvatar
													actorId="#{cc.attrs.bean.fullAssessmentData.assessedStudentId}"
													avatarUrl="#{cc.attrs.bean.fullAssessmentData.studentAvatarUrl}"
													actorFullName="#{cc.attrs.bean.fullAssessmentData.studentFullName}"
													blindAssessmentMode="#{cc.attrs.bean.fullAssessmentData.blindAssessmentMode}"
													actorType="STUDENT"
											/>
											<h3>
												<assessment:assessmentActorName
														actorId="#{cc.attrs.bean.fullAssessmentData.assessedStudentId}"
														actorFullName="#{cc.attrs.bean.fullAssessmentData.studentFullName}"
														blindAssessmentMode="#{cc.attrs.bean.fullAssessmentData.blindAssessmentMode}"
														actorType="STUDENT"
												/>
											</h3>
										</div>
									</div>
								</div>
								<div class="alert alert-warning" role="alert">
									Please add the assessment summary.
								</div>
								<div class="modal-body alignLeft">
									<h:inputTextarea
										placeholder="Type a summary that will be displayed on student's profile..."
										value="#{cc.attrs.bean.fullAssessmentData.review}"
									/>
									<h:panelGroup id="panelCredentialResult">
										<h:panelGroup layout="block" styleClass="resultLine" rendered="#{cc.attrs.bean.fullAssessmentData.gradeData.gradingMode eq 'NONGRADED' or cc.attrs.bean.fullAssessmentData.gradeData.pointBasedGrading}">
											Result:
											<strong>
												<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.gradeData.gradingMode eq 'NONGRADED'}">
													-
												</ui:fragment>
												<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.gradeData.gradingMode ne 'NONGRADED' and cc.attrs.bean.fullAssessmentData.gradeData.pointBasedGrading}">
													#{cc.attrs.bean.fullAssessmentData.gradeData.isAssessed() ? cc.attrs.bean.fullAssessmentData.gradeData.currentGrade : '-'}  / #{cc.attrs.bean.fullAssessmentData.gradeData.maxGrade}
												</ui:fragment>
											</strong>
										</h:panelGroup>
										<h:panelGroup layout="block" styleClass="resultLine" rendered="#{not cc.attrs.bean.fullAssessmentData.gradeData.pointBasedGrading and cc.attrs.bean.fullAssessmentData.gradeData.gradingMode eq 'MANUAL_RUBRIC' and cc.attrs.bean.fullAssessmentData.gradeData.rubricType eq 'DESCRIPTIVE'}">
											Result:
											<ui:repeat value="#{cc.attrs.bean.fullAssessmentData.gradeData.rubricCriteria.criteria}" var="crit">
												<br/>- #{crit.name}: <strong>#{crit.selectedLevel.name}</strong>
											</ui:repeat>
										</h:panelGroup>
									</h:panelGroup>
								</div>
								<div class="modal-footer alignLeft">
									<utilcomp:singleClickLink styleClass="btn btn-green"
															  value="Submit"
															  update=":#{cc.clientId}:growlMain :#{cc.clientId}:assessCredentialForm :assessmentPreview:competenceAssessmentPanel @(.panelAssessorNotificationSelector)  #{cc.attrs.role eq 'MANAGER' ? ':assessmentPreview:otherAssessments' : ''}"
															  action="#{cc.attrs.bean.approveCredential()}"
															  oncomplete="$('#approveAssessment').modal('hide')">
										<f:param name="page" value="#{facesContext.viewRoot.viewId}"/>
									</utilcomp:singleClickLink>
								</div>
							</div>
						</div>
					</div>
				</h:form>
			</c:if>
		</c:if>
	</composite:implementation>
</ui:component>