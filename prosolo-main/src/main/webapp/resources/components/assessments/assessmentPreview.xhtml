<ui:component xmlns:h="http://java.sun.com/jsf/html"
			  xmlns:f="http://java.sun.com/jsf/core"
			  xmlns:ui="http://java.sun.com/jsf/facelets"
			  xmlns:composite="http://java.sun.com/jsf/composite"
			  xmlns:p="http://primefaces.org/ui"
			  xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
			  xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
			  xmlns:util="http://www.prosolo.com/util"
			  xmlns:c="http://java.sun.com/jsp/jstl/core"
			  xmlns:assessment="http://java.sun.com/jsf/composite/components/assessments">

	<composite:interface>
		<composite:attribute name="bean" required="true" />
		<composite:attribute name="learningContext" default="" />
		<composite:attribute name="service" default="" />
		<composite:attribute name="role" default="USER" />
	</composite:interface>

	<composite:implementation>
		<utilcomp:messagesBundle var="msg" />

		<ui:param name="learningContext" value="#{util:addSubContext(cc.attrs.learningContext, 'name:CREDENTIAL_ASSESSMENT|id:'.concat(cc.attrs.bean.fullAssessmentData.credAssessmentId))}" />

		<h:outputStylesheet library="css2" name="bootstrap-slider.css" />
		<script
				src="#{request.contextPath}/resources/javascript2/bootstrap-slider.min.js"></script>

		<script>
            function hideConfirmDialog(dialogId) {
                $('#' + dialogId).modal('hide');
                $("body").removeAttr("class").removeAttr("style")
                $("div.modal-backdrop.fade.in").remove()
            }

            function markDiscussionAsSeen(assessmentId, el, resource) {
                switch (resource) {
					case 'ACTIVITY':
						markActivityDiscussionRead
							([{
								name: 'assessmentEncId',
								value: assessmentId
							}]);
						break;
					case 'COMPETENCE':
					    markCompetenceAssessmentDiscussionRead
							([{
								name: 'assessmentEncId',
								value: assessmentId
							}]);
						break;
                    case 'CREDENTIAL':
                        markCredentialAssessmentDiscussionRead
                        ([{
                            name: 'assessmentEncId',
                            value: assessmentId
                        }]);
                        break;
                }
                $(el).removeClass("hasNewComments");
            }

            //comment form hide/show
            function displaySubmitButton(inputElem) {
                if ($(inputElem).val().length == 0) {
                    $(inputElem).parent().find('a.btn-green').addClass('hidden');
                } else {
                    $(inputElem).parent().find('a.btn-green').removeClass('hidden');
                }
            }

            function displaySubmitButtonPrivateConvModal(inputElem) {
                if ($(inputElem).val().length == 0) {
                    $(inputElem).parent().find('a.btn-green').addClass('hidden');
                } else {
                    $(inputElem).parent().find('a.btn-green').removeClass('hidden');
                }
            }

		</script>
		<h:form prependId="false" id="remoteCommandForm">
			<p:remoteCommand process="@this" action="#{cc.attrs.bean.markActivityAssessmentDiscussionRead()}"
							 name="markActivityDiscussionRead"></p:remoteCommand>
			<p:remoteCommand process="@this" action="#{cc.attrs.bean.markCompetenceAssessmentDiscussionRead()}"
							 name="markCompetenceAssessmentDiscussionRead"/>
			<p:remoteCommand process="@this" action="#{cc.attrs.bean.markCredentialAssessmentDiscussionRead()}"
							 name="markCredentialAssessmentDiscussionRead"/>
		</h:form>

		<ui:define name="navLinks">dsfsdf</ui:define>

		<div class="whiteBar">
			<div class="container">
				<div class="whiteBarContent">
					<div class="whiteBarLeft">
						<h:form id="assessCredentialForm" prependId="false">
							<p:growl id="assessCredentialFormGrowl" globalOnly="true" showDetail="true" />

							<ui:fragment
									rendered="#{cc.attrs.bean.fullAssessmentData.approved}">
								<div class="tagApproved left item">Approved</div>
							</ui:fragment>

							<ui:fragment rendered="#{not cc.attrs.bean.fullAssessmentData.approved and cc.attrs.bean.isCurrentUserAssessor() and not cc.attrs.bean.allCompetencesStarted()}">
								<a href="javascript:void(0);" disabled="disabled" class="btn btn-green btn-sm item" data-toggle="tooltip" title="Credential can't be approved until all #{msg['label.competence.plural'].toLowerCase()} are started">Approve</a>
							</ui:fragment>

							<ui:fragment rendered="#{not cc.attrs.bean.fullAssessmentData.approved and cc.attrs.bean.isCurrentUserAssessor() and cc.attrs.bean.allCompetencesStarted()}">
								<p:commandLink
									styleClass="btn btn-green btn-sm item"
									pt:data-toggle="modal"
									value="Approve"
									action="#{cc.attrs.bean.prepareCredentialForApprove()}"
									update=":#{cc.clientId}:formApproveCredential:panelCredentialResult"
									oncomplete="$('#approveAssessment').modal('show')"
								/>
							</ui:fragment>

							<ui:remove>
								<div class="totalScore">Total score:
									#{cc.attrs.bean.fullAssessmentData.gradeData.currentGrade} /
									#{cc.attrs.bean.fullAssessmentData.gradeData.maxGrade}</div>
							</ui:remove>
							<p:commandLink styleClass="item commentsIcon #{(!cc.attrs.bean.fullAssessmentData.participantInDiscussion or cc.attrs.bean.fullAssessmentData.allRead or cc.attrs.bean.fullAssessmentData.numberOfMessages eq 0) ? '' : 'hasNewComments'}" pt:data-toggle="modal"
										   onclick="markDiscussionAsSeen('#{util:encodeId(cc.attrs.bean.fullAssessmentData.credAssessmentId)}', this, 'CREDENTIAL')"
										   action="#{cc.attrs.bean.prepareLearningResourceAssessmentForCommenting()}"
										   update=":assessmentPreview:commentModal:formPrivateConversation:panelModalPrivateConversation"
										   oncomplete="$('#assessmentCommentsModal1').modal('show');">
								#{cc.attrs.bean.fullAssessmentData.numberOfMessages}
							</p:commandLink>
							<assessment:gradeLabel
									assessment="#{cc.attrs.bean.fullAssessmentData}"
									assessmentBean="#{cc.attrs.bean}"
									currentUserAssessedStudent="#{cc.attrs.bean.isCurrentUserAssessedStudent()}"
									currentUserAssessor="#{cc.attrs.bean.isCurrentUserAssessor()}"
									gradeData="#{cc.attrs.bean.fullAssessmentData.gradeData}"
									userAllowedToSeeRubric="#{cc.attrs.bean.isUserAllowedToSeeRubric(cc.attrs.bean.fullAssessmentData.gradeData, 'CREDENTIAL')}"
									gradeLinkSelectorId="credential"
									toUpdateGradePanel=":#{cc.clientId}:gradePanelContainer"
									gradePanelSidebarId="gradeSidebar"
									toUpdateRubricPanelForStudent=":#{cc.clientId}:rubricAssessmentPreview:panelRubricAssessment"
									growlToUpdate=":#{cc.clientId}:assessCredentialForm:assessCredentialFormGrowl"
									role="#{cc.attrs.role}"
									learningContext="#{learningContext}"
							/>
						</h:form>
					</div>

					<div class="whiteBarRight">
						<h:panelGroup rendered="#{cc.attrs.bean.fullAssessmentData.mandatoryFlow}" styleClass="mandatoryTag item" layout="block"/>
						<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.durationString ne null}">
							<div class="duration item">#{cc.attrs.bean.fullAssessmentData.durationString}</div>
						</ui:fragment>
					</div>
				</div>
			</div>
		</div>

		<div class="container">
			<ol class="breadcrumb">
				<ui:fragment rendered="#{cc.attrs.role eq 'MANAGER'}">
					<li>
						<h:link value="#{msg['label.credential.plural']}" outcome="credentialLibrary" />
					</li>
					<li>
						<h:link value="#{cc.attrs.bean.credentialTitle}"
								outcome="/manage/create-credential">
							<f:param name="id" value="#{util:encodeId(cc.attrs.bean.decodedId)}" />
						</h:link>
					</li>
					<li>
						<h:link value="Students" outcome="credential-students">
							<f:param name="id" value="#{util:encodeId(cc.attrs.bean.decodedId)}"></f:param>
						</h:link>
					</li>

					<li class="active">#{cc.attrs.bean.fullAssessmentData.studentFullName}</li>
				</ui:fragment>

				<ui:fragment rendered="#{cc.attrs.role eq 'USER'}">
					<li>
						<h:link value="#{msg['label.credential.plural']}" outcome="credentialLibrary"/>
					</li>
					<li>
						<h:link value="#{cc.attrs.bean.credentialTitle}" outcome="credential">
							<f:param name="id" value="#{util:encodeId(cc.attrs.bean.decodedId)}"/>
						</h:link>
					</li>

					<li>
						<h:link value="Assessments" outcome="/assessments">
							<f:param name="id" value="#{param.id}" />
						</h:link>
					</li>
					<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.assessorId > 0}">
						<li class="active">#{cc.attrs.bean.fullAssessmentData.assessorFullName}</li>
					</ui:fragment>
				</ui:fragment>
			</ol>
		</div>

		<c:if test="#{cc.attrs.role eq 'USER'}">
			<div class="container">
				<div class="row">
					<div class="col-md-12">
						<div class="whiteBox">
							<ul class="nav nav-tabs pageSubmenu" role="tablist">
								<ui:param name="page" value="#{util:getPagePath(view.viewId)}"></ui:param>
								<ui:remove>
									<li role="presentation" class="#{page eq 'credential-peer-assessments' ? 'active' : ''}">
										<h:link
												value="#{msg['label.assessment.type.PEER_ASSESSMENT']}"
												outcome="/credential-peer-assessments">
											<f:param name="id" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"></f:param>
										</h:link>
									</li>
								</ui:remove>
								<li role="presentation" class="#{page eq 'credential-instructor-assessment' ? 'active' : ''}">
									<h:link
											value="#{msg['label.assessment.type.INSTRUCTOR_ASSESSMENT']}"
											outcome="/credential-instructor-assessment">
										<f:param name="id" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"></f:param>
									</h:link>
								</li>
								<ui:remove>
									<li role="presentation" class="#{page eq 'credential-self-assessment' ? 'active' : ''}">
										<h:link
												value="#{msg['label.assessment.type.SELF_ASSESSMENT']}"
												outcome="/credential-self-assessment">
											<f:param name="id" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"></f:param>
										</h:link>
									</li>
								</ui:remove>
							</ul>
						</div>
					</div>
				</div>
			</div>
		</c:if>

		<div class="container">
			<div class="row">
				<div class="col-md-9 mandatoryFlow">
					<h2 class="bottom10">#{msg['label.credential']} Assessment</h2>

					<ui:fragment rendered="#{cc.attrs.role eq 'MANAGER'}">
						<div class="fromBox">
							<span class="fromLabel">From:</span>
							<div class="dropdown fromDrop">
								<a data-toggle="dropdown" aria-haspopup="true"
								   aria-expanded="true">
									#{cc.attrs.bean.fullAssessmentData.assessorFullName != null ?
											cc.attrs.bean.fullAssessmentData.assessorFullName : 'Default assessment'}
									<span class="arrowDown">arrowDown</span>
								</a>
								<ul class="dropdown-menu" aria-labelledby="dropdownMenu">
									<ui:repeat value="#{cc.attrs.bean.otherAssessments}"
											   var="otherAssessment">
										<li><h:outputLink
												value="#{applicationbean.domain}manage/credentials/#{otherAssessment.encodedCredentialId}/assessments/#{otherAssessment.encodedAssessmentId}">
											#{otherAssessment.assessorFullName != null ? otherAssessment.assessorFullName : 'Default assessment'} <span
												class="#{otherAssessment.approved ? 'approved' : 'pending'}">#{otherAssessment.approved
												? 'Approved' : 'Pending'}</span>
										</h:outputLink></li>
									</ui:repeat>
								</ul>
							</div>
						</div>
					</ui:fragment>

					<p>This is the ${msg['label.credential'].toLowerCase()} assessment for student #{cc.attrs.bean.fullAssessmentData.studentFullName}.
						All comments between the student and the assessor are private.</p>

					<ui:fragment
							rendered="#{not empty cc.attrs.bean.fullAssessmentData.message}">
						<div class="whiteBox assessmentInitialMessage">
							<h2>Message</h2>
							<p>
								<h:outputText
										value="#{cc.attrs.bean.fullAssessmentData.message}"
										escape="false" />
							</p>
							<div class="clear"></div>
						</div>
					</ui:fragment>

					<h:panelGroup id="panelAssessorNotification" styleClass="panelAssessorNotificationSelector">
						<h:panelGroup layout="block" styleClass="innerWrapper" rendered="#{cc.attrs.bean.fullAssessmentData.assessorNotified}">
							<div class="alert alert-warning alert-dismissible fade in bottom0" role="alert">
								<p:commandButton id="btn"
												 rendered="#{cc.attrs.role eq 'MANAGER' or not cc.attrs.bean.currentUserAssessedStudent}"
												 styleClass="close"
												 pt:data-dismiss="alert"
												 pt:aria-label="Close"
												 value="&#215;"
												 action="#{cc.attrs.bean.removeAssessorNotification()}"
												 update="panelAssessorNotification :#{cc.clientId}:assessCredentialForm:assessCredentialFormGrowl"
								/>
								#{cc.attrs.role eq 'USER' and cc.attrs.bean.currentUserAssessedStudent ? 'You have asked for assessment of this '.concat(msg['label.credential'].toLowerCase()).concat('.') : 'Student asked for assessment of this '.concat(msg['label.credential'].toLowerCase()).concat('.')}
							</div>
						</h:panelGroup>
					</h:panelGroup>
					<br/>

					<h:panelGroup id = "competenceAssessmentPanel">
						<h:form>
							<ui:repeat varStatus="compAssIndex" var="competenceAssessment" value="#{cc.attrs.bean.fullAssessmentData.competenceAssessmentData}">
								<ui:fragment rendered="#{not competenceAssessment.readOnly}">
									<article class="whiteBox summaryCard summaryCompetence summaryAssessments">
										<h:panelGroup id="panelAssessorNotificationComp" styleClass="panelAssessorNotificationSelector">
											<h:panelGroup layout="block" styleClass="innerWrapper" rendered="#{competenceAssessment.assessorNotified}">
												<div class="alert alert-warning alert-dismissible fade in bottom0" role="alert">
													<h:commandButton id="btn"
																	 rendered="#{cc.attrs.role eq 'MANAGER' or not cc.attrs.bean.currentUserAssessedStudent}"
																	 type="button"
																	 styleClass="close"
																	 pt:data-dismiss="alert"
																	 pt:aria-label="Close"
																	 value="&#215;"
																	 action="#{cc.attrs.bean.removeAssessorNotification(competenceAssessment)}">
														<f:ajax execute="@this" render="panelAssessorNotificationComp :#{cc.clientId}:assessCredentialForm:assessCredentialFormGrowl" />
													</h:commandButton>
													#{cc.attrs.role eq 'USER' and cc.attrs.bean.currentUserAssessedStudent ? 'You have asked for assessment of this '.concat(msg['label.competence'].toLowerCase()).concat('.') : 'Student asked for assessment of this '.concat(msg['label.competence'].toLowerCase()).concat('.')}
												</div>
											</h:panelGroup>
										</h:panelGroup>
										<div class="summaryAssessmentsHead #{(!competenceAssessment.participantInDiscussion or competenceAssessment.allRead or competenceAssessment.numberOfMessages eq 0) ? '' : 'hasNewComments'}">
											<h2>
												<h:link outcome="competence">
													#{competenceAssessment.title}
													<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
													<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"
															 disable="#{empty cc.attrs.bean.fullAssessmentData.credentialId}" />
												</h:link>
											</h2>

											<h:panelGroup layout="block" id="panelCompAssessmentOptions" styleClass="activityOptions panelCompAssessment_#{competenceAssessment.competenceId}">
												<h:panelGroup rendered="#{competenceAssessment.approved}"
															  styleClass="tagApproved" layout="block">
													Approved
												</h:panelGroup>

												<p:commandLink styleClass="linkApprove"
															   process="@this"
															   actionListener="#{cc.attrs.bean.approveCompetence(competenceAssessment.competenceAssessmentId)}"
															   update="panelCompAssessmentOptions :assessmentPreview:assessCredentialForm:assessCredentialFormGrowl @(.panelAssessorNotificationSelector)"
															   rendered="#{not competenceAssessment.approved and cc.attrs.bean.isCurrentUserAssessor()}">
													Approve<span></span>
													<f:param name="page" value="#{facesContext.viewRoot.viewId}" />
												</p:commandLink>
												<p:commandLink styleClass="commentsIcon" pt:data-toggle="modal"
															   onclick="markDiscussionAsSeen('#{util:encodeId(competenceAssessment.competenceAssessmentId)}', this.parentElement.parentElement, 'COMPETENCE')"
															   action="#{cc.attrs.bean.prepareLearningResourceAssessmentForCommenting(competenceAssessment)}"
															   update=":assessmentPreview:commentModal:formPrivateConversation:panelModalPrivateConversation"
															   oncomplete="$('#assessmentCommentsModal1').modal('show');">
													#{competenceAssessment.numberOfMessages}
												</p:commandLink>

												<ui:param name="compAssessmentLearningContext" value="#{util:addSubContext(learningContext, 'name:COMPETENCE|id:'.concat(competenceAssessment.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(competenceAssessment.competenceAssessmentId).concat('/'))}" />

												<assessment:gradeLabel
														assessment="#{competenceAssessment}"
														assessmentBean="#{cc.attrs.bean}"
														currentUserAssessedStudent="#{cc.attrs.bean.isCurrentUserAssessedStudent()}"
														currentUserAssessor="#{cc.attrs.bean.isCurrentUserAssessor()}"
														gradeData="#{competenceAssessment.gradeData}"
														userAllowedToSeeRubric="#{cc.attrs.bean.isUserAllowedToSeeRubric(competenceAssessment.gradeData, 'COMPETENCE')}"
														gradeLinkSelectorId="competence_#{competenceAssessment.competenceId}"
														toUpdateGradePanel=":#{cc.clientId}:gradePanelContainer"
														gradePanelSidebarId="gradeSidebar"
														toUpdateRubricPanelForStudent=":#{cc.clientId}:rubricAssessmentPreview:panelRubricAssessment"
														growlToUpdate=":#{cc.clientId}:assessCredentialForm:assessCredentialFormGrowl"
														role="#{cc.attrs.role}"
														learningContext="#{compAssessmentLearningContext}"
												/>
											</h:panelGroup>
										</div>

										<ui:fragment rendered="#{not empty competenceAssessment.activityAssessmentData}">
											<h:panelGroup layout="block" styleClass="assessmentActivityList comp_#{competenceAssessment.competenceId}"
														  id="activityAssessmentWrapper#{compAssIndex.index}">
												<ul>
													<ui:repeat varStatus="actAssIndex" var="activityAssessment" value="#{competenceAssessment.activityAssessmentData}">
														<li class="#{styleUtilBean.getStyleClassBasedOnActivityType(activityAssessment.activityType)} #{(!activityAssessment.participantInDiscussion or activityAssessment.allRead or activityAssessment.numberOfMessages eq 0) ? '' : 'hasNewComments'}">
															<span class="#{activityAssessment.completed ? 'check' : 'iconType'}"></span>
															<h:link outcome="activity">
																#{activityAssessment.title}
																<f:param name="actId" value="#{util:encodeId(activityAssessment.activityId)}" />
																<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
																<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"
																		 disable="#{empty cc.attrs.bean.fullAssessmentData.credentialId}" />
															</h:link>
															<div class="activityOptions">
																<ui:fragment rendered="#{(activityAssessment.resultType eq 'TEXT' or activityAssessment.resultType eq 'FILE_UPLOAD') and not empty activityAssessment.result}">
																	<h:link outcome="activity-response"
																			styleClass="viewResult"
																			rendered="#{cc.attrs.role eq 'USER'}"
																			pt:data-toggle="tooltip" pt:title="View Response">
																		View Response
																		<f:param name="actId" value="#{util:encodeId(activityAssessment.activityId)}" />
																		<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
																		<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"/>
																		<f:param name="targetActId" value="#{util:encodeId(activityAssessment.targetActivityId)}" />
																	</h:link>
																	<h:link outcome="/manage/credential-delivery-assessments-activity"
																			styleClass="viewResult"
																			rendered="#{cc.attrs.role eq 'MANAGER'}"
																			pt:data-toggle="tooltip" pt:title="View Response">
																		View Response
																		<f:param name="activityId" value="#{util:encodeId(activityAssessment.activityId)}" />
																		<f:param name="id" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"/>
																		<f:param name="user" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.assessedStrudentId)}" />
																	</h:link>
																</ui:fragment>
																<p:commandLink styleClass="commentsIcon" pt:data-toggle="modal"
																			   onclick="markDiscussionAsSeen('#{activityAssessment.encodedActivityAssessmentId}',this.parentElement.parentElement, 'ACTIVITY')"
																			   action="#{cc.attrs.bean.prepareLearningResourceAssessmentForCommenting(activityAssessment)}"
																			   update=":assessmentPreview:commentModal:formPrivateConversation:panelModalPrivateConversation"
																			   oncomplete="$('#assessmentCommentsModal1').modal('show');">
																	#{activityAssessment.numberOfMessages}
																</p:commandLink>

																<assessment:gradeLabel
																	assessment="#{activityAssessment}"
																	assessmentBean="#{cc.attrs.bean}"
																	currentUserAssessedStudent="#{cc.attrs.bean.isCurrentUserAssessedStudent()}"
																	currentUserAssessor="#{cc.attrs.bean.isCurrentUserAssessor()}"
																	gradeData="#{activityAssessment.grade}"
																	userAllowedToSeeRubric="#{cc.attrs.bean.isUserAllowedToSeeRubric(activityAssessment.grade, 'ACTIVITY')}"
																	gradeLinkSelectorId="activity_#{activityAssessment.activityId}"
																	toUpdateGradePanel=":#{cc.clientId}:gradePanelContainer"
																	gradePanelSidebarId="gradeSidebar"
																	toUpdateRubricPanelForStudent=":#{cc.clientId}:rubricAssessmentPreview:panelRubricAssessment"
																	growlToUpdate=":#{cc.clientId}:assessCredentialForm:assessCredentialFormGrowl"
																	role="#{cc.attrs.role}"
																	learningContext="#{util:addSubContext(compAssessmentLearningContext, 'name:ACTIVITY|id:'.concat(activityAssessment.activityId).concat('|context:/name:ACTIVITY_ASSESSMENT|id:').concat(activityAssessment.activityAssessmentId).concat('/'))}"
																/>
															</div>
														</li>
													</ui:repeat>

													<ui:remove>
														<li class="competenceScore">
															<div>#{msg['label.competence']} score:</div>
															<h:panelGroup layout="block" class="compPoints_#{competenceAssessment.competenceId}">
																#{competenceAssessment.points} / #{competenceAssessment.maxPoints}
															</h:panelGroup>
														</li>
													</ui:remove>
												</ul>
											</h:panelGroup>
										</ui:fragment>
										<ui:fragment rendered="#{not empty competenceAssessment.evidences}">
											<assessment:evidenceItems
													evidences="#{competenceAssessment.evidences}"
													canViewEvidence="#{(cc.attrs.role eq 'USER' and cc.attrs.bean.currentUserAssessedStudent) or cc.attrs.bean.isCurrentUserAssessor()}"
											/>
										</ui:fragment>
									</article>
								</ui:fragment>
								<ui:fragment rendered="#{competenceAssessment.readOnly}">
									<article class="whiteBox summaryCard summaryCompetence summaryAssessments disabledCompetence" data-toggle="tooltip" title="This #{msg['label.competence'].toLowerCase()} is not started yet">
										<div class="innerWrapper">
											<h2>
												<h:link outcome="competence">
													#{competenceAssessment.title}
													<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
													<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"
															 disable="#{empty cc.attrs.bean.fullAssessmentData.credentialId}" />
												</h:link>
											</h2>

											<ui:fragment rendered="#{not competenceAssessment.approved and cc.attrs.bean.isCurrentUserAssessor()}">
												<a href="javascript:void(0);" class="linkApprove"><div class="disabledOverlay"></div>Approve<span></span></a>
											</ui:fragment>

											<div class="clear"></div>
										</div>

										<ui:fragment rendered="#{not empty competenceAssessment.activityAssessmentData}">
											<div class="assessmentActivityList">
												<ul>
													<ui:repeat varStatus="actAssIndex" var="activityAssessment" value="#{competenceAssessment.activityAssessmentData}">
														<li class="#{styleUtilBean.getStyleClassBasedOnActivityType(activityAssessment.activityType)}">
															<span class="iconType"></span>
															<h:link outcome="activity">
																#{activityAssessment.title}
																<f:param name="actId" value="#{util:encodeId(activityAssessment.activityId)}" />
																<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
																<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"
																		 disable="#{empty cc.attrs.bean.fullAssessmentData.credentialId}" />
															</h:link>

															<div class="activityOptions">
																<div class="disabledOverlay"></div>
																<a href="javascript:void(0);" class="commentsIcon">0</a>
																<a href="javascript:void(0);" class="grade">- / #{activityAssessment.grade.maxGrade}</a>
															</div>
														</li>
													</ui:repeat>

													<ui:remove>
														<li class="competenceScore">
															<div>#{msg['label.competence']} score:</div>
															<div>
																#{competenceAssessment.points} / #{competenceAssessment.maxPoints}
															</div>
														</li>
													</ui:remove>
												</ul>
											</div>
										</ui:fragment>
									</article>
								</ui:fragment>
							</ui:repeat>
						</h:form>
					</h:panelGroup>
				</div>

				<div class="col-md-3">
					<div class="sidebarBlock">
						<h2>Student</h2>
						<div class="user32">
							<a href="javascript:void(0);"> <utilcomp:userAvatar
									avatar="#{cc.attrs.bean.fullAssessmentData.studentAvatarUrl}"
									fullName="#{cc.attrs.bean.fullAssessmentData.studentFullName}" />
							</a>
							<h3>
								<a href="javascript:void(0);">#{cc.attrs.bean.fullAssessmentData.studentFullName}</a>
							</h3>
						</div>
					</div>

					<div class="sidebarBlock">
						<ui:fragment
								rendered="#{(cc.attrs.role eq 'USER') and cc.attrs.bean.fullAssessmentData.assessorId > 0}">
							<h2>Assessor</h2>
							<div class="user32">
								<a href="javascript:void(0);"> <utilcomp:userAvatar
										avatar="#{cc.attrs.bean.fullAssessmentData.assessorAvatarUrl}"
										fullName="#{cc.attrs.bean.fullAssessmentData.assessorFullName}" />
								</a>
								<h3>
									<a href="javascript:void(0);">#{cc.attrs.bean.fullAssessmentData.assessorFullName}</a>
								</h3>
							</div>
						</ui:fragment>

						<ui:fragment
								rendered="#{cc.attrs.bean.fullAssessmentData.assessorId eq 0}">
							<div class="user32">
								<h3>Currently, there is no assessor assigned.</h3>
							</div>
						</ui:fragment>
					</div>

					<div class="sidebarBlock">
						<h2>Requested</h2>
						<p>#{cc.attrs.bean.fullAssessmentData.dateValue}</p>
					</div>
					<c:if test="#{cc.attrs.role eq 'USER'}">
						<a href="#" class="btn btn-green" data-toggle="modal" data-target="#askAssessment">Ask for Tutor Assessment</a>
					</c:if>
				</div>
			</div>
		</div>

		<assessment:assessmentCommentModal
				id="commentModal"
				toUpdate=":#{cc.clientId}:assessCredentialForm:assessCredentialFormGrowl @(.assessmentActivityList.comp_#{cc.attrs.bean.currentAssessmentCompetenceId}) @(.panelCompAssessment_#{cc.attrs.bean.currentAssessmentCompetenceId}) :assessmentPreview:assessCredentialForm"
				messages="#{cc.attrs.bean.currentAssessmentMessages}"
				bean="#{cc.attrs.bean.currentAssessmentBean}"
				learningContext="#{cc.attrs.bean.currentResType eq 'ACTIVITY'
					? util:addSubContext(learningContext, 'name:competence|id:'.concat(activityAssessmentBean.activityAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.compAssessment.competenceAssessmentId).concat('|context:/name:activity|id:').concat(activityAssessmentBean.activityAssessmentData.activityId).concat('|context:/name:ACTIVITY_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.activityAssessmentId).concat('/').concat('/').concat('/'))
					: cc.attrs.bean.currentResType eq 'COMPETENCE'
						? util:addSubContext(learningContext, 'name:competence|id:'.concat(competenceAssessmentBean.competenceAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(competenceAssessmentBean.competenceAssessmentData.competenceAssessmentId).concat('/'))
						: learningContext}"
		/>

		<c:if test="#{cc.attrs.role eq 'USER' and cc.attrs.bean.currentUserAssessedStudent}">
			<assessment:rubricAssessmentPreview
					id="rubricAssessmentPreview"
					grade="#{cc.attrs.bean.currentGradeData}"
					resourceType="#{cc.attrs.bean.currentResType}"
					resourceTitle="#{cc.attrs.bean.currentResTitle}"
			/>
		</c:if>

		<c:if test="#{not (cc.attrs.role eq 'USER' and cc.attrs.bean.currentUserAssessedStudent)}">
			<h:panelGroup id="gradePanelContainer">
				<ui:param name="compAssessmentLearningContext" value="#{util:addSubContext(learningContext, 'name:competence|id:'.concat(competenceAssessmentBean.competenceAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(competenceAssessmentBean.competenceAssessmentData.competenceAssessmentId).concat('/'))}" />
				<ui:param name="activityAssessmentLearningContext" value="#{util:addSubContext(learningContext, 'name:competence|id:'.concat(activityAssessmentBean.activityAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.compAssessment.competenceAssessmentId).concat('|context:/name:ACTIVITY|id:').concat(activityAssessmentBean.activityAssessmentData.activityId).concat('|context:/name:ACTIVITY_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.activityAssessmentId).concat('///'))}" />

				<assessment:gradePanel
						id="resourceGradePanel"
						gradeActionMethodName="updateGrade"
						gradeAction="#{cc.attrs.bean.updateAssessmentGrade}"
						assessmentId="#{cc.attrs.bean.currentAssessmentId}"
						completed="#{cc.attrs.bean.hasStudentCompletedCurrentResource()}"
						gradeData="#{cc.attrs.bean.currentGradeData}"
						resource="#{cc.attrs.bean.currentResType}"
						resourceTitle="#{cc.attrs.bean.currentResTitle}"
						toUpdate=":#{cc.clientId}:assessCredentialForm:assessCredentialFormGrowl @(.assessmentActivityList.comp_#{cc.attrs.bean.currentAssessmentCompetenceId}) @(.panelCompAssessment_#{cc.attrs.bean.currentAssessmentCompetenceId}) :assessmentPreview:assessCredentialForm @(.panelAssessorNotificationSelector)"
						learningContext="#{cc.attrs.bean.currentResType == null ? '' : (cc.attrs.bean.currentResType == 'CREDENTIAL' ? learningContext : ((cc.attrs.bean.currentResType == 'COMPETENCE' ? compAssessmentLearningContext : activityAssessmentLearningContext)))}"
						gradePanelSidebarId="gradeSidebar"
				/>
			</h:panelGroup>

			<h:form id="formApproveCredential">
				<div class="modal fade" id="approveAssessment" tabindex="-1" role="dialog" aria-labelledby="apprAssessment">
					<div class="modal-dialog" role="document">
						<div class="modal-content">
							<div class="modal-header alignLeft">
								<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&#215;</span></button>
								<h2 class="modal-title" id="apprAssessment">Approve Assessment</h2>
							</div>
							<div class="assessmentModalMeta">
								<div class="assessmentModalMetaLine">
									<div class="assessmentModalMetaLeft">
										Credential:
									</div>
									<div class="assessmentModalMetaRight">
										<h3>#{cc.attrs.bean.credentialTitle}</h3>
									</div>
								</div>
								<div class="assessmentModalMetaLine">
									<div class="assessmentModalMetaLeft">
										Student:
									</div>
									<div class="assessmentModalMetaRight">
										<utilcomp:userAvatar
												avatar="#{cc.attrs.bean.fullAssessmentData.studentAvatarUrl}"
												fullName="#{cc.attrs.bean.fullAssessmentData.studentFullName}" />
										<h3>#{cc.attrs.bean.fullAssessmentData.studentFullName}</h3>
									</div>
								</div>
							</div>
							<div class="alert alert-warning" role="alert">
								Please enter the review description.
							</div>
							<div class="modal-body alignLeft">
								<h:inputTextarea
									placeholder="Type a review that will be shown on student's profile..."
									value="#{cc.attrs.bean.fullAssessmentData.review}"
								/>
								<h:panelGroup id="panelCredentialResult">
									<h:panelGroup layout="block" styleClass="resultLine" rendered="#{cc.attrs.bean.fullAssessmentData.gradeData.gradingMode eq 'NONGRADED' or cc.attrs.bean.fullAssessmentData.gradeData.pointBasedGrading}">
										Result:
										<strong>
											<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.gradeData.gradingMode eq 'NONGRADED'}">
												-
											</ui:fragment>
											<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.gradeData.gradingMode ne 'NONGRADED' and cc.attrs.bean.fullAssessmentData.gradeData.pointBasedGrading}">
												#{cc.attrs.bean.fullAssessmentData.gradeData.isAssessed() ? cc.attrs.bean.fullAssessmentData.gradeData.currentGrade : '-'}  / #{cc.attrs.bean.fullAssessmentData.gradeData.maxGrade}
											</ui:fragment>
										</strong>
									</h:panelGroup>
									<h:panelGroup layout="block" styleClass="resultLine" rendered="#{not cc.attrs.bean.fullAssessmentData.gradeData.pointBasedGrading and cc.attrs.bean.fullAssessmentData.gradeData.gradingMode eq 'MANUAL_RUBRIC' and cc.attrs.bean.fullAssessmentData.gradeData.rubricType eq 'DESCRIPTIVE'}">
										Result:
										<ui:repeat value="#{cc.attrs.bean.fullAssessmentData.gradeData.rubricCriteria.criteria}" var="crit">
											<br/>- #{crit.name}: <strong>#{crit.selectedLevel.name}</strong>
										</ui:repeat>
									</h:panelGroup>
								</h:panelGroup>
							</div>
							<div class="modal-footer alignLeft">
								<p:commandLink
										styleClass="btn btn-green"
										value="Submit"
										update=":#{cc.clientId}:assessCredentialForm :assessmentPreview:competenceAssessmentPanel @(.panelAssessorNotificationSelector)"
										action="#{cc.attrs.bean.approveCredential()}"
										oncomplete="$('#approveAssessment').modal('hide')">
									<f:param name="page" value="#{facesContext.viewRoot.viewId}" />
								</p:commandLink>
							</div>
						</div>
					</div>
				</div>
			</h:form>
		</c:if>
	</composite:implementation>
</ui:component>