<ui:component xmlns:h="http://java.sun.com/jsf/html"
			  xmlns:f="http://java.sun.com/jsf/core"
			  xmlns:ui="http://java.sun.com/jsf/facelets"
			  xmlns:composite="http://java.sun.com/jsf/composite"
			  xmlns:p="http://primefaces.org/ui"
			  xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
			  xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
			  xmlns:util="http://www.prosolo.com/util"
			  xmlns:activities="http://java.sun.com/jsf/composite/components/activities"
			  xmlns:c="http://java.sun.com/jsp/jstl/core">

	<composite:interface>
		<composite:attribute name="bean" required="true" />
		<composite:attribute name="learningContext" default="" />
		<composite:attribute name="service" default="" />
		<composite:attribute name="role" default="USER" />
	</composite:interface>

	<composite:implementation>
		<utilcomp:messagesBundle var="msg" />

		<h:outputStylesheet library="css2" name="bootstrap-slider.css" />
		<script
				src="#{request.contextPath}/resources/javascript2/bootstrap-slider.min.js"></script>

		<script>
            function hideConfirmDialog(dialogId) {
                $('#' + dialogId).modal('hide');
                $("body").removeAttr("class").removeAttr("style")
                $("div.modal-backdrop.fade.in").remove()
            }

            function markDiscussionAsSeen(discussionId, parentElement) {
                markActivityDiscussionRead([ {
                    name : 'encodedActivityDiscussionId',
                    value : discussionId
                } ])
                $(parentElement).removeClass("hasNewComments");
            }

            function updateNumberOfMessages(elementId) {
                var numberOfComments = $('#' + elementId).find(
                    'div.comments li').length;
                $('#' + elementId).parent().find('a.commentsIcon').text(
                    numberOfComments);
            }

            //comment form hide/show
            function displaySubmitButton(inputElem) {
                if ($(inputElem).val().length == 0) {
                    $(inputElem).parent().find('a.btn-green').addClass('hidden');
                } else {
                    $(inputElem).parent().find('a.btn-green').removeClass('hidden');
                }
            }

            function displaySubmitButtonPrivateConvModal(inputElem) {
                if ($(inputElem).val().length == 0) {
                    $(inputElem).parent().find('a.btn-green').addClass('hidden');
                } else {
                    $(inputElem).parent().find('a.btn-green').removeClass('hidden');
                }
            }

		</script>
		<h:form prependId="false" id="remoteCommandForm">
			<p:remoteCommand action="#{cc.attrs.bean.markDiscussionRead()}"
							 name="markActivityDiscussionRead"></p:remoteCommand>
		</h:form>

		<div class="whiteBar">
			<div class="container">
				<div class="whiteBarContent">
					<div class="whiteBarLeft">
						<h:form id="assessCredentialForm" prependId="false">
							<p:growl id="assessCredentialFormGrowl" globalOnly="true" showDetail="true" />

							<ui:fragment
									rendered="#{cc.attrs.bean.fullAssessmentData.approved}">
								<div class="tagApproved left item">Approved</div>
							</ui:fragment>

							<ui:fragment rendered="#{not cc.attrs.bean.fullAssessmentData.approved and cc.attrs.bean.isCurrentUserAssessor() and not cc.attrs.bean.allCompetencesStarted()}">
								<a href="javascript:void(0);" disabled="disabled" class="btn btn-green btn-sm item" data-toggle="tooltip" title="Credential can't be approved until all #{msg['label.competence.plural'].toLowerCase()} are started">Approve</a>
							</ui:fragment>

							<ui:fragment rendered="#{not cc.attrs.bean.fullAssessmentData.approved and cc.attrs.bean.isCurrentUserAssessor() and cc.attrs.bean.allCompetencesStarted()}">
								<p:commandLink
										styleClass="btn btn-green btn-sm item"
										value="Approve"
										update="@form"
										action="#{cc.attrs.bean.approveCredential()}"
								/>

								<ui:remove>
									<a href="#" class="btn btn-green btn-sm" data-toggle="modal"
									   data-target="#approveAssessment">Approve</a>
									<div class="modal fade" id="approveAssessment" tabindex="-1"
										 role="dialog" aria-labelledby="apprAssessment">
										<div class="modal-dialog" role="document">
											<div class="modal-content">
												<div class="modal-header alignLeft">
													<button type="button" class="close" data-dismiss="modal"
															aria-label="Close">
														<span aria-hidden="true">&#215;</span>
													</button>
													<h2 class="modal-title" id="apprAssessment">Approve
														Assessment</h2>
												</div>

												<div class="assessmentModalMeta">
													<div class="assessmentModalMetaLine">
														<div class="assessmentModalMetaLeft">#{msg['label.credential']}:</div>
														<div class="assessmentModalMetaRight">
															<h3>#{cc.attrs.bean.fullAssessmentData.title}</h3>
														</div>
													</div>

													<div class="assessmentModalMetaLine">
														<div class="assessmentModalMetaLeft">Student:</div>
														<div class="assessmentModalMetaRight">
															<utilcomp:userAvatar
																	avatar="#{cc.attrs.bean.fullAssessmentData.studentAvatarUrl}"
																	fullName="#{cc.attrs.bean.fullAssessmentData.studentFullName}" />
															<h3>#{cc.attrs.bean.fullAssessmentData.studentFullName}</h3>
														</div>
													</div>
												</div>

												<div class="modal-body alignLeft">
													<p:inputTextarea
															placeholder="Type a review that will be shown on student's profile..."
															value="#{cc.attrs.bean.reviewText}"
															id="reviewContentTextarea" />
												</div>

												<div class="modal-footer alignLeft">
													<p:commandLink update="@all"
																   action="#{cc.attrs.bean.approveCredential()}"
																   oncomplete="hideConfirmDialog('approveAssessment')"
																   styleClass="btn btn-green">Submit</p:commandLink>
												</div>
											</div>
										</div>
									</div>
								</ui:remove>
							</ui:fragment>

							<div class="totalScore">Total score:
								#{cc.attrs.bean.fullAssessmentData.points} /
								#{cc.attrs.bean.fullAssessmentData.maxPoints}</div>
						</h:form>
					</div>

					<div class="whiteBarRight">
						<h:panelGroup rendered="#{cc.attrs.bean.fullAssessmentData.mandatoryFlow}" styleClass="mandatoryTag item" layout="block"/>
						<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.durationString ne null}">
							<div class="duration item">#{cc.attrs.bean.fullAssessmentData.durationString}</div>
						</ui:fragment>
					</div>
				</div>
			</div>
		</div>

		<div class="container">
			<div class="row">
				<div class="col-md-9 mandatoryFlow">
					<h2 class="bottom10">#{msg['label.credential']} Assessment</h2>

					<ui:fragment rendered="#{cc.attrs.role eq 'MANAGER'}">
						<div class="fromBox">
							<span class="fromLabel">From:</span>
							<div class="dropdown fromDrop">
								<a data-toggle="dropdown" aria-haspopup="true"
								   aria-expanded="true">
									#{cc.attrs.bean.fullAssessmentData.assessorFullName != null ?
											cc.attrs.bean.fullAssessmentData.assessorFullName : 'Default assessment'}
									<span class="arrowDown">arrowDown</span>
								</a>
								<ul class="dropdown-menu" aria-labelledby="dropdownMenu">
									<ui:repeat value="#{cc.attrs.bean.otherAssessments}"
											   var="otherAssessment">
										<li><h:outputLink
												value="#{applicationbean.domain}manage/credentials/#{otherAssessment.encodedCredentialId}/assessments/#{otherAssessment.encodedAssessmentId}">
											#{otherAssessment.assessorFullName != null ? otherAssessment.assessorFullName : 'Default assessment'} <span
												class="#{otherAssessment.approved ? 'approved' : 'pending'}">#{otherAssessment.approved
												? 'Approved' : 'Pending'}</span>
										</h:outputLink></li>
									</ui:repeat>
								</ul>
							</div>
						</div>
					</ui:fragment>

					<p>This is the ${msg['label.credential'].toLowerCase()} assessment for student #{cc.attrs.bean.fullAssessmentData.studentFullName}.
						All comments between the student and the assessor are private.</p>

					<ui:fragment
							rendered="#{not empty cc.attrs.bean.fullAssessmentData.message}">
						<div class="whiteBox assessmentInitialMessage">
							<h2>Message</h2>
							<p>
								<h:outputText
										value="#{cc.attrs.bean.fullAssessmentData.message}"
										escape="false" />
							</p>
							<div class="clear"></div>
						</div>
					</ui:fragment>

					<ui:repeat varStatus="compAssIndex" var="competenceAssessment" value="#{cc.attrs.bean.fullAssessmentData.competenceAssessmentData}">
						<ui:fragment rendered="#{not competenceAssessment.readOnly}">
							<article class="whiteBox summaryCard summaryCompetence summaryAssessments">
								<div class="innerWrapper">
									<h:form name="competenceAssessment_#{competenceAssessment.competenceId}_topForm"
											prependId="false"
											id="competenceAssessment_#{competenceAssessment.competenceId}_topForm">
										<p:growl />

										<h2>
											<h:link outcome="competence">
												#{competenceAssessment.title}
												<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
												<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"
														 disable="#{empty cc.attrs.bean.fullAssessmentData.credentialId}" />
											</h:link>
										</h2>

										<h:panelGroup rendered="#{competenceAssessment.approved}"
													  styleClass="tagApproved" layout="block">
											Approved
										</h:panelGroup>

										<p:commandLink styleClass="linkApprove"
													   actionListener="#{cc.attrs.bean.approveCompetence(competenceAssessment.competenceAssessmentEncodedId)}"
													   update="@form"
													   rendered="#{not competenceAssessment.approved and cc.attrs.bean.isCurrentUserAssessor()}">
											Approve<span></span>
										</p:commandLink>

										<div class="clear"></div>
									</h:form>
								</div>

								<ui:fragment rendered="#{not empty competenceAssessment.activityAssessmentData}">
									<h:panelGroup layout="block" styleClass="assessmentActivityList comp_#{competenceAssessment.competenceId}"
												  id="activityAssessmentWrapper#{compAssIndex.index}">
										<ul>
											<ui:repeat varStatus="actAssIndex" var="activityAssessment" value="#{competenceAssessment.activityAssessmentData}">
												<li class="#{styleUtilBean.getStyleClassBasedOnActivityType(activityAssessment.activityType)} #{(!activityAssessment.participantInDiscussion or activityAssessment.allRead or activityAssessment.numberOfMessages eq 0) ? '' : 'hasNewComments'}">
													<span class="#{activityAssessment.completed ? 'check' : 'iconType'}"></span>
													<h:link outcome="activity">
														#{activityAssessment.title}
														<f:param name="actId" value="#{util:encodeId(activityAssessment.activityId)}" />
														<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
														<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"
																 disable="#{empty cc.attrs.bean.fullAssessmentData.credentialId}" />
													</h:link>
													<div class="activityOptions">
														<ui:fragment rendered="#{(activityAssessment.resultType eq 'TEXT' or activityAssessment.resultType eq 'FILE_UPLOAD') and not empty activityAssessment.result}">
															<h:link outcome="activity-response"
																	styleClass="viewResult"
																	rendered="#{cc.attrs.role eq 'USER'}"
																	pt:data-toggle="tooltip" pt:title="View Response">
																View Response
																<f:param name="actId" value="#{util:encodeId(activityAssessment.activityId)}" />
																<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
																<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"/>
																<f:param name="targetActId" value="#{util:encodeId(activityAssessment.targetActivityId)}" />
															</h:link>
															<h:link outcome="activity-responses"
																	styleClass="viewResult"
																	rendered="#{cc.attrs.role eq 'MANAGER'}"
																	pt:data-toggle="tooltip" pt:title="View Response">
																View Response
																<f:param name="actId" value="#{util:encodeId(activityAssessment.activityId)}" />
																<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
																<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"/>
																<f:param name="user" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.assessedStrudentId)}" />
															</h:link>
														</ui:fragment>

														<p:commandLink styleClass="commentsIcon" pt:data-toggle="modal"
																	   onclick="markDiscussionAsSeen('#{activityAssessment.encodedDiscussionId}',this.parentElement.parentElement)"
																	   action="#{activityPrivateConversationBean.init(activityAssessment)}"
																	   update=":assessmentPreview:commentModal:formPrivateConversation:panelModalPrivateConversation"
																	   oncomplete="$('#assessmentCommentsModal1').modal('show');">
															#{activityAssessment.numberOfMessages}
														</p:commandLink>

														<c:if test="#{cc.attrs.role eq 'USER' and cc.attrs.bean.currentUserAssessedStudent}">
															<p:commandLink rendered="#{activityAssessment.grade.gradingMode eq 'MANUAL_RUBRIC' and cc.attrs.bean.isUserAllowedToSeeRubric(activityAssessment)}"
																		   styleClass="grade"
																		   action="#{cc.attrs.bean.setCurrentAssessment(activityAssessment)}"
																		   update=":#{cc.clientId}:panelRubricAssessment :#{cc.clientId}:assessCredentialForm:assessCredentialFormGrowl"
																		   oncomplete="showPopupSidebar('#cbp-spmenu-s2');">
																#{activityAssessment.grade.value != null and activityAssessment.grade.assessed ? activityAssessment.grade.value : '-'}  /
																#{activityAssessment.grade.maxGrade}
															</p:commandLink>
															<ui:fragment rendered="#{not (activityAssessment.grade.gradingMode eq 'MANUAL_RUBRIC' and cc.attrs.bean.isUserAllowedToSeeRubric(activityAssessment))}">
																<span class="grade">
																	#{activityAssessment.grade.value != null and activityAssessment.grade.assessed ? activityAssessment.grade.value : '-'}  /
																	#{activityAssessment.grade.maxGrade}
																</span>
															</ui:fragment>
														</c:if>
														<c:if test="#{not (cc.attrs.role eq 'USER' and cc.attrs.bean.currentUserAssessedStudent)}">
															<ui:fragment rendered="#{cc.attrs.bean.isCurrentUserAssessor()}">
																<p:commandLink
																		styleClass="grade gradeModalLink_#{activityAssessment.activityId}"
																		action="#{cc.attrs.bean.setCurrentAssessment(activityAssessment)}"
																		update=":#{cc.clientId}:activityGradePanel:gradePanel :#{cc.clientId}:assessCredentialForm:assessCredentialFormGrowl"
																		oncomplete="showPopupSidebar('#cbp-spmenu-s2');">
																	#{activityAssessment.grade.value != null and activityAssessment.grade.assessed ? activityAssessment.grade.value : '-'}  /
																	#{activityAssessment.grade.maxGrade}
																</p:commandLink>
															</ui:fragment>

															<ui:fragment rendered="#{not cc.attrs.bean.isCurrentUserAssessor()}">
																<a
																		class="grade"
																		disabled="disabled"
																		data-toggle="tooltip"
																		title="Only assessor can update the grade">
																	#{activityAssessment.grade.value != null and activityAssessment.grade.assessed ? activityAssessment.grade.value : '-'}  /
																	#{activityAssessment.grade.maxGrade}
																</a>
															</ui:fragment>
														</c:if>
													</div>
												</li>
											</ui:repeat>

											<li class="competenceScore">
												<div>#{msg['label.competence']} score:</div>
												<h:panelGroup layout="block" class="compPoints_#{competenceAssessment.competenceId}">
													#{competenceAssessment.points} / #{competenceAssessment.maxPoints}
												</h:panelGroup>
											</li>
										</ul>
									</h:panelGroup>
								</ui:fragment>
							</article>
						</ui:fragment>
						<ui:fragment rendered="#{competenceAssessment.readOnly}">
							<article class="whiteBox summaryCard summaryCompetence summaryAssessments disabledCompetence" data-toggle="tooltip" title="This #{msg['label.competence'].toLowerCase()} is not started yet">
								<div class="innerWrapper">
									<h2>
										<h:link outcome="competence">
											#{competenceAssessment.title}
											<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
											<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"
													 disable="#{empty cc.attrs.bean.fullAssessmentData.credentialId}" />
										</h:link>
									</h2>

									<ui:fragment rendered="#{not competenceAssessment.approved and cc.attrs.bean.isCurrentUserAssessor()}">
										<a href="javascript:void(0);" class="linkApprove"><div class="disabledOverlay"></div>Approve<span></span></a>
									</ui:fragment>

									<div class="clear"></div>
								</div>

								<ui:fragment rendered="#{not empty competenceAssessment.activityAssessmentData}">
									<div class="assessmentActivityList">
										<ul>
											<ui:repeat varStatus="actAssIndex" var="activityAssessment" value="#{competenceAssessment.activityAssessmentData}">
												<li class="#{styleUtilBean.getStyleClassBasedOnActivityType(activityAssessment.activityType)}">
													<span class="iconType"></span>
													<h:link outcome="activity">
														#{activityAssessment.title}
														<f:param name="actId" value="#{util:encodeId(activityAssessment.activityId)}" />
														<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
														<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"
																 disable="#{empty cc.attrs.bean.fullAssessmentData.credentialId}" />
													</h:link>

													<div class="activityOptions">
														<div class="disabledOverlay"></div>
														<a href="javascript:void(0);" class="commentsIcon">0</a>
														<a href="javascript:void(0);" class="grade">- / #{activityAssessment.grade.maxGrade}</a>
													</div>
												</li>
											</ui:repeat>

											<li class="competenceScore">
												<div>#{msg['label.competence']} score:</div>
												<div>
													#{competenceAssessment.points} / #{competenceAssessment.maxPoints}
												</div>
											</li>
										</ul>
									</div>
								</ui:fragment>
							</article>
						</ui:fragment>
					</ui:repeat>
				</div>



				<div class="col-md-3">
					<div class="sidebarBlock">
						<h2>Student</h2>
						<div class="user32">
							<a href="javascript:void(0);"> <utilcomp:userAvatar
									avatar="#{cc.attrs.bean.fullAssessmentData.studentAvatarUrl}"
									fullName="#{cc.attrs.bean.fullAssessmentData.studentFullName}" />
							</a>
							<h3>
								<a href="javascript:void(0);">#{cc.attrs.bean.fullAssessmentData.studentFullName}</a>
							</h3>
						</div>
					</div>

					<div class="sidebarBlock">
						<ui:fragment
								rendered="#{(cc.attrs.role eq 'USER') and cc.attrs.bean.fullAssessmentData.assessorId > 0}">
							<h2>Assessor</h2>
							<div class="user32">
								<a href="javascript:void(0);"> <utilcomp:userAvatar
										avatar="#{cc.attrs.bean.fullAssessmentData.assessorAvatarUrl}"
										fullName="#{cc.attrs.bean.fullAssessmentData.assessorFullName}" />
								</a>
								<h3>
									<a href="javascript:void(0);">#{cc.attrs.bean.fullAssessmentData.assessorFullName}</a>
								</h3>
							</div>
						</ui:fragment>

						<ui:fragment
								rendered="#{cc.attrs.bean.fullAssessmentData.assessorId eq 0}">
							<div class="user32">
								<h3>Currently, there is no assessor assigned.</h3>
							</div>
						</ui:fragment>
					</div>

					<div class="sidebarBlock">
						<h2>Requested</h2>
						<p>#{cc.attrs.bean.fullAssessmentData.dateValue}</p>
					</div>
				</div>
			</div>

		</div>

		<activities:activityCommentModal id="commentModal"
										 toUpdate=":#{cc.clientId}:assessCredentialForm:assessCredentialFormGrowl @(.assessmentActivityList.comp_#{activityPrivateConversationBean.activityAssessmentData.compAssessment.competenceId}) :assessmentPreview:assessCredentialForm"
		/>

		<ui:remove>
			<activities:activityGradeModal
					id="activityGradeModal"
					bean="#{cc.attrs.bean}"
					assessment="#{cc.attrs.bean.currentActivityAssessment}"
					toUpdate=":#{cc.clientId}:assessCredentialForm:assessCredentialFormGrowl @(.assessmentActivityList.comp_#{cc.attrs.bean.currentActivityAssessment.compAssessment.competenceId}) :assessmentPreview:assessCredentialForm"
					minGrade="#{not empty cc.attrs.bean.currentActivityAssessment ? cc.attrs.bean.currentActivityAssessment.grade.minGrade : 0}"
					maxGrade="#{not empty cc.attrs.bean.currentActivityAssessment ? cc.attrs.bean.currentActivityAssessment.grade.maxGrade : 0}"
					learningContext="#{cc.attrs.learningContext}"
			/>
		</ui:remove>


		<c:if test="#{cc.attrs.role eq 'USER' and cc.attrs.bean.currentUserAssessedStudent}">
			<div class="cbp-spmenu cbp-spmenu-vertical cbp-spmenu-right rubricsSidebar" id="cbp-spmenu-s2">
				<a href="javascript:void(0);" onclick="hidePopupSidebar('#cbp-spmenu-s2')" class="removeX">Close</a>
				<h2>Grade</h2>
				<h:panelGroup id="panelRubricAssessment">
					<ui:repeat value="#{cc.attrs.bean.currentActivityAssessment.grade.rubricCategories}" var="c">
						<h3>#{c.name}</h3>
						<ul class="levelsList">
							<ui:repeat value="#{c.levels}" var="l">
								<li class="#{c.levelId eq l.id ? 'checked' : ''}">
									#{l.name} <span class="points">(#{l.points} #{l.points eq 1 ? 'point' : 'points'})</span> <span class="iconInfo" data-toggle="tooltip" title="#{l.description}">info</span>
								</li>
							</ui:repeat>
						</ul>
						<p><strong>Comments:</strong> #{c.comment}</p>
					</ui:repeat>
					<p class="totalPoints"><strong>Total Points: #{cc.attrs.bean.currentActivityAssessment.grade.value != null and cc.attrs.bean.currentActivityAssessment.grade.assessed ? cc.attrs.bean.currentActivityAssessment.grade.value : '-'}</strong></p>
				</h:panelGroup>
			</div>
		</c:if>

		<c:if test="#{not (cc.attrs.role eq 'USER' and cc.attrs.bean.currentUserAssessedStudent)}">
			<activities:activityGradePanel
					id="activityGradePanel"
					bean="#{cc.attrs.bean}"
					assessment="#{cc.attrs.bean.currentActivityAssessment}"
					toUpdate=":#{cc.clientId}:assessCredentialForm:assessCredentialFormGrowl @(.assessmentActivityList.comp_#{cc.attrs.bean.currentActivityAssessment.compAssessment.competenceId}) :assessmentPreview:assessCredentialForm"
					minGrade="#{not empty cc.attrs.bean.currentActivityAssessment ? cc.attrs.bean.currentActivityAssessment.grade.minGrade : 0}"
					maxGrade="#{not empty cc.attrs.bean.currentActivityAssessment ? cc.attrs.bean.currentActivityAssessment.grade.maxGrade : 0}"
					learningContext="#{cc.attrs.learningContext}"
			/>
		</c:if>


	</composite:implementation>
</ui:component>