<ui:component
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:composite="http://java.sun.com/jsf/composite"
	xmlns:p="http://primefaces.org/ui"
	xmlns:comp="http://java.sun.com/jsf/composite/components"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
	xmlns:util="http://www.prosolo.com/util"
	xmlns:assessments="http://java.sun.com/jsf/composite/components/assessments"
	xmlns:activities="http://java.sun.com/jsf/composite/components/activities">

	<composite:interface>
		<composite:attribute name="bean" required="true"/>
		<composite:attribute name="learningContext" default=""/>
		<composite:attribute name="service" default="" />
		<composite:attribute name="role" default="USER" />
	</composite:interface>
	
	<composite:implementation>
		<h:outputStylesheet library="css2" name="bootstrap-slider.css"  />
		<script	src="#{request.contextPath}/resources/javascript2/bootstrap-slider.min.js"></script>
		
		<script>
		function hideConfirmDialog(dialogId) {
			$('#'+dialogId).modal('hide');
			$("body").removeAttr("class").removeAttr("style")
			$("div.modal-backdrop.fade.in").remove()
		}
		
		function markDiscussionAsSeen(discussionId, parentElement) {
			markActivityDiscussionRead([{name:'encodedActivityDiscussionId', value:discussionId}])
			$(parentElement).removeClass( "hasNewComments" );
		}
		
		function updateNumberOfMessages(elementId) {
			var numberOfComments = $('#'+elementId).find('div.comments li').length;
			$('#'+elementId).parent().find('a.commentsIcon').text(numberOfComments);
		}
		
		
		//comment form hide/show
		function displaySubmitButton(inputElem) {
		    if ($(inputElem).val().length==0) {
		        $(inputElem).next('a.btn-green').addClass('hidden');
		    } else {
		        $(inputElem).next('a.btn-green').removeClass('hidden');
		    }
		}
		</script>
		<h:form prependId="false" id="remoteCommandForm">
			<p:remoteCommand action="#{cc.attrs.bean.markDiscussionRead()}" name="markActivityDiscussionRead"></p:remoteCommand>
		</h:form>
		
		<div class="whiteBar">
			<div class="container">
				<div class="whiteBarContent">
					<div class="whiteBarLeft">
						<h:form id="assessCredentialForm" prependId="false">
							<p:growl id="assessCredentialFormGrowl" showDetail="true" />
							
							<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.approved}">
								<div class="tagApproved left item">Approved</div>
							</ui:fragment>

							<ui:fragment rendered="#{not cc.attrs.bean.fullAssessmentData.approved and cc.attrs.bean.isCurrentUserAssessor() and not cc.attrs.bean.allCompetencesStarted()}">
								<a href="javascript:void(0);" disabled="disabled" class="btn btn-green btn-sm item" data-toggle="tooltip" title="Credential can't be approved until all competencies are started">Approve</a>
							</ui:fragment>

							<ui:fragment rendered="#{not cc.attrs.bean.fullAssessmentData.approved and cc.attrs.bean.isCurrentUserAssessor() and cc.attrs.bean.allCompetencesStarted()}">
								<p:commandLink
									styleClass="btn btn-green btn-sm item"
									value="Approve"
									update="@form"
									action="#{cc.attrs.bean.approveCredential()}" 
								/>
								
								<ui:remove>
								<a href="#" class="btn btn-green btn-sm" data-toggle="modal" data-target="#approveAssessment">Approve</a>
								<div class="modal fade" id="approveAssessment" tabindex="-1" role="dialog" aria-labelledby="apprAssessment">
									<div class="modal-dialog" role="document">
										<div class="modal-content">
											<div class="modal-header alignLeft">
												<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">Ã—</span></button>
												<h2 class="modal-title" id="apprAssessment">Approve Assessment</h2>
											</div>
											
											<div class="assessmentModalMeta">
												<div class="assessmentModalMetaLine">
													<div class="assessmentModalMetaLeft">
														Credential:
													</div>
													<div class="assessmentModalMetaRight">
														<h3>#{cc.attrs.bean.fullAssessmentData.title}</h3>
													</div>
												</div>
												
												<div class="assessmentModalMetaLine">
													<div class="assessmentModalMetaLeft">
														Student:
													</div>
													<div class="assessmentModalMetaRight">
														<utilcomp:userAvatar
															avatar="#{cc.attrs.bean.fullAssessmentData.studentAvatarUrl}"
															fullName="#{cc.attrs.bean.fullAssessmentData.studentFullName}" />
														<h3>#{cc.attrs.bean.fullAssessmentData.studentFullName}</h3>
													</div>
												</div>
											</div>
											
											<div class="modal-body alignLeft">
												<p:inputTextarea placeholder="Type a review that will be shown on student's profile..." 
													value="#{cc.attrs.bean.reviewText}" id="reviewContentTextarea" />
											</div>
											
											<div class="modal-footer alignLeft">
												<p:commandLink update="@all" action="#{cc.attrs.bean.approveCredential()}" 
													oncomplete="hideConfirmDialog('approveAssessment')"
													styleClass="btn btn-green">Submit</p:commandLink>
											</div>
										</div>
									</div>
								</div>
								</ui:remove>
							</ui:fragment>
							
							<div class="totalScore">Total score: #{cc.attrs.bean.fullAssessmentData.points} / #{cc.attrs.bean.fullAssessmentData.maxPoints}</div>
						</h:form>
					</div>
					
					<div class="whiteBarRight">
						<h:panelGroup rendered="#{cc.attrs.bean.fullAssessmentData.mandatoryFlow}" styleClass="mandatoryTag item" layout="block"/>
						<div class="duration item">#{cc.attrs.bean.fullAssessmentData.durationString}</div>
					</div>
				</div>
			</div>
		</div>
		
		<div class="container">
			<div class="row">
				<div class="col-md-9 mandatoryFlow">
					<h2 class="bottom10">Credential Assessment</h2>
					
					<ui:fragment rendered="#{cc.attrs.role eq 'MANAGER'}">
						<div class="fromBox">
							<span class="fromLabel">From:</span>
							<div class="dropdown fromDrop">
								<a data-toggle="dropdown" aria-haspopup="true"
									aria-expanded="true"> #{cc.attrs.bean.fullAssessmentData.assessorFullName != null ? cc.attrs.bean.fullAssessmentData.assessorFullName : 'Default assessment'} <span class="arrowDown">arrowDown</span>
								</a>
								<ul class="dropdown-menu" aria-labelledby="dropdownMenu">
									<ui:repeat value="#{cc.attrs.bean.otherAssessments}" var="otherAssessment">
										<li>
											<h:outputLink value="#{applicationbean.domain}manage/credentials/#{otherAssessment.encodedCredentialId}/assessments/#{otherAssessment.encodedAssessmentId}">
												#{otherAssessment.assessorFullName != null ? otherAssessment.assessorFullName : 'Default assessment'} <span class="#{otherAssessment.approved ? 'approved' : 'pending'}">#{otherAssessment.approved ? 'Approved' : 'Pending'}</span>
											</h:outputLink>
										</li>
									</ui:repeat>
								</ul>
							</div>
						</div>
					</ui:fragment>

					<p>
						Here you can assess this credential for #{cc.attrs.bean.fullAssessmentData.studentFullName}. All comments between #{cc.attrs.bean.fullAssessmentData.studentFullName} and you are private.
					</p>

					<ui:fragment rendered="#{not empty cc.attrs.bean.fullAssessmentData.message}">
					<div class="whiteBox assessmentInitialMessage">
						<h2>Message</h2>
						<p><h:outputText value="#{cc.attrs.bean.fullAssessmentData.message}" escape="false"/></p>
						<div class="clear"></div>
					</div>
					</ui:fragment>

					<ui:repeat varStatus="compAssIndex" var="competenceAssessment" value="#{cc.attrs.bean.fullAssessmentData.competenceAssessmentData}">
						<ui:fragment rendered="#{not competenceAssessment.readOnly}">
							<article class="whiteBox summaryCard summaryCompetence summaryAssessments">
								<div class="innerWrapper">
									<h:form name="competenceAssessment_#{competenceAssessment.competenceId}_topForm"
										prependId="false"
										id="competenceAssessment_#{competenceAssessment.competenceId}_topForm">
										<p:growl />

										<h2>
											<h:link outcome="competence">
												#{competenceAssessment.title}
												<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
												<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"
														 disable="#{empty cc.attrs.bean.fullAssessmentData.credentialId}" />
											</h:link>
										</h2>

										<h:panelGroup rendered="#{competenceAssessment.approved}"
											styleClass="tagApproved" layout="block">
											Approved
										</h:panelGroup>

										<p:commandLink styleClass="linkApprove"
											actionListener="#{cc.attrs.bean.approveCompetence(competenceAssessment.competenceAssessmentEncodedId)}"
											update="@form"
											rendered="#{not competenceAssessment.approved and cc.attrs.bean.isCurrentUserAssessor()}">
											Approve<span></span>
										</p:commandLink>

										<div class="clear"></div>
									</h:form>
								</div>

								<ui:fragment rendered="#{not empty competenceAssessment.activityAssessmentData}">
									<h:panelGroup layout="block" styleClass="assessmentActivityList comp_#{competenceAssessment.competenceId}"
										id="activityAssessmentWrapper#{compAssIndex.index}">
										<ul>
											<ui:repeat varStatus="actAssIndex" var="activityAssessment" value="#{competenceAssessment.activityAssessmentData}">
												<li class="#{styleUtilBean.getStyleClassBasedOnActivityType(activityAssessment.activityType)} #{(!activityAssessment.participantInDiscussion or activityAssessment.allRead or activityAssessment.numberOfMessages eq 0) ? '' : 'hasNewComments'}">
													<span class="#{activityAssessment.completed ? 'check' : 'iconType'}"></span>
													<h:link outcome="activity">
														#{activityAssessment.title}
														<f:param name="actId" value="#{util:encodeId(activityAssessment.activityId)}" />
														<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
														<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"
															disable="#{empty cc.attrs.bean.fullAssessmentData.credentialId}" />
													</h:link>
													<div class="activityOptions">
														<ui:fragment rendered="#{(activityAssessment.resultType eq 'TEXT' or activityAssessment.resultType eq 'FILE_UPLOAD') and not empty activityAssessment.result}">
															<h:link outcome="activity-response"
																styleClass="viewResult"
																rendered="#{cc.attrs.role eq 'USER'}"
																pt:data-toggle="tooltip" pt:title="View Response">
																View Response
																<f:param name="actId" value="#{util:encodeId(activityAssessment.activityId)}" />
																<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
																<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"/>
																<f:param name="targetActId" value="#{activityAssessment.encodedTargetActivityId}" />
															</h:link>
															<h:link outcome="activity-responses"
																styleClass="viewResult"
																rendered="#{cc.attrs.role eq 'MANAGER'}"
																pt:data-toggle="tooltip" pt:title="View Response">
																View Response
																<f:param name="actId" value="#{util:encodeId(activityAssessment.activityId)}" />
																<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
																<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"/>
																<f:param name="user" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.assessedStrudentId)}" />
															</h:link>
														</ui:fragment>

														<p:commandLink styleClass="commentsIcon" pt:data-toggle="modal"
														   onclick="markDiscussionAsSeen('#{activityAssessment.encodedDiscussionId}',this.parentElement.parentElement)"
														   pt:data-target="#assessmentCommentsModal#{compAssIndex.index}#{actAssIndex.index}"
														   action="#{cc.attrs.bean.setCurrentAssessment(competenceAssessment, activityAssessment)}"	>
															#{activityAssessment.numberOfMessages}
														</p:commandLink>

														<div class="modal fade assessmentCommentsModal"
															id="assessmentCommentsModal#{compAssIndex.index}#{actAssIndex.index}"
															tabindex="-1" role="dialog"
															aria-labelledby="assessmentCommentsModal">

															<div class="modal-dialog modal-lg">
																<div class="modal-content">
																	<div class="modal-header alignLeft">
																		<button
																			onclick="updateNumberOfMessages('assessmentCommentsModal#{compAssIndex.index}#{actAssIndex.index}')"
																			type="button" class="close" data-dismiss="modal"
																			aria-label="Close">
																			<span aria-hidden="true">Ã—</span>
																		</button>
																		<h2 class="modal-title">Comments</h2>
																	</div>

																	<h:form id="newCommentForm-#{activityAssessment.activityId}" prependId="false">
																		<div class="discussion">
																			<div class="comments">
																				<ui:fragment rendered="#{not empty activityAssessment.activityDiscussionMessageData}">
																					<ul class="media-list">
																						<ui:repeat var="activityMessageData" value="#{activityAssessment.activityDiscussionMessageData}">
																							<li class="media">
																								<div class="media-left">
																									<utilcomp:userAvatar
																										avatar="#{activityMessageData.senderAvatarUrl}"
																										fullName="#{activityMessageData.senderFullName}" />
																								</div>

																								<div class="media-body">
																									<ui:fragment rendered="#{cc.attrs.bean.isCurrentUserMessageSender(activityMessageData)}">
																										<div class="commentMain">
																											<span class="commentTime">
																												Edited: #{activityMessageData.dateUpdatedFormat}
																											</span>

																											<h3 class="media-heading">
																												#{activityMessageData.senderFullName}
																												<ui:fragment rendered="#{activityMessageData.senderInsructor}">
																													<span>INSTRUCTOR</span>
																												</ui:fragment>
																											</h3>

																											<p class="commentText">#{activityMessageData.content}</p>

																											<div class="editComment hidden">
																												<p:inputTextarea name="name"
																													styleClass="contentEditableComment"
																													style="width:100%;" rows="1"
																													value="#{activityMessageData.content}"></p:inputTextarea>
																												<p:commandLink styleClass="btn btn-sm btn-green"
																													oncomplete="hideEditComment(this)"
																													update="@form"
																													actionListener="#{cc.attrs.bean.editComment(activityMessageData.content,activityMessageData.encodedMessageId)}"
																													type="button"
																													name="button">
																													Submit
																												</p:commandLink>

																												<a href="javascript:void(0)"
																													class="btn btn-sm btn-green-stroke"
																													onclick="hideEditComment(this)">Cancel</a>
																											</div>

																											<div class="commentOptions">
																												<a href="javascript:void(0)" class="edit"
																													onclick="showEditComment(this)">
																													<span class="icon"></span>Edit
																												</a>
																											</div>
																										</div>
																									</ui:fragment>

																									<ui:fragment rendered="#{not cc.attrs.bean.isCurrentUserMessageSender(activityMessageData)}">
																										<div class="commentMain">
																											<span class="commentTime">
																												Edited: #{activityMessageData.dateCreatedFormat}
																											</span>
																											<h3 class="media-heading">
																												#{activityMessageData.senderFullName}
																												<ui:fragment rendered="#{activityMessageData.senderInsructor}">
																													<span>INSTRUCTOR</span>
																												</ui:fragment>
																											</h3>
																											<p>#{activityMessageData.content}</p>
																										</div>

																										<div class="media replyInput hidden">
																											<div class="media-left">
																												<utilcomp:userAvatar
																													avatar="#{activityMessageData.senderAvatarUrl}"
																													fullName="#{activityMessageData.senderFullName}" />
																											</div>

																											<div class="media-body replyComment">
																												<div class="commentForm">
																													<textarea placeholder="Add Comment..." onkeyup="displaySubmitButton(this)"></textarea>
																													<button type="button"
																														class="btn btn-sm btn-green hidden"
																														name="button">
																														Submit
																													</button>
																												</div>
																											</div>
																										</div>
																									</ui:fragment>
																								</div>
																							</li>
																						</ui:repeat>
																					</ul>
																				</ui:fragment>
																			</div>

																			<div class="addComment">
																				<utilcomp:userAvatar
																					avatar="#{cc.attrs.bean.loggedUserBean.sessionData.avatar}"
																					fullName="#{cc.attrs.bean.loggedUserBean.sessionData.fullName}" />

																				<div class="commentForm">
																					<p:inputTextarea styleClass="contentEditableComment"
																						style="width:100%;" rows="1"
																						value="#{cc.attrs.bean.newCommentValue}"
																						placeholder="Add Comment..."
																						onkeyup="displaySubmitButton(this)" />
																					<p:commandLink update="@form"
																						actionListener="#{cc.attrs.bean.addCommentToActivityDiscussion()}"
																						type="button" styleClass="btn btn-green hidden"
																						name="button">
																						<f:param name="page" value="#{facesContext.viewRoot.viewId}"></f:param>
																						<f:param name="learningContext" value="#{util:addSubContext(cc.attrs.learningContext, &#34;name:activity_assessment|id:&#34;.concat(util:decodeId(activityAssessment.encodedDiscussionId)).concat(&#34;|context:/name:assessment_comments/&#34;))}"></f:param>
																						<f:param name="service" value=""></f:param>
																						Submit
																					</p:commandLink>
																				</div>
																			</div>
																		</div>
																	</h:form>
																</div>
															</div>
														</div>
														<ui:fragment rendered="#{activityAssessment.completed and cc.attrs.bean.isCurrentUserAssessor() and activityAssessment.grade.maxGrade > 0 and !activityAssessment.automaticGrade}">
															<p:commandLink
																styleClass="grade gradeModalLink_#{activityAssessment.activityId}"
																pt:data-toggle="modal" data-target="#assessmentGradeModal1"
																action="#{cc.attrs.bean.setCurrentAssessment(competenceAssessment, activityAssessment)}"
																update=":#{cc.clientId}:activityGradeModal:formGradeModal:panelGradeModal"
																oncomplete="$('#assessmentGradeModal1').modal('show');">
																#{activityAssessment.grade.value != null and activityAssessment.grade.assessed ? activityAssessment.grade.value : '-'}  /
																#{activityAssessment.grade.maxGrade}
															</p:commandLink>
														</ui:fragment>

														<ui:fragment rendered="#{cc.attrs.role eq 'MANAGER' and activityAssessment.completed and cc.attrs.bean.isCurrentUserAssessor() and activityAssessment.grade.maxGrade > 0 and activityAssessment.automaticGrade}">
															<a
																class="grade"
																disabled="disabled"
																data-toggle="tooltip"
																title="Grade for this external activity is automatically set upon completion">
																#{activityAssessment.grade.value != null and activityAssessment.grade.assessed ? activityAssessment.grade.value : '-'}  /
																#{activityAssessment.grade.maxGrade}
															</a>
														</ui:fragment>

														<ui:fragment rendered="#{not cc.attrs.bean.isCurrentUserAssessor() or not activityAssessment.completed or activityAssessment.grade.maxGrade == 0}">
															<a
																class="grade"
																disabled="disabled"
																data-toggle="tooltip"
																title="#{(not cc.attrs.bean.isCurrentUserAssessor())
																			? 'Only assessor can update the grade'
																			: not activityAssessment.completed
																				? 'Not completed activity can not be graded'
																				: 'Points are not set for this activity'}">
																#{activityAssessment.grade.value != null and activityAssessment.grade.assessed ? activityAssessment.grade.value : '-'}  /
																#{activityAssessment.grade.maxGrade}
															</a>
														</ui:fragment>

													</div>

													<ui:remove>
													<ui:fragment rendered="#{not empty activityAssessment.downloadResourceUrls}">
														<ui:repeat var="url" value="#{activityAssessment.downloadResourceUrls}">
															<a data-original-title="Download Response"
																href="#{url}" target="_blank"
																class="download" data-toggle="tooltip" title="">Download</a>
														</ui:repeat>
													</ui:fragment>
													</ui:remove>
												</li>
											</ui:repeat>

											<li class="competenceScore">
												<div>Competence score:</div>
												<h:panelGroup layout="block" class="compPoints_#{competenceAssessment.competenceId}">
													#{competenceAssessment.points} / #{competenceAssessment.maxPoints}
												</h:panelGroup>
											</li>
										</ul>
									</h:panelGroup>
								</ui:fragment>
							</article>
						</ui:fragment>
						<ui:fragment rendered="#{competenceAssessment.readOnly}">
							<article class="whiteBox summaryCard summaryCompetence summaryAssessments disabledCompetence" data-toggle="tooltip" title="Student has not started this competency">
								<div class="innerWrapper">
									<h2>
										<h:link outcome="competence">
											#{competenceAssessment.title}
											<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
											<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"
													 disable="#{empty cc.attrs.bean.fullAssessmentData.credentialId}" />
										</h:link>
									</h2>

									<a href="javascript:void(0);" class="linkApprove"><div class="disabledOverlay"></div>Approve<span></span></a>

									<div class="clear"></div>
								</div>

								<ui:fragment rendered="#{not empty competenceAssessment.activityAssessmentData}">
									<div class="assessmentActivityList">
										<ul>
											<ui:repeat varStatus="actAssIndex" var="activityAssessment" value="#{competenceAssessment.activityAssessmentData}">
												<li class="#{styleUtilBean.getStyleClassBasedOnActivityType(activityAssessment.activityType)}">
													<span class="iconType"></span>
													<h:link outcome="activity">
														#{activityAssessment.title}
														<f:param name="actId" value="#{util:encodeId(activityAssessment.activityId)}" />
														<f:param name="compId" value="#{util:encodeId(competenceAssessment.competenceId)}" />
														<f:param name="credId" value="#{util:encodeId(cc.attrs.bean.fullAssessmentData.credentialId)}"
																 disable="#{empty cc.attrs.bean.fullAssessmentData.credentialId}" />
													</h:link>

													<div class="activityOptions">
													  	<div class="disabledOverlay"></div>
														<a href="javascript:void(0);" class="commentsIcon">0</a>
														<a href="javascript:void(0);" class="grade">-</a>
													</div>
												</li>
											</ui:repeat>

											<li class="competenceScore">
												<div>Competence score:</div>
												<div>
													#{competenceAssessment.points} / #{competenceAssessment.maxPoints}
												</div>
											</li>
										</ul>
									</div>
								</ui:fragment>
							</article>
						</ui:fragment>
					</ui:repeat>
				</div>

				<div class="col-md-3">
					<div class="sidebarBlock">
						<h2>Student</h2>
						<div class="user32">
							<a href="javascript:void(0);"> 
								<utilcomp:userAvatar
									avatar="#{cc.attrs.bean.fullAssessmentData.studentAvatarUrl}"
									fullName="#{cc.attrs.bean.fullAssessmentData.studentFullName}" />
							</a>
							<h3>
								<a href="javascript:void(0);">#{cc.attrs.bean.fullAssessmentData.studentFullName}</a>
							</h3>
						</div>
					</div>

					<div class="sidebarBlock">
						<ui:fragment rendered="#{(cc.attrs.role eq 'USER') and cc.attrs.bean.fullAssessmentData.assessorId > 0}">
							<h2>Assessor</h2>
							<div class="user32">
								<a href="javascript:void(0);">
									<utilcomp:userAvatar
										avatar="#{cc.attrs.bean.fullAssessmentData.assessorAvatarUrl}"
										fullName="#{cc.attrs.bean.fullAssessmentData.assessorFullName}" />
								</a>
								<h3>
									<a href="javascript:void(0);">#{cc.attrs.bean.fullAssessmentData.assessorFullName}</a>
								</h3>
							</div>
						</ui:fragment>
						
						<ui:fragment rendered="#{cc.attrs.bean.fullAssessmentData.assessorId eq 0}">
							<div class="user32">
								<h3>
									Currently, there is no assessor assigned.
								</h3>
							</div>
						</ui:fragment>
					</div>

					<div class="sidebarBlock">
						<h2>Requested</h2>
						<p>#{cc.attrs.bean.fullAssessmentData.dateValue}</p>
					</div>
				</div>
			</div>
    	</div>
    	
    	<activities:activityGradeModal
	    	id="activityGradeModal"
	   	 	bean="#{cc.attrs.bean}"
			assessment="#{cc.attrs.bean.currentActivityAssessment}"
			toUpdate=":#{cc.clientId}:assessCredentialForm:assessCredentialFormGrowl @(.assessmentActivityList.comp_#{cc.attrs.bean.currentCompetenceAssessment.competenceId}) :assessmentPreview:assessCredentialForm"
			minGrade="#{not empty cc.attrs.bean.currentActivityAssessment ? cc.attrs.bean.currentActivityAssessment.grade.minGrade : 0}"
			maxGrade="#{not empty cc.attrs.bean.currentActivityAssessment ? cc.attrs.bean.currentActivityAssessment.grade.maxGrade : 0}"
			learningContext="#{cc.attrs.learningContext}"
		/>
	</composite:implementation>
</ui:component>