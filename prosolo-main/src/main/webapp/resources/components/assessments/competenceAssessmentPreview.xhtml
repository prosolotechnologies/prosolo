<ui:component xmlns:h="http://java.sun.com/jsf/html"
			  xmlns:ui="http://java.sun.com/jsf/facelets"
			  xmlns:composite="http://java.sun.com/jsf/composite"
			  xmlns:util="http://www.prosolo.com/util"
			  xmlns:p="http://primefaces.org/ui"
			  xmlns:assessment="http://java.sun.com/jsf/composite/components/assessments"
			  xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
			  xmlns:c="http://java.sun.com/jsp/jstl/core"
			  xmlns:f="http://java.sun.com/jsf/core"
			  xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
>

	<composite:interface>
		<composite:attribute name="credentialId" required="true" />
		<composite:attribute name="learningContext" default="" />
	</composite:interface>

	<composite:implementation>

        <h:panelGroup id="panelCompetenceAssessmentPreview">
            <script>
                function hideConfirmDialog(dialogId) {
                    $('#' + dialogId).modal('hide');
                    $("body").removeAttr("class").removeAttr("style")
                    $("div.modal-backdrop.fade.in").remove()
                }

                function markDiscussionAsSeen(assessmentId, el, resource) {
                    switch (resource) {
                        case 'ACTIVITY':
                            markActivityDiscussionRead
                            ([{
                                name: 'assessmentEncId',
                                value: assessmentId
                            }]);
                            break;
                        case 'COMPETENCE':
                            markCompetenceAssessmentDiscussionRead
                            ([{
                                name: 'assessmentEncId',
                                value: assessmentId
                            }]);
                            break;
                    }
                    $(el).removeClass("hasNewComments");
                }

                //comment form hide/show
                function displaySubmitButton(inputElem) {
                    if ($(inputElem).val().length == 0) {
                        $(inputElem).parent().find('a.btn-green').addClass('hidden');
                    } else {
                        $(inputElem).parent().find('a.btn-green').removeClass('hidden');
                    }
                }

                function displaySubmitButtonPrivateConvModal(inputElem) {
                    if ($(inputElem).val().length == 0) {
                        $(inputElem).parent().find('a.btn-green').addClass('hidden');
                    } else {
                        $(inputElem).parent().find('a.btn-green').removeClass('hidden');
                    }
                }

            </script>

            <h:form prependId="false" id="remoteCommandForm">
                <p:remoteCommand process="@this" action="#{competenceAssessmentBean.markActivityAssessmentDiscussionRead()}"
                                 name="markActivityDiscussionRead"></p:remoteCommand>
                <p:remoteCommand process="@this" action="#{competenceAssessmentBean.markCompetenceAssessmentDiscussionRead()}"
                                 name="markCompetenceAssessmentDiscussionRead"/>
            </h:form>

            <p:growl id="growlMain" showDetail="true" globalOnly="true"/>

            <div class="whiteBar">
                <div class="container">
                    <div class="whiteBarContent">
                        <div class="whiteBarLeft">
                            <ui:fragment rendered="#{competenceAssessmentBean.isUserAssessorInCurrentContext() and competenceAssessmentBean.competenceAssessmentData.status eq 'REQUESTED'}">
                                <p:commandLink
                                        styleClass="btn btn-green btn-sm item"
                                        process="@this"
                                        action="#{competenceAssessmentBean.acceptAssessmentRequest()}"
                                        update=":#{cc.clientId}:growlMain">
                                    Start Assessment
                                    <f:param name="page" value="#{facesContext.viewRoot.viewId}"/>
                                    <f:param name="learningContext" value="#{util:addSubContext(cc.attrs.learningContext, 'name:COMPETENCE|id:'.concat(competenceAssessmentBean.competenceAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(competenceAssessmentBean.competenceAssessmentData.competenceAssessmentId).concat('/'))}"/>
                                </p:commandLink>
                                <a href="#" class="btn btn-default btn-sm item" data-toggle="modal" data-target="#declineAssessment">Decline Request</a>
                            </ui:fragment>
                        </div>
                        <div class="whiteBarRight"></div>
                    </div>
                </div>
            </div>

            <div class="container">
                <ol class="breadcrumb">
                    <li>
                        <h:link value="#{msg['label.credential.plural']}" outcome="credentialLibrary"/>
                    </li>
                    <li>
                        <h:link value="#{util:shortenAndAddDots(competenceAssessmentBean.credentialTitle)}"
                                outcome="credential">
                            <f:param name="id" value="#{param.credId}"></f:param>
                        </h:link>
                    </li>
                    <li>
                        <h:link value="#{util:shortenAndAddDots(competenceAssessmentBean.competenceAssessmentData.title)}"
                                outcome="competence">
                            <f:param name="credId" value="#{param.credId}"/>
                            <f:param name="compId" value="#{param.compId}"/>
                        </h:link>
                    </li>
                    <li>
                        <h:link value="Assessments" outcome="/competence-assessments-root">
                            <f:param name="credId" value="#{param.credId}"/>
                            <f:param name="compId" value="#{param.compId}"/>
                        </h:link>
                    </li>

                    <ui:fragment rendered="#{competenceAssessmentBean.isUserAssessedStudentInCurrentContext() and util:getPagePath(view.viewId) == 'competence-self-assessment'}">
                        <li class="active">
                            #{msg['label.assessment.type.SELF_ASSESSMENT.short']}
                        </li>
                    </ui:fragment>

                    <ui:fragment rendered="#{competenceAssessmentBean.isUserAssessedStudentInCurrentContext() and (util:getPagePath(view.viewId) == 'competence-peer-assessment' or util:getPagePath(view.viewId) == 'competence-peer-assessments')}">

                        <ui:fragment rendered="#{util:getPagePath(view.viewId) == 'competence-peer-assessments'}">
                            <li class="active">
                                #{msg['label.assessment.type.PEER_ASSESSMENT.short']}
                            </li>
                        </ui:fragment>

                        <ui:fragment rendered="#{util:getPagePath(view.viewId) == 'competence-peer-assessment'}">
                            <li>
                                <h:link includeViewParams="true"
                                        value="#{msg['label.assessment.type.PEER_ASSESSMENT.short']}"
                                        outcome="/competence-peer-assessments">
                                </h:link>
                            </li>
                            <li class="active">
                                <assessment:assessmentActorName
                                        actorId="#{competenceAssessmentBean.competenceAssessmentData.assessorId}"
                                        actorFullName="#{competenceAssessmentBean.competenceAssessmentData.assessorFullName}"
                                        blindAssessmentMode="#{competenceAssessmentBean.competenceAssessmentData.blindAssessmentMode}"
                                        actorType="ASSESSOR"
                                />
                            </li>
                        </ui:fragment>
                    </ui:fragment>

                    <ui:fragment rendered="#{competenceAssessmentBean.isUserAssessedStudentInCurrentContext() and util:getPagePath(view.viewId) == 'competence-instructor-assessment'}">
                        <li class="active">
                            #{msg['label.assessment.type.INSTRUCTOR_ASSESSMENT.short']}
                        </li>
                    </ui:fragment>
                </ol>
            </div>

            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <c:if test="#{competenceAssessmentBean.isUserAssessedStudentInCurrentContext()}">
                            <assessment:competenceAssessmentStudentTabs
                                selfAssessmentEnabled="#{competenceAssessmentBean.selfAssessmentEnabled}"
                                peerAssessmentEnabled="#{competenceAssessmentBean.peerAssessmentEnabled}"
                            />
                        </c:if>

                        <div class="row">
                            <div class="col-md-#{competenceAssessmentBean.competenceAssessmentData.type eq 'SELF_ASSESSMENT' ? '12' : '9'} mandatoryFlow">
                                <h2 class="bottom20">#{msg['label.assessment.type.'.concat(competenceAssessmentBean.competenceAssessmentData.type.name())]} (#{msg['label.enum.AssessmentStatus.'.concat(competenceAssessmentBean.competenceAssessmentData.status.name())]})</h2>

                                <ui:fragment rendered="#{competenceAssessmentBean.competenceAssessmentData.status eq 'REQUESTED'}">
                                    <div class="alert alert-warning" role="alert">
                                        This is the assessment request. If the assessment is not started within the 14 days since requested, it will automatically expire.
                                    </div>
                                </ui:fragment>
                                <ui:fragment rendered="#{competenceAssessmentBean.competenceAssessmentData.status eq 'REQUEST_DECLINED'}">
                                    <div class="alert alert-warning" role="alert">
                                        This assessment request has been declined by the assessor.
                                    </div>
                                </ui:fragment>
                                <ui:fragment rendered="#{competenceAssessmentBean.competenceAssessmentData.status eq 'REQUEST_EXPIRED'}">
                                    <div class="alert alert-warning" role="alert">
                                        This assessment request has expired since it was not started within the 14 days since initiated.
                                    </div>
                                </ui:fragment>
                                <ui:fragment rendered="#{competenceAssessmentBean.competenceAssessmentData.status eq 'SUBMITTED'}">
                                    <div class="alert alert-warning" role="alert">
                                        The assessment has been submitted, and it cannot be changed any more.
                                    </div>
                                </ui:fragment>
                                <ui:fragment rendered="#{competenceAssessmentBean.competenceAssessmentData.status eq 'ASSESSMENT_QUIT' or competenceAssessmentBean.competenceAssessmentData.status eq 'SUBMITTED_ASSESSMENT_QUIT'}">
                                    <div class="alert alert-warning" role="alert">
                                        The assessor has withdrawn from the assessment.
                                    </div>
                                </ui:fragment>

                                <ui:fragment rendered="#{competenceAssessmentBean.competenceAssessmentData.type ne 'SELF_ASSESSMENT'}">
                                    <p> Only #{msg['label.competence.plural'].toLowerCase()} started by the student can be assessed. After the assessment is performed, it can be submitted. Submitted assessments cannot be changed.
                                        <br/><br/>
                                        Comments made during the assessment process are private between the student and the assessor.</p>
                                </ui:fragment>

                                <c:if test="#{competenceAssessmentBean.competenceAssessmentData.assessmentInitialized}">
                                    <h:form>
                                        <assessment:competenceAssessment
                                                competenceAssessment="#{competenceAssessmentBean.competenceAssessmentData}"
                                                bean="#{competenceAssessmentBean}"
                                                credentialId="#{cc.attrs.credentialId}"
                                                role="USER"
                                                learningContext="#{cc.attrs.learningContext}"
                                                growlToUpdate=":#{cc.clientId}:growlMain"
                                                toUpdateGradePanel=":#{cc.clientId}:gradePanelContainer"
                                                gradePanelSidebarId="gradeSidebar"
                                                toUpdateRubricPanelForStudent=":#{cc.clientId}:rubricAssessmentPreview:panelRubricAssessment"
                                                toUpdatePrivateConversationModal=":#{cc.clientId}:commentModal:formPrivateConversation:panelModalPrivateConversation"
                                                currentUserAssessor="#{competenceAssessmentBean.isUserAssessorInCurrentContext()}"
                                                currentUserAssessedStudent="#{competenceAssessmentBean.isUserAssessedStudentInCurrentContext()}"
                                                approveModalId="submitCredAssessment"
                                                toUpdateApproveModal=":#{cc.clientId}:approveModalContainer"
                                                displaySubmittedIcon="#{competenceAssessmentBean.competenceAssessmentData.type eq 'SELF_ASSESSMENT'}"
                                        />
                                    </h:form>
                                </c:if>
                            </div>

                            <h:panelGroup layout="block" rendered="#{competenceAssessmentBean.competenceAssessmentData.type ne 'SELF_ASSESSMENT'}" styleClass="col-md-3">
                                <div class="sidebarBlock">
                                    <h2>Status</h2>
                                    <div class="#{styleUtilBean.getIconClassForAssessmentStatus(competenceAssessmentBean.competenceAssessmentData.status)} left">#{msg['label.enum.AssessmentStatus.'.concat(competenceAssessmentBean.competenceAssessmentData.status.name())]}</div>
                                </div>
                                <div class="sidebarBlock">
                                    <h2>Student</h2>
                                    <div class="user32">
                                        <a href="javascript:void(0);">
                                            <assessment:assessmentActorAvatar
                                                    actorId="#{competenceAssessmentBean.competenceAssessmentData.studentId}"
                                                    avatarUrl="#{competenceAssessmentBean.competenceAssessmentData.studentAvatarUrl}"
                                                    actorFullName="#{competenceAssessmentBean.competenceAssessmentData.studentFullName}"
                                                    blindAssessmentMode="#{competenceAssessmentBean.competenceAssessmentData.blindAssessmentMode}"
                                                    actorType="STUDENT"
                                            />
                                        </a>
                                        <h3>
                                            <a href="javascript:void(0);">
                                                <assessment:assessmentActorName
                                                        actorId="#{competenceAssessmentBean.competenceAssessmentData.studentId}"
                                                        actorFullName="#{competenceAssessmentBean.competenceAssessmentData.studentFullName}"
                                                        blindAssessmentMode="#{competenceAssessmentBean.competenceAssessmentData.blindAssessmentMode}"
                                                        actorType="STUDENT"
                                                />
                                            </a>
                                        </h3>
                                    </div>
                                </div>

                                <div class="sidebarBlock">
                                    <ui:fragment
                                            rendered="#{competenceAssessmentBean.competenceAssessmentData.assessorId > 0}">
                                        <h2>Assessor</h2>
                                        <div class="user32">
                                            <a href="javascript:void(0);">
                                                <assessment:assessmentActorAvatar
                                                        actorId="#{competenceAssessmentBean.competenceAssessmentData.assessorId}"
                                                        avatarUrl="#{competenceAssessmentBean.competenceAssessmentData.assessorAvatarUrl}"
                                                        actorFullName="#{competenceAssessmentBean.competenceAssessmentData.assessorFullName}"
                                                        blindAssessmentMode="#{competenceAssessmentBean.competenceAssessmentData.blindAssessmentMode}"
                                                        actorType="ASSESSOR"
                                                />
                                            </a>
                                            <h3>
                                                <a href="javascript:void(0);">
                                                    <assessment:assessmentActorName
                                                            actorId="#{competenceAssessmentBean.competenceAssessmentData.assessorId}"
                                                            actorFullName="#{competenceAssessmentBean.competenceAssessmentData.assessorFullName}"
                                                            blindAssessmentMode="#{competenceAssessmentBean.competenceAssessmentData.blindAssessmentMode}"
                                                            actorType="ASSESSOR"
                                                    />
                                                </a>
                                            </h3>
                                        </div>
                                    </ui:fragment>

                                    <ui:fragment
                                            rendered="#{competenceAssessmentBean.competenceAssessmentData.assessorId eq 0}">
                                        <div class="user32">
                                            <h3>Currently, there is no assessor assigned.</h3>
                                        </div>
                                    </ui:fragment>
                                </div>

                                <div class="sidebarBlock">
                                    <h2>Requested</h2>
                                    <utilcomp:convertTimeOutput
                                            millis="#{competenceAssessmentBean.competenceAssessmentData.dateCreated}"
                                            format="MMMM DD, YYYY" />
                                </div>

                                <ui:fragment rendered="#{competenceAssessmentBean.competenceAssessmentData.status eq 'REQUEST_EXPIRED' or competenceAssessmentBean.competenceAssessmentData.status eq 'REQUEST_DECLINED' or competenceAssessmentBean.competenceAssessmentData.status eq 'ASSESSMENT_QUIT' or competenceAssessmentBean.competenceAssessmentData.status eq 'SUBMITTED_ASSESSMENT_QUIT'}">
                                    <div class="sidebarBlock">
                                        <h2>#{msg['label.enum.AssessmentStatus.'.concat(competenceAssessmentBean.competenceAssessmentData.status.name())]}</h2>
                                        <p><utilcomp:convertTimeOutput
                                                millis="#{competenceAssessmentBean.competenceAssessmentData.quitDate}"
                                                format="MMMM DD, YYYY" /></p>
                                    </div>
                                </ui:fragment>

                                <c:if test="#{competenceAssessmentBean.competenceAssessmentData.status eq 'PENDING' and competenceAssessmentBean.isUserAssessedStudentInCurrentContext()}">
                                    <p:commandLink
                                            styleClass="btn btn-green"
                                            pt:data-toggle="modal"
                                            value="Ask for #{msg['label.assessment.type.'.concat(competenceAssessmentBean.competenceAssessmentData.type)]}"
                                            action="#{competenceAssessmentBean.initAskForAssessment()}"
                                            update="formAskForAssessment:askForAssessment:askForAssessmentPanel"
                                            oncomplete="$('#askAssessmentPeer').modal('show');">
                                    </p:commandLink>
                                </c:if>

                                <ui:fragment rendered="#{competenceAssessmentBean.isUserAssessorInCurrentContext() and competenceAssessmentBean.competenceAssessmentData.status eq 'PENDING'}">
                                    <a href="#" class="btn btn-green-stroke btn-sm" data-toggle="modal" data-target="#declinePendingAssessment">Withdraw</a>
                                </ui:fragment>
                            </h:panelGroup>
                        </div>
                    </div>
                </div>
            </div>
        </h:panelGroup>

		<assessment:assessmentCommentModal
				id="commentModal"
				toUpdate=":#{cc.clientId}:growlMain @(.assessmentActivityList.comp_#{competenceAssessmentBean.currentCompetenceAssessmentId}) @(.panelCompAssessment_#{competenceAssessmentBean.currentCompetenceAssessmentId})"
				messages="#{competenceAssessmentBean.currentAssessmentMessages}"
				bean="#{competenceAssessmentBean.currentAssessmentBean}"
				studentId="#{competenceAssessmentBean.competenceAssessmentData.studentId}"
				assessorId="#{competenceAssessmentBean.competenceAssessmentData.assessorId}"
				blindAssessmentMode="#{competenceAssessmentBean.currentBlindAssessmentMode}"
				readOnly="#{not competenceAssessmentBean.competenceAssessmentData.assessmentActive}"
				learningContext="#{competenceAssessmentBean.currentResType eq 'ACTIVITY'
					? util:addSubContext(cc.attrs.learningContext, 'name:competence|id:'.concat(activityAssessmentBean.activityAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.compAssessment.competenceAssessmentId).concat('|context:/name:activity|id:').concat(activityAssessmentBean.activityAssessmentData.activityId).concat('|context:/name:ACTIVITY_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.activityAssessmentId).concat('///'))
					: util:addSubContext(cc.attrs.learningContext, 'name:competence|id:'.concat(competenceAssessmentBean.competenceAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(competenceAssessmentBean.competenceAssessmentData.competenceAssessmentId).concat('/'))}"
		/>

		<c:if test="#{competenceAssessmentBean.competenceAssessmentData.assessmentActive and competenceAssessmentBean.isUserAssessedStudentInCurrentContext() and not competenceAssessmentBean.isUserAssessorInCurrentContext()}">
			<assessment:rubricAssessmentPreview
					id="rubricAssessmentPreview"
					grade="#{competenceAssessmentBean.currentGradeData}"
					resourceType="#{competenceAssessmentBean.currentResType}"
					resourceTitle="#{competenceAssessmentBean.currentResTitle}"
			/>

			<c:if test="#{competenceAssessmentBean.competenceAssessmentData.type ne 'SELF_ASSESSMENT'}">
				<h:form id="formAskForAssessment">
					<assessment:askForAssessment
							id="askForAssessment"
							bean="#{askForCompetenceAssessmentBean}"
							submitAssessmentRequestActionMethodName="submitAssessment"
							submitAssessmentRequestAction="#{competenceAssessmentBean.submitAssessment}"
							resource="COMPETENCE"
							resourceTitle="#{competenceAssessmentBean.competenceAssessmentData.title}"
							toUpdate=":#{cc.clientId}:growlMain @(.panelAssessorNotificationSelector)"
							learningContext="#{util:addSubContext(cc.attrs.learningContext, 'name:competence|id:'.concat(competenceAssessmentBean.competenceAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(competenceAssessmentBean.competenceAssessmentData.competenceAssessmentId).concat('/'))}"
							credentialId="#{cc.attrs.credentialId}"
					/>
				</h:form>
			</c:if>
		</c:if>

		<c:if test="#{competenceAssessmentBean.competenceAssessmentData.assessmentActive and competenceAssessmentBean.isUserAssessorInCurrentContext()}">
			<h:panelGroup id="gradePanelContainer">
				<ui:param name="compAssessmentLearningContext" value="#{util:addSubContext(cc.attrs.learningContext, 'name:competence|id:'.concat(competenceAssessmentBean.competenceAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(competenceAssessmentBean.competenceAssessmentData.competenceAssessmentId).concat('/'))}" />
				<ui:param name="activityAssessmentLearningContext" value="#{util:addSubContext(cc.attrs.learningContext, 'name:competence|id:'.concat(activityAssessmentBean.activityAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.compAssessment.competenceAssessmentId).concat('|context:/name:ACTIVITY|id:').concat(activityAssessmentBean.activityAssessmentData.activityId).concat('|context:/name:ACTIVITY_ASSESSMENT|id:').concat(activityAssessmentBean.activityAssessmentData.activityAssessmentId).concat('///'))}" />

				<assessment:gradePanel
						id="resourceGradePanel"
						gradeActionMethodName="updateAssessmentGrade"
						gradeAction="#{competenceAssessmentBean.updateAssessmentGrade}"
						assessmentId="#{competenceAssessmentBean.currentAssessmentId}"
						completed="#{competenceAssessmentBean.hasStudentCompletedCurrentResource()}"
						gradeData="#{competenceAssessmentBean.currentGradeData}"
						resource="#{competenceAssessmentBean.currentResType}"
						resourceTitle="#{competenceAssessmentBean.currentResTitle}"
						toUpdate=":#{cc.clientId}:growlMain @(.assessmentActivityList.comp_#{competenceAssessmentBean.currentCompetenceAssessmentId}) @(.panelCompAssessment_#{competenceAssessmentBean.currentCompetenceAssessmentId}) @(.panelAssessorNotificationSelector)"
						learningContext="#{competenceAssessmentBean.currentResType == null ? '' : (competenceAssessmentBean.currentResType == 'COMPETENCE' ? compAssessmentLearningContext : activityAssessmentLearningContext)}"
						gradePanelSidebarId="gradeSidebar"
				/>
			</h:panelGroup>

			<h:panelGroup id="approveModalContainer">
				<ui:param name="compAssessmentLearningContext" value="#{util:addSubContext(cc.attrs.learningContext, 'name:competence|id:'.concat(competenceAssessmentBean.competenceAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(competenceAssessmentBean.competenceAssessmentData.competenceAssessmentId).concat('/'))}" />
				<assessment:approveAssessment
						id="approveAssessment"
						blindAssessmentMode="#{competenceAssessmentBean.competenceAssessmentData.blindAssessmentMode}"
						approveAction="#{competenceAssessmentBean.approveCompetence()}"
						gradeData="#{competenceAssessmentBean.competenceAssessmentData.gradeData}"
						resourceTitle="#{competenceAssessmentBean.competenceAssessmentData.title}"
						student="#{competenceAssessmentBean.studentData}"
						resource="COMPETENCE"
						toUpdate=":#{cc.clientId}:panelCompetenceAssessmentPreview"
						learningContext="#{compAssessmentLearningContext}"
				/>
			</h:panelGroup>
		</c:if>

        <c:if test="#{competenceAssessmentBean.isUserAssessorInCurrentContext() and competenceAssessmentBean.competenceAssessmentData.status eq 'REQUESTED'}">
            <div class="modal fade" id="declineAssessment" tabindex="-1" role="dialog" aria-labelledby="declineAssessmentModalTitle">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&#215;</span></button>
                            <h2 class="modal-title" id="declineAssessmentModalTitle">Decline assessment request?</h2>
                        </div>
                        <div class="modal-body">
                            <p>Are you sure you want to decline this assessment request?</p>
                        </div>
                        <div class="modal-footer">
                            <p:commandLink
                                    styleClass="btn btn-red"
                                    process="@this"
                                    action="#{competenceAssessmentBean.declineAssessmentRequest()}"
                                    update=":#{cc.clientId}:growlMain">
                                Decline
                                <f:param name="page" value="#{facesContext.viewRoot.viewId}"/>
                                <f:param name="learningContext" value="#{util:addSubContext(cc.attrs.learningContext, 'name:COMPETENCE|id:'.concat(competenceAssessmentBean.competenceAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(competenceAssessmentBean.competenceAssessmentData.competenceAssessmentId).concat('/'))}"/>
                            </p:commandLink>
                            <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
        </c:if>

        <c:if test="#{competenceAssessmentBean.isUserAssessorInCurrentContext() and competenceAssessmentBean.competenceAssessmentData.status eq 'PENDING'}">
            <div class="modal fade" id="declinePendingAssessment" tabindex="-1" role="dialog" aria-labelledby="declinePendingAssessmentModalTitle">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&#215;</span></button>
                            <h2 class="modal-title" id="declinePendingAssessmentModalTitle">Withdraw from Assessment?</h2>
                        </div>
                        <div class="modal-body">
                            <p>Are you sure you want to withdraw from this assessment?</p>
                        </div>
                        <div class="modal-footer">
                            <p:commandLink
                                    styleClass="btn btn-red"
                                    process="@this"
                                    action="#{competenceAssessmentBean.withdrawFromAssessment()}"
                                    update=":#{cc.clientId}:growlMain">
                                Withdraw
                                <f:param name="page" value="#{facesContext.viewRoot.viewId}"/>
                                <f:param name="learningContext" value="#{util:addSubContext(cc.attrs.learningContext, 'name:COMPETENCE|id:'.concat(competenceAssessmentBean.competenceAssessmentData.competenceId).concat('|context:/name:COMPETENCE_ASSESSMENT|id:').concat(competenceAssessmentBean.competenceAssessmentData.competenceAssessmentId).concat('/'))}"/>
                            </p:commandLink>
                            <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
        </c:if>
	</composite:implementation>
</ui:component>