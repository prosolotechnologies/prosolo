<ui:component
		xmlns:ui="http://java.sun.com/jsf/facelets"
		xmlns:composite="http://java.sun.com/jsf/composite"
		xmlns:p="http://primefaces.org/ui"
		xmlns:c="http://java.sun.com/jsp/jstl/core">

	<composite:interface>
		<composite:attribute name="assessmentBean" required="true" />
		<composite:attribute name="assessment" required="true" />
		<composite:attribute name="gradeData" required="true" />
		<composite:attribute name="currentUserAssessor" required="true" type="java.lang.Boolean" />
		<composite:attribute name="currentUserAssessedStudent" required="true" type="java.lang.Boolean" />
		<composite:attribute name="userAllowedToSeeRubric" required="true" type="java.lang.Boolean" />
		<composite:attribute name="gradeLinkSelectorId" default=""/>
		<composite:attribute name="toUpdateGradePanel" default="" />
		<composite:attribute name="gradePanelSidebarId" default="" />
		<composite:attribute name="growlToUpdate" default="" />
		<composite:attribute name="toUpdateRubricPanelForStudent" />
		<composite:attribute name="role" default="USER" />
	</composite:interface>

	<composite:implementation>
		<c:if test="#{cc.attrs.role eq 'USER' and cc.attrs.currentUserAssessedStudent}">
			<p:commandLink rendered="#{cc.attrs.gradeData.gradingMode eq 'MANUAL_RUBRIC' and cc.attrs.userAllowedToSeeRubric}"
						   styleClass="grade"
						   action="#{cc.attrs.assessmentBean.prepareLearningResourceAssessmentForGrading(cc.attrs.assessment)}"
						   update="#{cc.attrs.toUpdateRubricPanelForStudent} #{cc.attrs.growlToUpdate}"
						   oncomplete="showPopupSidebar('#cbp-spmenu-s2');">
				<ui:fragment rendered="#{cc.attrs.gradeData.pointBasedGrading}">
					#{cc.attrs.gradeData.currentGrade != null and cc.attrs.gradeData.isAssessed() ? cc.attrs.gradeData.currentGrade : '-'}  /
					#{cc.attrs.gradeData.maxGrade}
				</ui:fragment>
			</p:commandLink>
			<ui:fragment rendered="#{not (cc.attrs.gradeData.gradingMode eq 'MANUAL_RUBRIC' and cc.attrs.userAllowedToSeeRubric)}">
				<span class="grade">
					<ui:fragment rendered="#{cc.attrs.gradeData.pointBasedGrading}">
						#{cc.attrs.gradeData.currentGrade != null and cc.attrs.gradeData.isAssessed() ? cc.attrs.gradeData.currentGrade : '-'}  /
						#{cc.attrs.gradeData.maxGrade}
					</ui:fragment>
				</span>
			</ui:fragment>
		</c:if>
		<c:if test="#{not (cc.attrs.role eq 'USER' and cc.attrs.currentUserAssessedStudent)}">
			<ui:fragment rendered="#{cc.attrs.currentUserAssessor}">
				<p:commandLink rendered="#{cc.attrs.gradeData.gradingMode ne 'NONGRADED'}"
							   styleClass="grade gradeModalLink_#{cc.attrs.gradeLinkSelectorId}"
							   action="#{cc.attrs.assessmentBean.prepareLearningResourceAssessmentForGrading(cc.attrs.assessment)}"
							   update="#{cc.attrs.toUpdateGradePanel}"
							   oncomplete="showPopupSidebar('##{cc.attrs.gradePanelSidebarId}');">
					<ui:fragment rendered="#{cc.attrs.gradeData.pointBasedGrading}">
						#{cc.attrs.gradeData.currentGrade != null and cc.attrs.gradeData.isAssessed() ? cc.attrs.gradeData.currentGrade : '-'}  /
						#{cc.attrs.gradeData.maxGrade}
					</ui:fragment>
				</p:commandLink>
				<ui:fragment rendered="#{cc.attrs.gradeData.gradingMode eq 'NONGRADED'}">
					<a href="javascript:void(0);" class="grade"
					   data-toggle="tooltip"
					   title="Nongraded resource">
					</a>
				</ui:fragment>
			</ui:fragment>

			<ui:fragment rendered="#{not cc.attrs.currentUserAssessor}">
				<a
						class="grade"
						disabled="disabled"
						data-toggle="tooltip"
						title="Only assessor can update the grade">
					<ui:fragment rendered="#{cc.attrs.gradeData.pointBasedGrading}">
						#{cc.attrs.gradeData != null and cc.attrs.gradeData.isAssessed() ? cc.attrs.gradeData.currentGrade : '-'}  /
						#{cc.attrs.gradeData.maxGrade}
					</ui:fragment>
				</a>
			</ui:fragment>
		</c:if>
	</composite:implementation>
</ui:component>