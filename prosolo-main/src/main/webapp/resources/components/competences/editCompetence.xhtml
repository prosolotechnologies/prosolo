<ui:component
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:composite="http://java.sun.com/jsf/composite"
	xmlns:p="http://primefaces.org/ui"
	xmlns:comp="http://java.sun.com/jsf/composite/components"
	xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
	xmlns:compcourses="http://java.sun.com/jsf/composite/components/courses"
	xmlns:dlgportfolio="http://java.sun.com/jsf/composite/components/dialogs/portfolio"
	xmlns:action="http://java.sun.com/jsf/composite/components/actions"
	xmlns:dlg="http://java.sun.com/jsf/composite/components/dialogs"
	xmlns:dlgmanager="http://java.sun.com/jsf/composite/components/dialogs/manager"
	xmlns:link="http://java.sun.com/jsf/composite/components/resourceLinks"
	xmlns:icon="http://java.sun.com/jsf/composite/components/resourceLinks/icons"
	xmlns:socialWall="http://java.sun.com/jsf/composite/components/socialWall">

	<composite:interface>
		<composite:attribute name="competenceBean" required="false" />
		<composite:attribute name="pageTitle" type="java.lang.String" default="Create new Competence" />
		<composite:attribute name="role" type="java.lang.String" default="USER" />
	</composite:interface>
	
	<composite:implementation>
		
		<h:outputScript library="javascript" name="prosolo.autosaveForm.js" />
	
		<utilcomp:messagesBundle var="msg" />
		
		<h:form id="newCompForm" class="newCompForm wideForm">
			<p:remoteCommand name="autosave"
				action="#{manageCompetenceBean.autosave()}" 
				update=":#{cc.clientId}:newCompForm:newCompFormGrowl"
				oncomplete="$(window).autosaveForm('removeAutosaveLoader');"
				async="true" />
				
			<script>
				$(function(){
					$(window).autosaveForm({
						elemSelector: '.autosaveEnabled',
						autosaveFunction: autosave,
						loaderPath: '#{request.contextPath}/resources/images/style/ajax-loader-black.gif',
   					});
				})
			</script>
		
			<h2 class="left	heading icon">
				<icon:competence styleClass="icon" />
				Edit competence
			</h2>
			<div class="clear"></div>
		
			<p:growl id="newCompFormGrowl" showDetail="true" />
			
			<div class="leftContainer">
				<table>
					<tr>
						<td class="col1"><label for="compName">Name:</label></td>
						<td>
							<h:inputText id="compName" class="compName autosaveEnabled"	value="#{manageCompetenceBean.compData.title}" />
						</td>
					</tr>
					<tr class="description">
						<td class="label col1">
							<label for="compDescription">Description:</label>
						</td>
						<td>
							<h:inputTextarea id="compDescription"
								class="autosaveEnabled"
								value="#{manageCompetenceBean.compData.description}"
								placeholder="#{msg['textarea.description']}" />
						</td>
					</tr>
					<tr class="validity col1">
						<td><label for="validityPeriod">Validity:</label></td>
						<td>
							<h:inputText id="validityPeriod"
								class="autosaveEnabled"
								value="#{manageCompetenceBean.compData.validity}" /> month(s)
						</td>
					</tr>
					<tr class="validity col1">
						<td><label for="duration">Duration:</label></td>
						<td>
							<h:inputText id="duration"
								class="autosaveEnabled"
								value="#{manageCompetenceBean.compData.duration}" /> day(s)
						</td>
					</tr>
					<tr>
						<td class="col1 keywords">Keywords:</td>
						<td><h:inputText class="tagsEditMode"
								value="#{manageCompetenceBean.compData.tagsString}" /></td>
					</tr>
				</table>
				<div class="clear"></div>
		
				<h:panelGroup layout="block" class="managerOptions marginTop10">
					<h:panelGroup layout="block" class="prerequisiteCompsContainer" id="prerequisiteCompsContainer">
						Prerequisite competences:
						<utilcomp:infotooltip position="PREREQUISITE_COMPETENCES" />
		
						<comp:searchCompetences value="prerequisiteComps"
							id="prerequisiteComps" 
							container=".prerequisiteCompsContainer"
							regionToRenderOnAction=":#{cc.clientId}:newCompForm:prerequisiteList :#{cc.clientId}:newCompForm:newCompFormGrowl"
							actionBean="#{manageCompetencePrereqBean}"
							toExcludeIds="#{manageCompetenceBean.competenceIds}" />
		
						<h:panelGroup layout="block" id="prerequisiteList" class="prerequisiteComps">
							<ul>
								<ui:repeat value="#{manageCompetenceBean.compData.prerequisites}"
									var="prerequisite" varStatus="iterator">
									<li>
										<link:competence 
											resource="#{prerequisite}"
											type="Competence"
											title="#{prerequisite.title}" 
											styleClass="title"
											context="newCompetence" /> 
											
										<p:commandLink
											styleClass="iconRemove right"
											actionListener="#{manageCompetenceBean.compData.removePrerequisite(prerequisite)}"
											action="#{manageCompetenceBean.autosave()}"
											update=":#{cc.clientId}:newCompForm:prerequisiteList :#{cc.clientId}:newCompForm:newCompFormGrowl" />
									</li>
								</ui:repeat>
							</ul>
						</h:panelGroup>
					</h:panelGroup>
					
					<div class="corequisiteCompsContainer">
						Corequisite competences:
						<utilcomp:infotooltip position="COREQUISITE_COMPETENCES" />
		
						<comp:searchCompetences value="corequisiteComps"
							id="corequisiteComps" 
							container=".corequisiteCompsContainer"
							regionToRenderOnAction=":#{cc.clientId}:newCompForm:corequisiteList :#{cc.clientId}:newCompForm:newCompFormGrowl"
							actionBean="#{manageCompetenceCoreqBean}"
							toExcludeIds="#{manageCompetenceBean.competenceIds}" />
		
						<h:panelGroup layout="block" id="corequisiteList"
							class="corequisiteComps">
							<ul>
								<ui:repeat value="#{manageCompetenceBean.compData.corequisites}"
									var="corequisite" varStatus="iterator">
									<li>
										<link:competence 
											resource="#{corequisite}"
											type="Competence"
											title="#{corequisite.title}" styleClass="title"
											context="newCompetence" />
										<p:commandLink
											styleClass="iconRemove"
											actionListener="#{manageCompetenceBean.compData.removeCorequisite(corequisite)}"
											action="#{manageCompetenceBean.autosave()}"
											update=":#{cc.clientId}:newCompForm:corequisiteList :#{cc.clientId}:newCompForm:newCompFormGrowl" />
									</li>
								</ui:repeat>
							</ul>
						</h:panelGroup>
					</div>
				</h:panelGroup>
				<div class="clear"></div>
			
				<div class="competenceActions actions left">
					<p:commandLink value="Save" id="save"
						styleClass="button green size30 left"
						action="#{manageCompetenceBean.updateCompetenceAction}" />
		
					<h:link 
						value="Cancel" styleClass="button gray size30 left"
						outcome="#{empty manageCompetenceBean.origin ? '/manage/competences' : manageCompetenceBean.origin}" />
		
					<p:defaultCommand target=":#{cc.clientId}:newCompForm:save" />
				</div>
			</div>
			
			<div class="compActivityPlan sideRecommendedAct right">
				<h2>Activity plan</h2>
				
				<p:commandLink styleClass="button blue size25 left createActivity"
					value="Create Activity"
					action="#{activityDialogBean.reset()}"
					onclick="openNewActivityDialog()"
				/>
					
				<span class="searchText">
					or search
				</span>
				
				<div class="sideSearch">
					<div class="activitySearchForm">
						<comp:searchActivities value="compActivities"
							container=".compActivityPlan"
							actionLinkName="Add"
							actionBean="#{manageCompetenceBean}"
							toExcludeIds="#{manageCompetenceBean.getActivitiesIds()}"
							regionToRenderOnAction=":#{cc.clientId}:newCompForm:activitiesRegion :#{cc.clientId}:newCompForm:newCompFormGrowl"
						/>
					</div>
				</div>
				<div class="clear"></div>
				
				<h:panelGroup layout="block" id="activitiesRegion" class="activities">
					<span class="options">Options: 
						<label>
							<h:selectBooleanCheckbox class="details" value="#{manageCompetenceBean.showActivityDetails}" />
							Show details
						</label>
					</span>
				
					<ul class="activitiesRegion">
						<ui:repeat value="#{manageCompetenceBean.compData.activities}" var="actData" varStats="iterator">
						
							<li id="#{actData.object.id}" class="actBlock actBlock#{iterator.index}">
								<p class="title">
									<span class="position">#{actData.position+1}.</span>
									<h:outputText class="bold titleText" value="#{actData.object.title}" />
	
									<span class="moveIcon"></span>
									
									<p:commandLink styleClass="editIcon"
										action="#{activityDialogBean.initActivityEdit(actData)}"
										onclick="openNewActivityDialog()"
										update=":#{cc.clientId}:newActivity:newActivityForm" />
									
									<p:commandLink styleClass="closeIcon" 
										action="#{manageCompetenceBean.removeActivity(actData)}"
										update=":#{cc.clientId}:newCompForm:activitiesRegion :#{cc.clientId}:newCompForm:newCompFormGrowl"
									 />
								</p>
								
								<span class="collapsible">
									<p class="description">
										<h:outputText value="#{actData.object.description}" escape="false" />
									</p>

									<socialWall:attachmentPreview 
										attachmentPreview="#{actData.attachmentPreview}"
										styleClass="#{manageCompetenceBean.showActivityDetails ? '' : 'hidden'}"
										uniqueParentSelector="#newCompForm .actBlock#{iterator.index}"
										toRender="#{actData.attachmentPreview.contentType != 'UPLOAD_ASSIGNMENT'}" />
										
									<socialWall:uploadAssignment
										disabled="true"
										activityData="#{actData}"
										containerClass=".activitiesRegion"
										toRender="#{actData.attachmentPreview.contentType == 'UPLOAD_ASSIGNMENT'}"
										mode="MANAGER"
										width="405"
									 />
								</span>
							</li>
							
						</ui:repeat>
					</ul>
					
					<script>
						$(".activitiesRegion").sortable({
							start: function(event, ui) {
						        ui.item.data('start_pos', ui.item.index());
						    },
						    stop: function(event, ui) {
						        var start_pos = ui.item.data('start_pos');
						        var end_pos = ui.item.index();
						        if (start_pos != end_pos) {
						        	$('.newCompForm .compActivityPlan input.updateControl').val(start_pos+','+end_pos);
									$('.newCompForm .compActivityPlan .updatePositionListener').trigger('click');
						        }
						    }
						});
						
						$('.newCompForm .compActivityPlan .activities .title .closeIcon').on('click', function(e) {
							e.stopPropagation();
						}).hover(
							function(e){
								e.stopPropagation();
							},
							function(e){
								e.stopPropagation();
							}
						);
						
						$('.newCompForm .compActivityPlan .activities .titleText').on('click', function() {
							var details = $(this).parent().next('.collapsible');
							
							if (details.css('display') == 'none') {
								details.slideDown();
							} else {
								details.slideUp();
							}
						}).hover(
							function(){
								$(this).next('.moveIcon').addClass('hovered');
							},
							function(){
								$(this).next('.moveIcon').removeClass('hovered');
							}
						);
						
						$('.newCompForm .compActivityPlan .activities .details').on('click', function() {
						    if ($(this).is(':checked')) {
						    	$('.newCompForm .compActivityPlan .activities .collapsible').slideDown();
						    } else {
						    	$('.newCompForm .compActivityPlan .activities .collapsible').slideUp();
						    }
						});
						
						$('.newCompForm .compActivityPlan .activities .actBlock .richContent .atcUrl').shortenedText({showChar: 50, mode: 'static'});
					</script>
					
					<span class="hidden">
						<h:inputText class="updateControl" value="#{manageCompetenceBean.positionUpdateStatus}" />
						<p:commandLink styleClass="updatePositionListener"
							action="#{manageCompetenceBean.updatePosition()}"
							update=":#{cc.clientId}:newCompForm:activitiesRegion :#{cc.clientId}:newCompForm:newCompFormGrowl" />
					</span>
				</h:panelGroup>
			</div>
			<div class="clear"></div>
			
			<script>
			$(function() {
				$('.newCompForm tr.description textarea').autosize();
				$('.newCompForm .compName').focus();
				$('.newCompForm .tagsEditMode').tags({
					afterUpdateCallback: function(elem) {
						$(window).autosaveForm('addLoaderAndAutosave', elem);
					}
				});
			});
			</script>
			
			<utilcomp:tooltip target=".hasTooltip[title]" />
		</h:form>
		
		<dlgmanager:newActivity id="newActivity"
			activityData="#{activityDialogBean.activityFormData}"
			regionToUpdate=":#{cc.clientId}:newCompForm:activitiesRegion :#{cc.clientId}:newCompForm:newCompFormGrowl"
		 />
	</composite:implementation>
</ui:component>