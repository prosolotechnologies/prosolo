<ui:component
		xmlns:h="http://java.sun.com/jsf/html"
		xmlns:ui="http://java.sun.com/jsf/facelets"
		xmlns:composite="http://java.sun.com/jsf/composite"
		xmlns:c="http://java.sun.com/jsp/jstl/core"
		xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
		xmlns:courses="http://java.sun.com/jsf/composite/components/courses"
		xmlns:post="http://java.sun.com/jsf/composite/components/post"
		xmlns:p="http://primefaces.org/ui"
		xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
		xmlns:f="http://java.sun.com/jsf/core"
		xmlns:evidence="http://java.sun.com/jsf/composite/components/evidence"
		xmlns:assessment="http://java.sun.com/jsf/composite/components/assessments">

	<composite:interface>
		<composite:attribute name="bean" required="true"/>
		<composite:attribute name="role" type="java.lang.String" default="USER"/>
		<composite:attribute name="learningContext" default=""/>
		<composite:attribute name="readOnly" required="true" />
		<composite:attribute name="growlToUpdate" default="" />
		<composite:attribute name="startedLearning" default="false" />
		<composite:attribute name="toUpdateOnEvidencePost" default="" />
	</composite:interface>
	
	<composite:implementation>
		<link rel="stylesheet" type="text/css" media="all" href="#{request.contextPath}/resources/css2/bootstrap-tagsinput.css" />
		<script src="#{request.contextPath}/resources/javascript2/bootstrap-tagsinput.min.js"></script>
		<script src="#{request.contextPath}/resources/javascript2/tinymce/tinymce.min.js"></script>
		<script src="#{request.contextPath}/resources/javascript2/prosolo.tinymce.js"></script>
		<script src="#{request.contextPath}/resources/javascript2/search.js"></script>

		<div class="container">
			<div class="row">
				<div class="col-md-8">
					<h2>About #{msg['label.competence']}</h2>
					<p><h:outputText escape="false" value="#{cc.attrs.bean.competenceData.description}"/></p>
					<c:if test="#{cc.attrs.bean.competenceData.learningPathType eq 'ACTIVITY'}">
						<div class="whiteBox activitiesList">
							<courses:activityList
										activities="#{cc.attrs.bean.competenceData.activities}"
										encodedCredentialId="#{param['credId']}"
										encodedCompetenceId="#{param['compId']}"
										bean="#{cc.attrs.bean}"
										isEdit="false"
										showMarkedIfCompleted="true"
										readOnly="#{cc.attrs.readOnly}"
							/>
					   </div>
					</c:if>

					<ui:fragment rendered="#{cc.attrs.startedLearning and cc.attrs.bean.competenceData.learningPathType eq 'EVIDENCE'}">
						<h2>Submit Evidence</h2>
						<evidence:submitEvidence
								id="submitEvidence"
								bean="#{cc.attrs.bean}"
								addEvidenceToCompetence="true"
								update="#{cc.attrs.growlToUpdate} :#{cc.clientId}:panelEvidences #{cc.attrs.toUpdateOnEvidencePost}"
								learningContext="#{cc.attrs.learningContext}"
								submitButtonText="Submit"
						/>

						<h2>Added Evidence</h2>
						<h:panelGroup id="panelEvidences">
							<h:panelGroup id="panelEvidenceSummary">
								<h:panelGroup layout="block" rendered="#{not empty cc.attrs.bean.competenceData.evidences}" styleClass="evidenceSummary">
									<div class="text">
										<p><i>
											<ui:fragment rendered="#{empty cc.attrs.bean.competenceData.evidenceSummary}">
												Provide a summary of evidence that will be available to your assessors.
											</ui:fragment>
											<ui:fragment rendered="#{not empty cc.attrs.bean.competenceData.evidenceSummary}">
												#{cc.attrs.bean.competenceData.evidenceSummary}
											</ui:fragment>
										</i></p>
									</div>
									<a href="#" class="btn btn-green-stroke btn-sm" data-toggle="modal" data-target="#evidenceSummaryModal">Edit</a>
								</h:panelGroup>
							</h:panelGroup>
							<ui:fragment rendered="#{empty cc.attrs.bean.competenceData.evidences}">
								<div class="noContentMessage">
									<p>
										No evidence.
									</p>
								</div>
							</ui:fragment>

							<ui:repeat value="#{cc.attrs.bean.competenceData.evidences}" var="ev">
								<div class="whiteBox evidenceBox">
									<div class="evidenceTop">
										<div class="evidenceTopLeft #{ev.type eq 'TEXT' ? 'evidenceText' : styleUtilBean.getEvidenceFileTypeIcon(ev.url)}">
											<div class="icon iconType"></div>
											<h3>
												<h:link outcome="/evidence">
													#{ev.title}
													<f:param name="id" value="#{util:encodeId(ev.id)}"/>
												</h:link>
											</h3>
										</div>
										<div class="evidenceTopRight">
											<div class="dropdown optMoreMenu">
												<a data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">options menu</a>
												<ul class="dropdown-menu bullet pull-center" aria-labelledby="dropdownMenu2">
													<li>
														<p:commandLink
															pt:data-toggle="modal"
															action="#{cc.attrs.bean.setEvidenceToRemove(ev)}"
															oncomplete="$('#deleteEvidence').modal('show');">
															Remove Evidence
														</p:commandLink>
													</li>
												</ul>
											</div>
											<ui:fragment rendered="#{ev.type ne 'TEXT'}">
												<a href="#{ev.url}" target="_blank" class="btn btn-green btn-sm">#{ev.type eq 'LINK' ? 'Open' : 'Download'}</a>
											</ui:fragment>
										</div>
									</div>

									<p class="textLimit4">
										<h:outputText escape="false" value="#{ev.text}"/>
									</p>

									<table>
										<tr>
											<td class="col01">In #{msg['label.competence.plural']}:</td>
											<td>
                                                <ui:fragment rendered="#{empty ev.competences}">
                                                    <span class="lightText">no #{msg['label.competence.plural'].toLowerCase()}</span>
                                                </ui:fragment>
                                                <ui:repeat value="#{ev.competences}" var="c" varStatus="status">
                                                    <p class="textLimit4">
                                                        <h:link outcome="/competence"
                                                                value="#{c.title}">
                                                            <f:param name="compId" value="#{util:encodeId(c.id)}"/>
                                                        </h:link>
                                                        - #{c.description}
                                                        <ui:fragment rendered="#{status.index + 1 ne ev.competences.size()}"><br/></ui:fragment>
                                                    </p>
                                                </ui:repeat>
											</td>
										</tr>
										<tr>
											<td class="col01">Keywords:</td>
											<td>
												<ul class="tags">
													<ui:fragment rendered="#{empty ev.tags}">
														<span class="lightText">no keywords</span>
													</ui:fragment>
													<ui:repeat value="#{ev.tags}" var="kw">
														<li>#{kw}</li>
													</ui:repeat>
												</ul>
											</td>
										</tr>
										<tr>
											<td class="col01">Created:</td>
											<td>
												<utilcomp:convertTimeOutput
														millis="#{ev.dateCreated}"
														format="MMM DD, YYYY" />
											</td>
										</tr>
									</table>
								</div>
							</ui:repeat>
						</h:panelGroup>
					</ui:fragment>

					<c:if test="#{cc.attrs.role ne 'ADMIN'}">
					   <post:comments
							id="comments"
							comments="#{cc.attrs.bean.commentsData}"
							commentsContainerDivId="commentsContainerDiv"
							growlToUpdate="#{cc.attrs.growlToUpdate}"
							learningContext="#{cc.attrs.learningContext}"
							readOnly="#{cc.attrs.readOnly}"
							rendered="#{cc.attrs.startedLearning or cc.attrs.role eq 'MANAGER'}"
					   />
				   </c:if>
				</div>

				<div class="col-md-4">
					<h:panelGroup layout="block" styleClass="sidebarBlock" rendered="#{cc.attrs.bean.competenceData.learningStageEnabled}">
						<div class="whiteBox sidebarStage">
							<h2>Stage #{cc.attrs.bean.competenceData.learningStage.order}: #{cc.attrs.bean.competenceData.learningStage.title}</h2>
						</div>
					</h:panelGroup>
					<ui:fragment rendered="#{not empty cc.attrs.bean.competenceData.tags}">
						<div class="sidebarBlock">
							<h2>Keywords</h2>
							<ul class="tags">
								<ui:repeat var="tag" value="#{cc.attrs.bean.competenceData.tags}">
									<li>#{tag.title}</li>
								</ui:repeat>
							</ul>
						</div>
					</ui:fragment>

					<div class="sidebarBlock">
						<h2>Created by</h2>
						<div class="user32">
							<a href="#">
								<utilcomp:userAvatar
									avatar="#{cc.attrs.bean.competenceData.creator.avatar}"
									fullName="#{cc.attrs.bean.competenceData.creator.name}" />
							</a>
							<h3><a href="#">#{cc.attrs.bean.competenceData.creator.name}</a></h3>
						</div>
					</div>
					<c:if test="#{cc.attrs.role eq 'USER' and cc.attrs.startedLearning and (cc.attrs.bean.decodedCredId gt 0 or cc.attrs.bean.competenceData.peerAssessmentEnabled or cc.attrs.bean.competenceData.selfAssessmentEnabled)}">
						<div class="sidebarBlock">
							<div class="assessmentsSidebarHead">
								<h2>Assessments</h2>
								<h:link value="View All"
										outcome="/competence-assessments-root">
									<f:param name="credId" value="#{param.credId}" />
									<f:param name="compId" value="#{param.compId}" />
								</h:link>
							</div>
							<ul class="assessmentsSidebar">
								<c:if test="#{cc.attrs.bean.competenceData.selfAssessmentEnabled}">
									<li>
										<h3>#{msg['label.assessment.type.SELF_ASSESSMENT']}</h3>
										<div class="right">
											<h:link outcome="/competence-self-assessment" value="Write">
												<f:param name="compId" value="#{param.compId}"/>
												<f:param name="credId" value="#{param.credId}" disable="#{empty param.credId}" />
											</h:link>
											<div class="assessmentsStar #{styleUtilBean.getGradeStarClass(cc.attrs.bean.competenceData.getGradeSummary('SELF_ASSESSMENT'))}">
												<div class="star #{styleUtilBean.getEmptyStarClass(cc.attrs.bean.competenceData.getGradeSummary('SELF_ASSESSMENT'))}"></div>
											</div>
										</div>
									</li>
								</c:if>
								<c:if test="#{cc.attrs.bean.competenceData.peerAssessmentEnabled}">
									<li>
										<h3>#{msg['label.assessment.type.PEER_ASSESSMENT']}</h3>
										<div class="right">
											<p:commandLink
													pt:data-toggle="modal"
													value="Ask"
													action="#{cc.attrs.bean.initAskForAssessment('PEER_ASSESSMENT')}"
													update="formAskForAssessment:askForAssessment:askForAssessmentPanel"
													oncomplete="$('#askAssessment').modal('show');">
											</p:commandLink>
											<div class="assessmentsStar #{styleUtilBean.getGradeStarClass(cc.attrs.bean.competenceData.getGradeSummary('PEER_ASSESSMENT'))}">
												<div class="star #{styleUtilBean.getEmptyStarClass(cc.attrs.bean.competenceData.getGradeSummary('PEER_ASSESSMENT'))}"></div>
											</div>
										</div>
									</li>
								</c:if>
								<li>
									<h3>#{msg['label.assessment.type.INSTRUCTOR_ASSESSMENT']}</h3>
									<div class="right">
										<p:commandLink
												pt:data-toggle="modal"
												value="Ask"
												action="#{cc.attrs.bean.initAskForAssessment('INSTRUCTOR_ASSESSMENT')}"
												update="formAskForAssessment:askForAssessment:askForAssessmentPanel"
												oncomplete="$('#askAssessment').modal('show');">
										</p:commandLink>
										<div class="assessmentsStar #{styleUtilBean.getGradeStarClass(cc.attrs.bean.competenceData.getGradeSummary('INSTRUCTOR_ASSESSMENT'))}">
											<div class="star #{styleUtilBean.getEmptyStarClass(cc.attrs.bean.competenceData.getGradeSummary('INSTRUCTOR_ASSESSMENT'))}"></div>
										</div>
									</div>
								</li>
							</ul>
							<h:form id="formAskForAssessment">
								<assessment:askForAssessment
										id="askForAssessment"
										bean="#{askForCompetenceAssessmentBean}"
										submitAssessmentRequestActionMethodName="submitAssessment"
										submitAssessmentRequestAction="#{askForCompetenceAssessmentBean.submitAssessment}"
										resource="COMPETENCE"
										resourceTitle="#{cc.attrs.bean.competenceData.title}"
										toUpdate="#{cc.attrs.growlToUpdate}"
										learningContext="#{cc.attrs.learningContext}"
								/>
							</h:form>
						</div>
					</c:if>
				</div>
			</div>

		</div>

		<ui:fragment rendered="#{cc.attrs.startedLearning and cc.attrs.bean.competenceData.learningPathType eq 'EVIDENCE'}">
			<div class="modal fade" id="deleteEvidence" tabindex="-1" role="dialog" aria-labelledby="deleteEvid">
				<div class="modal-dialog" role="document">
					<div class="modal-content">
						<div class="modal-header">
							<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&#215;</span></button>
							<h2 class="modal-title" id="deleteEvid">Remove Evidence?</h2>
						</div>
						<div class="modal-body">
							<p>Are you sure you want to remove the evidence from the #{msg['label.competence'].toLowerCase()}?<br/><br/>
								<small>Note: Evidence won't be deleted from the Evidence Repository.</small></p>
						</div>
						<div class="modal-footer">
							<p:commandLink styleClass="btn btn-red"
							   	process="@this"
								action="#{cc.attrs.bean.removeEvidenceFromCompetence()}"
								update="#{cc.attrs.growlToUpdate} :#{cc.clientId}:panelEvidences :#{cc.clientId}:submitEvidence:panelExistingEvidence #{cc.attrs.toUpdateOnEvidencePost}"
								oncomplete="$('#deleteEvidence').modal('hide')">
								Remove
							</p:commandLink>
							<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
						</div>
					</div>
				</div>
			</div>
		</ui:fragment>

		<ui:fragment rendered="#{cc.attrs.startedLearning and cc.attrs.bean.competenceData.learningPathType eq 'EVIDENCE'}">
			<h:form id="formEvidenceSummary">
				<div class="modal fade" id="evidenceSummaryModal" tabindex="-1" role="dialog" aria-labelledby="evidenceSummary">
					<div class="modal-dialog" role="document">
						<h:panelGroup layout="block" id="panelEvidenceSummaryModal" styleClass="modal-content">
							<div class="modal-header alignLeft">
								<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&#215;</span></button>
								<h2 class="modal-title" id="evidenceSummary">Evidence Summary</h2>
							</div>
							<div class="modal-body alignLeft">
								<h:inputTextarea id="textareaEvidenceSummary"
										label="Evidence summary"
										placeholder="Type a summary..."
										value="#{cc.attrs.bean.competenceData.evidenceSummary}">
									<f:validateLength maximum="9000"/>
								</h:inputTextarea>
								<small class="redText bottom30 displayBlock"><h:message id="textareaEvidenceSummaryValidationMsg" for="textareaEvidenceSummary"></h:message></small>
							</div>
							<div class="modal-footer alignLeft">
								<p:commandLink styleClass="btn btn-green" id="saveEvidenceSummaryLink"
											   action="#{cc.attrs.bean.saveEvidenceSummary()}"
											   update="#{cc.attrs.growlToUpdate} textareaEvidenceSummary :#{cc.clientId}:panelEvidenceSummary textareaEvidenceSummaryValidationMsg"
											   oncomplete="if (args &amp;&amp; !args.validationFailed) { $('#evidenceSummaryModal').modal('hide') }">
									<f:param name="page" value="#{facesContext.viewRoot.viewId}"/>
									<f:param name="learningContext" value="#{cc.attrs.learningContext}"/>
									Save Changes
								</p:commandLink>
								<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
								<p:defaultCommand target="saveEvidenceSummaryLink" />
							</div>
						</h:panelGroup>
					</div>
				</div>
				<script>
                    $('#evidenceSummaryModal').on('shown.bs.modal', function() {
                        $('#' + escapeColons('#{cc.clientId}:formEvidenceSummary:textareaEvidenceSummary')).focus();
                    });
				</script>
			</h:form>
		</ui:fragment>

		<c:if test="#{cc.attrs.role ne 'ADMIN' and not empty param['comment']}">
			<script>
				scrollTo('comment_' + #{util:decodeId(param['comment'])});
			</script>
		</c:if>
	</composite:implementation>
</ui:component>