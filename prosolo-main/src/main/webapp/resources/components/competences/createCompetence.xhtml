<ui:component
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:composite="http://java.sun.com/jsf/composite"
	xmlns:p="http://primefaces.org/ui"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util"
	xmlns:util="http://www.prosolo.com/util"
	xmlns:courses="http://java.sun.com/jsf/composite/components/courses"
	xmlns:dialogs="http://java.sun.com/jsf/composite/components/dialogs"
	xmlns:compDialogs="http://java.sun.com/jsf/composite/components/dialogs/competences"
	xmlns:jsf="http://xmlns.jcp.org/jsf">

	<composite:interface>
		<composite:attribute name="role" type="java.lang.String" default="USER"/>
		<composite:attribute name="toUpdate" default=""></composite:attribute>
		<composite:attribute name="learningContext" default=""/>
		<composite:attribute name="service" default="" />
	</composite:interface>

	<composite:implementation>
		<utilcomp:messagesBundle var="msg" />

		<h:outputStylesheet name="bootstrap-datetimepicker.css" library="css2"/>
		<link rel="stylesheet" type="text/css" media="all" href="#{request.contextPath}/resources/css2/bootstrap-tagsinput.css" />
		<script src="#{request.contextPath}/resources/javascript2/bootstrap-tagsinput.min.js"></script>
		<script src="#{request.contextPath}/resources/javascript2/moment.min.js"></script>
		<script src="#{request.contextPath}/resources/javascript2/bootstrap-datetimepicker.min.js"></script>
		<script src="#{request.contextPath}/resources/javascript2/createCompetence.js"></script>
		<script src="#{request.contextPath}/resources/javascript2/tinymce/tinymce.min.js"></script>
	    <script src="#{request.contextPath}/resources/javascript2/prosolo.tinymce.js"></script>

	    <div class="whiteBar">

	    </div>

	    <div class="container">
	    	<ui:fragment rendered="#{not empty param['credId']}">
	    		<ol class="breadcrumb">
		            <li>
		            	<h:link value="#{msg['label.credential.plural']}" outcome="credentialLibrary"/>
		            </li>
		            <li>
		            	<h:link
		            		value="#{competenceEditBean.credTitle}"
		            		outcome="create-credential">
		            		<f:param name="id" value="#{param['credId']}"></f:param>
		            	</h:link>
		            </li>
		            <ui:fragment rendered="#{!competenceEditBean.isCreateUseCase()}">
		            	<li class="active">#{competenceEditBean.competenceData.title}</li>
		            </ui:fragment>
		            <ui:fragment rendered="#{competenceEditBean.isCreateUseCase()}">
		            	<li class="active">New #{msg['label.competence']}</li>
		            </ui:fragment>
		        </ol>
	    	</ui:fragment>
	        <ui:fragment rendered="#{empty param['credId']}">
	    		<ol class="breadcrumb">
	    			<li>
		            	<h:link value="#{msg['label.competence.plural']}" outcome="competenceLibrary"/>
		            </li> 
	    			<ui:fragment rendered="#{!competenceEditBean.isCreateUseCase()}">
		            	<li class="active">#{competenceEditBean.competenceData.title}</li>
		            </ui:fragment>
		            <ui:fragment rendered="#{competenceEditBean.isCreateUseCase()}">
		            	<li class="active">New #{msg['label.competence']}</li>
		            </ui:fragment>
		        </ol>
	    	</ui:fragment>
	    </div>

	    <div id="#{cc.clientId}">
		    <script>
				containerId = '#{cc.clientId}';
				var isDraft = '#{competenceEditBean.draft}';

				function shouldOpenCanNotPublishModal(){
                    var lPath = $("#createCompetence\\:formMain\\:pathChooser").val();
                    if (lPath !== 'ACTIVITY') {
                        return false;
					}
					var activityListSize = $('.activityItem').length - 1;
					var selectStatus = $("#createCompetence\\:formMain\\:selectStatus").val();

					 if(activityListSize &lt;= 0 &amp;&amp; selectStatus == "PUBLISHED"){
						var desc = $("#createCompetence\\:formMain\\:description");
						var title = $("#createCompetence\\:formMain\\:inputTitle");
						if(desc.val() &amp;&amp; title.val()){
							return true;
						}
					}
					return false;
				}

				function shouldOpenPublishModal(){
					var activityListSize = $('.activityItem').length - 1;
					var selectStatus = $("#createCompetence\\:formMain\\:selectStatus").val();

				 	if(isDraft &amp;&amp; activityListSize > 0 &amp;&amp; selectStatus == "PUBLISHED"){
						var desc = $("#createCompetence\\:formMain\\:description");
						var title = $("#createCompetence\\:formMain\\:inputTitle");
						if(desc.val() &amp;&amp; title.val()){
							return true;
						}
					}
					return false;
				}
			</script>

			<h:form id="formMain">
				<p:growl id="growlMain" showDetail="true" globalOnly="true"></p:growl>
				<h:inputHidden id="hiddenType" value="#{competenceEditBean.competenceData.typeString}" />

			    <div class="container">
			        <div class="row">
			            <div class="col-md-8">
			            	<h:panelGroup layout="block" rendered="#{competenceEditBean.limitedEdit}" styleClass="alert alert-warning" role="alert">
								Since the #{msg['label.competence'].toLowerCase()} was published, only small edits are allowed.
								These include changing the title, description, and keywords.
			            	</h:panelGroup>
			                <div class="whiteBox">
			                    <ul class="nav nav-tabs pageSubmenu" role="tablist">
			                        <li role="presentation" class="#{param.tab ne 'paths' ? 'active' : ''}"><a href="#info" aria-controls="info" role="tab" data-toggle="tab" onclick="setQueryParam('tab','info')">#{msg['label.competence']} Info</a></li>
			                        <li role="presentation" class="#{param.tab eq 'paths' ? 'active' : ''}"><a href="#paths" aria-controls="paths" role="tab" data-toggle="tab" onclick="setQueryParam('tab','paths')">Learning Paths</a></li>
			                    </ul>
			                </div>
			                <div class="tab-content">
			                    <div role="tabpanel" class="tab-pane fade #{param.tab ne 'paths' ? 'active in' : '' }" id="info">
			                        <div class="whiteBox">
			                            <h2>#{msg['label.competence']} Info</h2>
			                            <div class="formWrapper">
			                                <h:panelGroup layout="block" rendered="#{not competenceEditBean.createUseCase or competenceEditBean.decodedCredId gt 0}" styleClass="formLine">
			                                    <label>Parent #{msg['label.credential']}(s)</label>
			                                    <div class="formLineRight">
			                                        <ul class="addedItems">
			                                        	<ui:repeat var="cred" value="#{competenceEditBean.competenceData.credentialsWithIncludedCompetence}">
			                                        		<li>
			                                        			<h:link value="#{cred.title}"
			                                        				outcome="credential">
			                                        				<f:param name="id" value="#{util:encodeId(cred.id)}" />
			                                        			</h:link>
				                                            </li>
			                                        	</ui:repeat>
			                                        </ul>
			                                    </div>
											</h:panelGroup>
			                                <div class="formLine">
			                                    <label>Title</label>
			                                    <div class="formLineRight">
			                                    	<h:inputText
			                                    		id="inputTitle"
			                                    		styleClass="pasteable"
			                                    		value="#{competenceEditBean.competenceData.title}"
			                                    		required="true"
														requiredMessage="Title is required"
														autocomplete="off"
														autofocus="true"
													/>
													<small class="redText"><h:message for="inputTitle"></h:message></small>
			                                    </div>
			                                </div>
			                                <div class="formLine">
			                                    <label>About #{msg['label.competence'].toLowerCase()}</label>
			                                    <div class="formLineRight">
			                                        <h:inputTextarea
			                                        	id="description"
			                                        	styleClass="pasteable"
			                                        	value="#{competenceEditBean.competenceData.description}"
			                                        	required="true"
			                                        	requiredMessage="Description is required"/>

													<small class="redText"><h:message for="description"></h:message></small>
			                                        <script>
			                                    		initTinyMCE('#createCompetence\\:formMain\\:description');
			                                    	</script>
			                                    </div>
			                                </div>
			                                <div class="formLine">
			                                    <label>Keywords</label>
			                                    <div class="formLineRight">
			                                    	<h:inputText styleClass="tagsInputCompTag"
			                                    		id="inputKeywords"
					                                	value="#{competenceEditBean.competenceData.tagsString}"
					                                	pt:placeholder="Type and press 'Enter'"
					                                	pt:data-role="tagsinput"
														autocomplete="off">
				                                	</h:inputText>
			                                    </div>
			                                </div>
			                                <script>$('.tagsInputCompTag').tagsinput();</script>
			                                <ui:remove>
												<div class="formLine">
													<label>Other</label>
													<div class="formLineRight">
														<div class="checkbox checkLine">
															<h:selectBooleanCheckbox disabled="#{competenceEditBean.limitedEdit}"
																id="selectAllowStudentsToAddActivities"
																value="#{competenceEditBean.competenceData.studentAllowedToAddActivities}">
															</h:selectBooleanCheckbox>

															<h:outputLabel for="selectAllowStudentsToAddActivities">
																Allow students to add activities
															</h:outputLabel>
														</div>
													</div>
												</div>
											</ui:remove>
			                            </div>
			                        </div>
			                    </div>
			                    <div role="tabpanel" class="tab-pane fade #{param.tab eq 'paths' ? 'active in' : ''}" id="paths">
									<div class="whiteBox pathOptions">
										<p>Choose which learning path you want students to take in order to master this #{msg['label.competence'].toLowerCase()}</p>
										<div class="radioGroup">
											<ui:repeat value="#{competenceEditBean.learningPaths}" var="path">
												<div class="radio">
													<input type="radio" jsf:id="pathRadio"
														   name="#{hiddenPathRadio.clientId}"
														   value="#{path.learningPathType}" jsf:disabled="#{competenceEditBean.limitedEdit}"
														   jsf:checked="#{competenceEditBean.competenceData.learningPathType eq path.learningPathType ? true : false}"
														   onchange="changeLearningPath()"
													/>
													<h:outputLabel for="pathRadio">#{path.description}</h:outputLabel>
												</div>
											</ui:repeat>
											<h:inputHidden id="pathChooser" binding="#{hiddenPathRadio}" value="#{competenceEditBean.competenceData.learningPathType}"/>
										</div>
										<p:remoteCommand name="changeLearningPath"
														 process="pathChooser"
														 update=":#{cc.clientId}:formMain:panelActivities pathChooser"/>
									</div>

									<h:panelGroup layout="block" id="panelActivities" styleClass="whiteBox activitiesList">
										<ui:fragment rendered="#{competenceEditBean.competenceData.learningPathType eq 'ACTIVITY'}">
											<courses:activityList
												id="activityList"
												activities="#{competenceEditBean.competenceData.activities}"
												bean="#{competenceEditBean}"
												isEdit="true"
												showMarkedIfCompleted="false"
												encodedCompetenceId="#{param['id']}"
												encodedCredentialId="#{param['credId']}"
												toUpdate=""
												mainForm=":#{cc.clientId}:formMain"/>
										</ui:fragment>

									</h:panelGroup>
			                    </div>
			                </div>
			            </div>
			            <div class="col-md-4">
			            	<div id="noteDraft" class="alert alert-warning alert-dismissible" role="alert" style="#{competenceEditBean.competenceData.published ? 'display:none' : ''}">
			                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
								#{msg['label.competence']} is now <strong>#{competenceEditBean.competenceData.status}</strong>. In order for changes to be available to others, change status to <strong>Published</strong>.
			                </div>

			                <div id="noteDraft" class="alert alert-warning alert-dismissible" role="alert" style="#{competenceEditBean.competenceData.canUnpublish ? 'display:none' : ''}">
			                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
			                    You are not allowed to unpublish this #{msg['label.competence'].toLowerCase()} as it is a part of one or more active #{msg['label.credential'].toLowerCase()} #{msg['label.delivery.plural'].toLowerCase()}. Only when all #{msg['label.delivery.plural'].toLowerCase()} of a #{msg['label.credential'].toLowerCase()} with this #{msg['label.competence'].toLowerCase()} end, a #{msg['label.competence'].toLowerCase()} can be unpublished.
			                </div>

			                <div id="#{cc.clientId}" class="whiteBox publishBox">
								<h2>Publish</h2>

								<ui:fragment rendered="#{competenceEditBean.competenceData.competenceId gt 0}">
									<h:link
											target="_blank"
											outcome="competence"
											value="Preview"
											class="linkPreview">
										<f:param name="compId" value="#{util:encodeId(competenceEditBean.competenceData.competenceId)}" />
									</h:link>
								</ui:fragment>
								<ui:fragment rendered="#{not (competenceEditBean.competenceData.competenceId gt 0)}">
									<a href="javascript:void(0);"
									   class="linkPreview disabled"
									   data-toggle="tooltip"
									   title="You need to save the #{msg['label.competence'].toLowerCase()} in order to preview latest changes">
										Preview
									</a>
								</ui:fragment>

								<div class="clear"></div>

								<label>Status:</label>

            					<ui:fragment>
									<h:selectOneMenu disabled="#{not competenceEditBean.competenceData.canUnpublish}"
										id="selectStatus" styleClass="selectpicker"
										value="#{competenceEditBean.competenceData.status}"
										onchange="onStatusChange();">
										<f:selectItems value="#{competenceEditBean.compStatusArray}" var="status"
											itemValue="#{status}" itemLabel="#{status.label}" />
									</h:selectOneMenu>
									<script>
										$('.selectpicker').selectpicker('refresh');
									</script>
									<br />
							</ui:fragment>
							<div class="publishRow">

								<p:commandLink id="btnSaveChanges"
									styleClass="btn btn-green"
									onclick="copyTextFromTinyMCEToTextarea('#createCompetence\\:formMain\\:description'); if(shouldOpenCanNotPublishModal()){$('#activityNotFoundModal').modal('show'); return false;} if(shouldOpenPublishModal()){$('#publishModal').modal('show');return false;}"
									action="#{competenceEditBean.save}"
									update=":#{cc.clientId}:formMain #{cc.attrs.toUpdate} :#{cc.clientId}:archiveDialog :#{cc.clientId}:restoreDialog :#{cc.clientId}:duplicateDialog">
										Save changes
								</p:commandLink>
								#{cc.attrs.activities}
								<ui:fragment rendered="#{competenceEditBean.competenceData.competenceId > 0}">
									<a href="#" data-toggle="modal" data-target="#duplicateComp">Duplicate</a>
								</ui:fragment>

								<div class="modal fade" id="publishModal" tabindex="-1" role="dialog" aria-labelledby="publishModal">
			        				<div class="modal-dialog" role="document">
			            				<div class="modal-content">
			                				<div class="modal-header">
			                    				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&#215;</span></button>
			                    				<h2 class="modal-title" id="duplicateCredential">Save changes</h2>
			                				</div>
			                				<div class="modal-body">
			                					<p>Are you sure you want to publish this #{msg['label.competence'].toLowerCase()}? Once published, only small edits can be made. #{msg['label.competence']} will be available for enrollment to all students with proper privileges. But also, the #{msg['label.competence'].toLowerCase()} structure could be seen by all users.</p>
			                				</div>
			                				<div class="modal-footer">
			                    				<p:commandLink
													styleClass="btn btn-green saveChangesSelector"
													action="#{competenceEditBean.save}"
													update=":#{cc.clientId}:formMain #{cc.attrs.toUpdate} :#{cc.clientId}:archiveDialog :#{cc.clientId}:restoreDialog :#{cc.clientId}:duplicateDialog"
													oncomplete="hideModal('publishModal');">
													<f:param name="page" value="#{facesContext.viewRoot.viewId}"></f:param>
													<f:param name="service" value="name:publish_resource_dialog"></f:param>
													Publish
												</p:commandLink>
			                    				<a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
			                				</div>
			            				</div>
			        				</div>
	    						</div>

	    						<a id="linkActivityNotFound" href="#" style="display: none;" data-toggle="modal" data-target="#activityNotFoundModal"></a>
								<div class="modal fade" id="activityNotFoundModal" tabindex="-1" role="dialog" aria-labelledby="activityNotFoundModal">
			        				<div class="modal-dialog" role="document">
			            				<div class="modal-content">
			                				<div class="modal-header">
			                    				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&#215;</span></button>
			                    				<h2 class="modal-title" id="duplicateCredential">#{msg['label.competence']} can not be published</h2>
			                				</div>
			                				<div class="modal-body">
			                					<p>You can not publish this #{msg['label.competence'].toLowerCase()} without activities. Please add activities to your #{msg['label.competence'].toLowerCase()}.</p>
			                				</div>
			                				<div class="modal-footer">
			                    				<a href="#" class="btn btn-default" data-dismiss="modal">Close</a>
			                				</div>
			            				</div>
			        				</div>
	    						</div>

	    						<ui:fragment rendered="#{competenceEditBean.competenceData.competenceId > 0 and not competenceEditBean.competenceData.archived}">
									<a href="#" class="linkRed" data-toggle="modal" data-target="#archiveModal">Archive</a>
								</ui:fragment>
								<ui:fragment rendered="#{competenceEditBean.competenceData.competenceId > 0 and competenceEditBean.competenceData.archived}">
									<a href="#" data-toggle="modal" data-target="#restoreModal">Restore</a>
								</ui:fragment>
							</div>
						</div>
					</div>
				</div>
			</div>

		    <script>
				var type = null;
				if('#{cc.attrs.role}' === "USER") {
					type = "user_created";
				} else {
					type = "university_created";
				}
				document.getElementById('#{cc.clientId}:formMain:hiddenType').value = type;
			</script>
		    </h:form>
	    	<script>
	        	var type = null;
	        	if('#{cc.attrs.role}' === "USER") {
	        		type = "user_created";
	        	} else {
	        		type = "university_created";
	        	}
				document.getElementById('#{cc.clientId}:formMain:hiddenType').value = type;
	        </script>

		    <h:form id="formRemoveActivityModal">
		    	<div class="modal fade" id="modalRemoveActivity" tabindex="-1" role="dialog" aria-labelledby="removeActivity">
		            <div class="modal-dialog" role="document">
		                <div class="modal-content">
		                    <div class="modal-header">
		                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&#215;</span></button>
		                        <h2 class="modal-title" id="removeActivity1">Remove Activity?</h2>
		                    </div>
		                    <div class="modal-body">
		                        <p>Are you sure you want to remove this activity from the #{msg['label.competence'].toLowerCase()}?<br></br><br></br></p>
		                    </div>
		                    <div class="modal-footer">
		                    	<p:commandLink
		                    		value="Remove"
		                    		styleClass="btn btn-red"
		                    		process="@this"
		                    		action="#{competenceEditBean.removeActivity()}"
		                    		update=":#{cc.clientId}:formMain:activityList"
		                    		oncomplete="$('#modalRemoveActivity').modal('hide');">
		                    	</p:commandLink>
		                        <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
		                    </div>
		                </div>
		            </div>
		        </div>
		    </h:form>

			<dialogs:archiveResource
	    		id="archiveDialog"
				archiveActionMethodName="archive"
				archiveAction="#{competenceEditBean.archive}"
				toUpdate=":#{cc.clientId}:formMain #{cc.attrs.toUpdate}"
				title="#{msg['label.competence']}"
				resourceType="#{msg['label.competence'].toLowerCase()}"
				resourceTypePlural="#{msg['label.competence.plural'].toLowerCase()}"
				learningContext="name:competence|id:#{competenceEditBean.competenceData.competenceId}"/>

			<dialogs:restoreResource
	    		id="restoreDialog"
				restoreActionMethodName="restore"
				restoreAction="#{competenceEditBean.restore}"
				toUpdate=":#{cc.clientId}:formMain #{cc.attrs.toUpdate}"
				title="#{msg['label.competence']}"
				resourceType="#{msg['label.competence'].toLowerCase()}"
				resourceTypePlural="#{msg['label.competence.plural'].toLowerCase()}"
				learningContext="name:competence|id:#{competenceEditBean.competenceData.competenceId}"/>

	 		<compDialogs:duplicateCompetence
	 			id="duplicateDialog"
	 			competence="#{competenceEditBean.competenceData}"
				duplicateActionMethodName="duplicate"
				duplicateAction="#{competenceEditBean.duplicate}"
				toUpdate=":#{cc.clientId}:formMain #{cc.attrs.toUpdate}"
				learningContext=""/>

		</div>
	</composite:implementation>
</ui:component>