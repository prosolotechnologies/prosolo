<ui:component
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:composite="http://java.sun.com/jsf/composite"
	xmlns:utilcomp="http://java.sun.com/jsf/composite/components/util">

	<!-- contentType can be:
			- post   when used in newPostForm
			- node   when used for Node visibility
	 -->

	<composite:interface>
		<composite:attribute name="visibility" required="true" />
		<composite:attribute name="contentType" default="post" />
		<composite:attribute name="containerDiv" type="java.lang.String" />
		<composite:attribute name="toRender" default="true" />
		<composite:attribute name="showLimitedVisibility" default="false" />
		<composite:attribute name="showPrivateVisibility" default="true" />
		<composite:attribute name="publicTooltipText" default="#{msg['composite.visibility.public']}" />
		<composite:attribute name="limitedTooltipText" default="#{msg['composite.visibility.limited']}" />
		<composite:attribute name="privateTooltipText" default="#{msg['composite.visibility.private']}" />
		<composite:attribute name="readOnly" default="false" />
		
		<composite:attribute name="displayLimitedInsteadOfPrivate" default="false" />
		
		<composite:attribute name="changePostVisibility"
			method-signature="void changeVisibility(org.prosolo.web.useractions.data.NewPostData)" />
			
		<composite:attribute name="changeNodeVisibility"
			method-signature="void changeNodeVisibility(org.prosolo.domainmodel.organization.Visible, java.lang.String)" />
	</composite:interface>
	
	<composite:implementation>
		<ui:param name="privateTooltipTextChanged" value="#{cc.attrs.displayLimitedInsteadOfPrivate ? cc.attrs.limitedTooltipText : cc.attrs.privateTooltipText}" />
		
		<utilcomp:messagesBundle var="msg" />

		<c:if test="#{cc.attrs.toRender}">
			<h:panelGroup layout="block" id="vis" class="visibility">
				<p:growl id="visibilityGrowl" showDetail="true" />

				<div class="hasTooltip drop #{cc.attrs.readOnly ? 'readOnly' : ''}
							#{cc.attrs.visibility == 'PUBLIC' ? 'public' : (
								cc.attrs.displayLimitedInsteadOfPrivate ? 'limited' : 'private'
							)}"
					title="#{cc.attrs.visibility == 'PUBLIC' ? cc.attrs.publicTooltipText : privateTooltipTextChanged}"
					onclick="sendServiceUse('MOUSE_CLICK', {context: '#{cc.attrs.context}.visibility'});"></div>
								
				<div class="dropdown hidden">
					<ul>
						<li class="#{cc.attrs.visibility == 'PUBLIC' ? 'selected' : ''}">
							<c:if test="#{cc.attrs.contentType == 'post'}">
								<p:commandLink
									value="Visible to all"
									update="@(#{cc.attrs.containerDiv} .visibility) visibilityGrowl"
									action="#{cc.attrs.changePostVisibility}">
									<f:param name="visType" value="PUBLIC" />
									<f:param name="context" value="#{cc.attrs.context}" />
								</p:commandLink>
							</c:if>
							
							<c:if test="#{cc.attrs.contentType == 'node'}">
								<p:commandLink
									value="Visible to all"
									update="@(#{cc.attrs.containerDiv} .visibility) visibilityGrowl"
									action="#{cc.attrs.changeNodeVisibility}">
									<f:param name="visType" value="PUBLIC" />
									<f:param name="context" value="#{cc.attrs.context}" />
								</p:commandLink>
							</c:if>
						</li>
						
						<li class="#{cc.attrs.visibility == 'PRIVATE' ? 'selected' : ''}">
							<c:if test="#{cc.attrs.contentType == 'post'}">
								<p:commandLink
									value="#{cc.attrs.displayLimitedInsteadOfPrivate ? 'Limited' : 'Private'}"
									update="@(#{cc.attrs.containerDiv} .visibility) visibilityGrowl"
									action="#{cc.attrs.changePostVisibility}">
									<f:param name="visType" value="PRIVATE" />
									<f:param name="context" value="#{cc.attrs.context}" />
								</p:commandLink>
							</c:if>
							
							<c:if test="#{cc.attrs.contentType == 'node'}">
								<p:commandLink
									value="#{cc.attrs.displayLimitedInsteadOfPrivate ? 'Limited' : 'Private'}"
									update="@(#{cc.attrs.containerDiv} .visibility) visibilityGrowl"
									action="#{cc.attrs.changeNodeVisibility}">
									<f:param name="visType" value="PRIVATE" />
									<f:param name="context" value="#{cc.attrs.context}" />
								</p:commandLink>
							</c:if>
						</li>
					</ul>
				</div>
				
				<h:panelGroup rendered="#{!cc.attrs.readOnly}">
				<script>
					$(function(){
						enableDropdown('#'+escapeColons('#{cc.clientId}:vis')+' .drop');
					});
				</script>
				</h:panelGroup>
				
				<utilcomp:tooltip target=".hasTooltip[title]" />
			</h:panelGroup>
		</c:if>
	</composite:implementation>
</ui:component>